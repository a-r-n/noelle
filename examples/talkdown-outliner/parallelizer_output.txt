noelle-parallel-load -load /home/bdh2903/repo/outliner/noelle/install/lib/Parallelizer.so -parallelizer bt.ll_pdg_prof.bc -o bt.ll_parallel.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1
noelle-load -load /home/bdh2903/repo/outliner/noelle/install/lib/Heuristics.so -load /home/bdh2903/repo/outliner/noelle/install/lib/ParallelizationTechnique.so -load /home/bdh2903/repo/outliner/noelle/install/lib/DSWP.so -load /home/bdh2903/repo/outliner/noelle/install/lib/DOALL.so -load /home/bdh2903/repo/outliner/noelle/install/lib/HELIX.so -load /home/bdh2903/repo/outliner/noelle/install/lib/Parallelizer.so -parallelizer bt.ll_pdg_prof.bc -o bt.ll_parallel.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1
opt -load /home/bdh2903/repo/outliner/noelle/install/lib/CallGraph.so -load /home/bdh2903/repo/outliner/noelle/install/lib/libSvf.so -load /home/bdh2903/repo/outliner/noelle/install/lib/libCudd.so -stat=false -load /home/bdh2903/repo/outliner/noelle/install/lib/libSCAFUtilities.so -load /home/bdh2903/repo/outliner/noelle/install/lib/libMemoryAnalysisModules.so -load /home/bdh2903/repo/outliner/noelle/install/lib/AllocAA.so -load /home/bdh2903/repo/outliner/noelle/install/lib/TalkDown.so -load /home/bdh2903/repo/outliner/noelle/install/lib/CallGraph.so -load /home/bdh2903/repo/outliner/noelle/install/lib/PDGAnalysis.so -load /home/bdh2903/repo/outliner/noelle/install/lib/Architecture.so -load /home/bdh2903/repo/outliner/noelle/install/lib/BasicUtilities.so -load /home/bdh2903/repo/outliner/noelle/install/lib/Task.so -load /home/bdh2903/repo/outliner/noelle/install/lib/DataFlow.so -load /home/bdh2903/repo/outliner/noelle/install/lib/HotProfiler.so -load /home/bdh2903/repo/outliner/noelle/install/lib/LoopStructure.so -load /home/bdh2903/repo/outliner/noelle/install/lib/Loops.so -load /home/bdh2903/repo/outliner/noelle/install/lib/Scheduler.so -load /home/bdh2903/repo/outliner/noelle/install/lib/Noelle.so -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -load /home/bdh2903/repo/outliner/noelle/install/lib/Heuristics.so -load /home/bdh2903/repo/outliner/noelle/install/lib/ParallelizationTechnique.so -load /home/bdh2903/repo/outliner/noelle/install/lib/DSWP.so -load /home/bdh2903/repo/outliner/noelle/install/lib/DOALL.so -load /home/bdh2903/repo/outliner/noelle/install/lib/HELIX.so -load /home/bdh2903/repo/outliner/noelle/install/lib/Parallelizer.so -parallelizer bt.ll_pdg_prof.bc -o bt.ll_parallel.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parent loop contains same annotation as subloop
Parallelizer: Start
Parallelizer:  Analyzing the module bt.ll_pdg_prof.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Disable "add" as cold function
Noelle:  Function "adi" does not have loops
Noelle:  Function "binvcrhs" does not have loops
Noelle:  Disable "binvrhs" as cold function
Noelle:  Disable "c_print_results" as cold function
Noelle:  Disable loop "0" as cold code
Noelle:  Disable loop "1" as cold code
Noelle:  Disable loop "2" as cold code
Noelle:  Disable loop "3" as cold code
Noelle:  Disable loop "4" as cold code
Noelle:  Disable loop "5" as cold code
Noelle:  Disable loop "6" as cold code
Noelle:  Disable loop "10" as cold code
Noelle:  Disable loop "11" as cold code
Noelle:  Disable loop "12" as cold code
Noelle:  Disable loop "13" as cold code
Noelle:  Disable loop "14" as cold code
Noelle:  Disable loop "15" as cold code
Noelle:  Disable loop "16" as cold code
Noelle:  Disable loop "17" as cold code
Noelle:  Disable loop "18" as cold code
Noelle:  Disable loop "19" as cold code
Noelle:  Disable loop "20" as cold code
Noelle:  Disable loop "21" as cold code
Noelle:  Disable loop "22" as cold code
Noelle:  Disable loop "23" as cold code
Noelle:  Disable loop "24" as cold code
Noelle:  Disable loop "25" as cold code
Noelle:  Disable loop "29" as cold code
Noelle:  Disable loop "30" as cold code
Noelle:  Disable loop "31" as cold code
Noelle:  Disable loop "32" as cold code
Noelle:  Disable loop "33" as cold code
Noelle:  Disable loop "34" as cold code
Noelle:  Disable loop "35" as cold code
Noelle:  Disable loop "36" as cold code
Noelle:  Disable loop "37" as cold code
Noelle:  Disable loop "38" as cold code
Noelle:  Disable loop "39" as cold code
Noelle:  Disable loop "40" as cold code
Noelle:  Disable loop "41" as cold code
Noelle:  Disable loop "42" as cold code
Noelle:  Disable loop "43" as cold code
Noelle:  Disable loop "44" as cold code
Noelle:  Disable loop "48" as cold code
Noelle:  Disable loop "49" as cold code
Noelle:  Disable loop "50" as cold code
Noelle:  Disable loop "51" as cold code
Noelle:  Disable loop "52" as cold code
Noelle:  Disable loop "53" as cold code
Noelle:  Disable loop "54" as cold code
Noelle:  Disable loop "55" as cold code
Noelle:  Disable loop "56" as cold code
Noelle:  Disable loop "57" as cold code
Noelle:  Disable loop "58" as cold code
Noelle:  Disable loop "59" as cold code
Noelle:  Disable loop "60" as cold code
Noelle:  Disable loop "61" as cold code
Noelle:  Disable loop "62" as cold code
Noelle:  Disable loop "63" as cold code
Noelle:  Disable loop "64" as cold code
Noelle:  Disable loop "65" as cold code
Noelle:  Disable loop "66" as cold code
Noelle:  Disable loop "67" as cold code
Noelle:  Disable "elapsed_time" as cold function
Noelle:  Disable "error_norm" as cold function
Noelle:  Disable "exact_rhs" as cold function
Noelle:  Disable "exact_solution" as cold function
Noelle:  Disable "initialize" as cold function
Noelle:  Disable "lhsinit" as cold function
Noelle:  Disable loop "84" as cold code
Noelle:  Disable loop "85" as cold code
Noelle:  Disable "rhs_norm" as cold function
Noelle:  Disable "set_constants" as cold function
Noelle:  Disable "timer_clear" as cold function
Noelle:  Disable "timer_read" as cold function
Noelle:  Disable "timer_start" as cold function
Noelle:  Disable "timer_stop" as cold function
Noelle:  Disable "verify" as cold function
Noelle:  Disable "wtime_" as cold function
Noelle:  Function "x_solve" does not have loops
Noelle:  Disable loop "94" as cold code
Noelle:  Disable loop "95" as cold code
Noelle:  Disable loop "99" as cold code
Noelle:  Disable loop "100" as cold code
Noelle:  Function "y_solve" does not have loops
Noelle:  Disable loop "106" as cold code
Noelle:  Disable loop "107" as cold code
Noelle:  Disable loop "111" as cold code
Noelle:  Disable loop "112" as cold code
Noelle:  Function "z_solve" does not have loops
Noelle:  Disable loop "118" as cold code
Noelle:  Disable loop "119" as cold code
Noelle:  Disable loop "123" as cold code
Noelle:  Disable loop "124" as cold code
Parallelizer:    There are 52 loops in the program we are going to consider
Parallelizer:  Filter out loops not worth considering
Parallelizer:  There are 8 loop nesting trees in the program
Parallelizer:    ID: 86 (1)
Parallelizer:      Function: "main"
Parallelizer:      Loop: "  %95 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !172"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 9.716479e+01 %
Parallelizer:      Average instructions per invocation = 2.556445e+09 %
Parallelizer:      Average iterations per invocation = 6.000000e+01 %
Parallelizer:    
Parallelizer:    ID: 120 (1)
Parallelizer:      Function: "z_solve_cell"
Parallelizer:      Loop: "  %57 = load i32, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !478"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 1.208174e+01 %
Parallelizer:      Average instructions per invocation = 5.211074e+06 %
Parallelizer:      Average iterations per invocation = 1.098361e+01 %
Parallelizer:    
Parallelizer:    ID: 89 (1)
Parallelizer:      Function: "x_backsubstitute"
Parallelizer:      Loop: "  %10 = load i32, i32* %1, align 4, !note.noelle !529, !noelle.pdg.inst.id !140"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 4.483618e+00 %
Parallelizer:      Average instructions per invocation = 1.933865e+06 %
Parallelizer:      Average iterations per invocation = 1.185246e+01 %
Parallelizer:    
Parallelizer:    ID: 88 (1)
Parallelizer:      Function: "matvec_sub"
Parallelizer:      Loop: "  %9 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !166"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 2.815556e+00 %
Parallelizer:      Average instructions per invocation = 3.680000e+02 %
Parallelizer:      Average iterations per invocation = 5.999995e+00 %
Parallelizer:    
Parallelizer:    ID: 108 (1)
Parallelizer:      Function: "y_solve_cell"
Parallelizer:      Loop: "  %57 = load i32, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !650"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 1.208174e+01 %
Parallelizer:      Average instructions per invocation = 5.211074e+06 %
Parallelizer:      Average iterations per invocation = 1.098361e+01 %
Parallelizer:    
Parallelizer:    ID: 87 (1)
Parallelizer:      Function: "matmul_sub"
Parallelizer:      Loop: "  %9 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !442"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 1.410073e+01 %
Parallelizer:      Average instructions per invocation = 1.843000e+03 %
Parallelizer:      Average iterations per invocation = 5.999995e+00 %
Parallelizer:    
Parallelizer:    ID: 96 (1)
Parallelizer:      Function: "x_solve_cell"
Parallelizer:      Loop: "  %57 = load i32, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !568"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 1.208174e+01 %
Parallelizer:      Average instructions per invocation = 5.211074e+06 %
Parallelizer:      Average iterations per invocation = 1.098361e+01 %
Parallelizer:    
Parallelizer:    ID: 101 (1)
Parallelizer:      Function: "y_backsubstitute"
Parallelizer:      Loop: "  %10 = load i32, i32* %2, align 4, !note.noelle !529, !noelle.pdg.inst.id !130"
Parallelizer:      Loop nesting level: 1
Parallelizer:      Hotness = 4.483618e+00 %
Parallelizer:      Average instructions per invocation = 1.933865e+06 %
Parallelizer:      Average iterations per invocation = 1.185246e+01 %
Parallelizer:    
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 125 savings = 3.911683e-07%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "main"
Parallelizer:  Loop 125 = "  %95 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !172"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         br i1 %104, label %._crit_edge4, label %._crit_edge5, !prof !1986, !noelle.pdg.inst.id !147 --->   %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 via variable
HELIX:         call fastcc void @adi(), !noelle.pdg.inst.id !138 --->   %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 via memory
HELIX:         call fastcc void @adi(), !noelle.pdg.inst.id !138 --->   %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 via memory
HELIX:         %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 --->   %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 via memory
HELIX:         %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 --->   %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 via memory
HELIX:         %108 = call i32 (i8*, ...) @printf(i8* %107, i32 %106), !noelle.pdg.inst.id !143 --->   call fastcc void @adi(), !noelle.pdg.inst.id !138 via memory
HELIX:         call fastcc void @adi(), !noelle.pdg.inst.id !138 --->   call fastcc void @adi(), !noelle.pdg.inst.id !138 via memory
HELIX:         call fastcc void @adi(), !noelle.pdg.inst.id !138 --->   call fastcc void @adi(), !noelle.pdg.inst.id !138 via memory
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         br i1 %104, label %._crit_edge4, label %._crit_edge5, !prof !1986, !noelle.pdg.inst.id !147 --->   %106 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !145 via variable
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         br i1 %97, label %98, label %113, !prof !1984, !noelle.pdg.inst.id !129 --->   %96 = load i32, i32* %6, align 4, !noelle.pdg.inst.id !168 via variable
HELIX:         br i1 %97, label %98, label %113, !prof !1984, !noelle.pdg.inst.id !129 --->   %95 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !172 via variable
HELIX:         br i1 %97, label %98, label %113, !prof !1984, !noelle.pdg.inst.id !129 --->   br i1 %97, label %98, label %113, !prof !1984, !noelle.pdg.inst.id !129 via variable
HELIX:         br i1 %97, label %98, label %113, !prof !1984, !noelle.pdg.inst.id !129 --->   %97 = icmp sle i32 %95, %96, !noelle.pdg.inst.id !166 via variable
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 7
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  %21 = load i32, i32* %12, align 4, !noelle.pdg.inst.id !30"
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  %20 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29"
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33"
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  %22 = icmp sle i32 %20, %21, !noelle.pdg.inst.id !31"
HELIX:     Instructions that belong to the SS
HELIX:         %22 = icmp sle i32 %20, %21, !noelle.pdg.inst.id !31
HELIX:         br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33
HELIX:         %21 = load i32, i32* %12, align 4, !noelle.pdg.inst.id !30
HELIX:         %20 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %29, label %31, label %30, !prof !41, !noelle.pdg.inst.id !42" -> "  %34 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !46"
HELIX:     Instructions that belong to the SS
HELIX:         %34 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !46
HELIX:   Sequential segment 2
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %29, label %31, label %30, !prof !41, !noelle.pdg.inst.id !42" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @adi(), !noelle.pdg.inst.id !50
HELIX:         %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 7
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  %21 = load i32, i32* %12, align 4, !noelle.pdg.inst.id !30"
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  %20 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29"
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33"
HELIX:        "  br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33" -> "  %22 = icmp sle i32 %20, %21, !noelle.pdg.inst.id !31"
HELIX:     Instructions that belong to the SS
HELIX:         %22 = icmp sle i32 %20, %21, !noelle.pdg.inst.id !31
HELIX:         br i1 %22, label %23, label %18, !prof !32, !noelle.pdg.inst.id !33
HELIX:         %21 = load i32, i32* %12, align 4, !noelle.pdg.inst.id !30
HELIX:         %20 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %29, label %31, label %30, !prof !41, !noelle.pdg.inst.id !42" -> "  %34 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !46"
HELIX:     Instructions that belong to the SS
HELIX:         %34 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !46
HELIX:   Sequential segment 2
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %29, label %31, label %30, !prof !41, !noelle.pdg.inst.id !42" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:        "  %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:        "  call fastcc void @adi(), !noelle.pdg.inst.id !50" -> "  call fastcc void @adi(), !noelle.pdg.inst.id !50"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @adi(), !noelle.pdg.inst.id !50
HELIX:         %36 = call i32 (i8*, ...) @printf(i8* %35, i32 %34), !noelle.pdg.inst.id !48
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @0(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i32, align 4, !noelle.pdg.inst.id !28
  %12 = bitcast i8* %0 to [16 x i64]*
  %13 = getelementptr inbounds [16 x i64], [16 x i64]* %12, i64 0, i64 0
  %14 = bitcast i64* %13 to i32**
  %15 = load i32*, i32** %14
  %16 = getelementptr inbounds [16 x i64], [16 x i64]* %12, i64 0, i64 8
  %17 = bitcast i64* %16 to i32**
  %18 = load i32*, i32** %17
  %19 = bitcast i8* %1 to [0 x i64]*
  %20 = ptrtoint i8* %2 to i64
  %21 = add i64 0, %20
  %22 = inttoptr i64 %21 to i8*
  %23 = ptrtoint i8* %3 to i64
  %24 = add i64 0, %23
  %25 = inttoptr i64 %24 to i8*
  %26 = ptrtoint i8* %2 to i64
  %27 = add i64 64, %26
  %28 = inttoptr i64 %27 to i8*
  %29 = ptrtoint i8* %3 to i64
  %30 = add i64 64, %29
  %31 = inttoptr i64 %30 to i8*
  %32 = ptrtoint i8* %2 to i64
  %33 = add i64 128, %32
  %34 = inttoptr i64 %33 to i8*
  %35 = ptrtoint i8* %3 to i64
  %36 = add i64 128, %35
  %37 = inttoptr i64 %36 to i8*
  br label %44

38:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

39:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %40 = load i64, i64* %8
  %41 = bitcast i8* %25 to i32*, !noelle.pdg.inst.id !29
  %42 = call i32 @pthread_spin_unlock(i32* %41) #31, !noelle.pdg.inst.id !30
  %43 = icmp eq i64 %40, 0
  br i1 %43, label %SS2-wait, label %SS2-entry

44:                                               ; preds = %7, %67
  store i64 0, i64* %8
  store i64 0, i64* %9
  store i64 0, i64* %10
  %45 = load i64, i64* %10
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %SS0-wait2, label %SS0-entry1

47:                                               ; preds = %SS-passed-checkexit
  %48 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !31
  %49 = bitcast i8* %25 to i32*, !noelle.pdg.inst.id !29
  %50 = call i32 @pthread_spin_unlock(i32* %49) #31, !noelle.pdg.inst.id !30
  %51 = srem i32 %48, 20, !noelle.pdg.inst.id !32
  %52 = icmp eq i32 %51, 0, !noelle.pdg.inst.id !33
  br i1 %52, label %60, label %53, !prof !34, !noelle.pdg.inst.id !35

53:                                               ; preds = %47
  %54 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !36
  %55 = icmp eq i32 %54, 1, !noelle.pdg.inst.id !37
  br i1 %55, label %59, label %56, !prof !38, !noelle.pdg.inst.id !39

56:                                               ; preds = %53
  %57 = load i64, i64* %9
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %SS1-wait4, label %SS1-entry3

59:                                               ; preds = %53
  br label %61, !noelle.pdg.inst.id !40

60:                                               ; preds = %47
  br label %61, !noelle.pdg.inst.id !41

61:                                               ; preds = %59, %60
  %62 = load i64, i64* %9
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %SS1-wait6, label %SS1-entry5

64:                                               ; preds = %SS2-entry9, %SS2-entry7
  call fastcc void @adi(), !noelle.pdg.inst.id !42
  %65 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !29
  %66 = call i32 @pthread_spin_unlock(i32* %65) #31, !noelle.pdg.inst.id !30
  br label %67, !noelle.pdg.inst.id !43

67:                                               ; preds = %64
  %68 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !44
  %69 = add nsw i32 %68, 1, !noelle.pdg.inst.id !45
  store i32 %69, i32* %18, align 4, !noelle.pdg.inst.id !46
  br label %44, !noelle.pdg.inst.id !47

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %70 = bitcast i8* %25 to i32*, !noelle.pdg.inst.id !29
  %71 = call i32 @pthread_spin_unlock(i32* %70) #31, !noelle.pdg.inst.id !30
  %72 = bitcast i8* %31 to i32*, !noelle.pdg.inst.id !29
  %73 = call i32 @pthread_spin_unlock(i32* %72) #31, !noelle.pdg.inst.id !30
  %74 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !29
  %75 = call i32 @pthread_spin_unlock(i32* %74) #31, !noelle.pdg.inst.id !30
  br label %38

SS0-wait:                                         ; preds = %SS1-entry
  %76 = bitcast i8* %22 to i32*, !noelle.pdg.inst.id !48
  %77 = call i32 @pthread_spin_lock(i32* %76) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %10
  br label %SS0-entry

SS1-entry:                                        ; preds = %SS2-entry, %SS1-wait
  %78 = load i64, i64* %10
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %SS2-entry
  %80 = bitcast i8* %28 to i32*, !noelle.pdg.inst.id !48
  %81 = call i32 @pthread_spin_lock(i32* %80) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %9
  br label %SS1-entry

SS2-entry:                                        ; preds = %39, %SS2-wait
  %82 = load i64, i64* %9
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %SS1-wait, label %SS1-entry

SS2-wait:                                         ; preds = %39
  %84 = bitcast i8* %34 to i32*, !noelle.pdg.inst.id !48
  %85 = call i32 @pthread_spin_lock(i32* %84) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %8
  br label %SS2-entry

SS0-entry1:                                       ; preds = %44, %SS0-wait2
  %86 = load i64, i64* %6
  %87 = icmp eq i64 1, %86
  br i1 %87, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %44
  %88 = bitcast i8* %22 to i32*, !noelle.pdg.inst.id !48
  %89 = call i32 @pthread_spin_lock(i32* %88) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %10
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %90 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !50
  %91 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !51
  %92 = icmp sle i32 %90, %91, !noelle.pdg.inst.id !52
  br i1 %92, label %47, label %39, !prof !53, !noelle.pdg.inst.id !54

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %93 = bitcast i8* %25 to i32*, !noelle.pdg.inst.id !29
  %94 = call i32 @pthread_spin_unlock(i32* %93) #31, !noelle.pdg.inst.id !30
  %95 = bitcast i8* %31 to i32*, !noelle.pdg.inst.id !29
  %96 = call i32 @pthread_spin_unlock(i32* %95) #31, !noelle.pdg.inst.id !30
  %97 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !29
  %98 = call i32 @pthread_spin_unlock(i32* %97) #31, !noelle.pdg.inst.id !30
  br label %38

SS1-entry3:                                       ; preds = %56, %SS1-wait4
  %99 = bitcast i8* %31 to i32*, !noelle.pdg.inst.id !29
  %100 = call i32 @pthread_spin_unlock(i32* %99) #31, !noelle.pdg.inst.id !30
  %101 = load i64, i64* %8
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %SS2-wait8, label %SS2-entry7

SS1-wait4:                                        ; preds = %56
  %103 = bitcast i8* %28 to i32*, !noelle.pdg.inst.id !48
  %104 = call i32 @pthread_spin_lock(i32* %103) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %9
  br label %SS1-entry3

SS1-entry5:                                       ; preds = %61, %SS1-wait6
  %105 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !55
  %106 = bitcast i8* %31 to i32*, !noelle.pdg.inst.id !29
  %107 = call i32 @pthread_spin_unlock(i32* %106) #31, !noelle.pdg.inst.id !30
  %108 = getelementptr [16 x i8], [16 x i8]* @.str.34, i64 0, i64 0, !noelle.pdg.inst.id !56
  %109 = load i64, i64* %8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %SS2-wait10, label %SS2-entry9

SS1-wait6:                                        ; preds = %61
  %111 = bitcast i8* %28 to i32*, !noelle.pdg.inst.id !48
  %112 = call i32 @pthread_spin_lock(i32* %111) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %9
  br label %SS1-entry5

SS2-entry7:                                       ; preds = %SS1-entry3, %SS2-wait8
  br label %64, !noelle.pdg.inst.id !57

SS2-wait8:                                        ; preds = %SS1-entry3
  %113 = bitcast i8* %34 to i32*, !noelle.pdg.inst.id !48
  %114 = call i32 @pthread_spin_lock(i32* %113) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %8
  br label %SS2-entry7

SS2-entry9:                                       ; preds = %SS1-entry5, %SS2-wait10
  %115 = call i32 (i8*, ...) @printf(i8* %108, i32 %105), !noelle.pdg.inst.id !58
  br label %64, !noelle.pdg.inst.id !59

SS2-wait10:                                       ; preds = %SS1-entry5
  %116 = bitcast i8* %34 to i32*, !noelle.pdg.inst.id !48
  %117 = call i32 @pthread_spin_lock(i32* %116) #31, !noelle.pdg.inst.id !49
  store i64 1, i64* %8
  br label %SS2-entry9
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 125 has been parallelized
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 127 savings = 3.145886e-06%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "z_solve_cell"
Parallelizer:  Loop 127 = "  %57 = load i32, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !478"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %113 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !433 via memory
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %103 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !461 via memory
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %92 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !271 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !174 --->   %73 = icmp slt i32 %69, %72, !note.noelle !1565, !noelle.pdg.inst.id !287 via variable
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %158 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !197 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !165 --->   %66 = icmp slt i32 %62, %65, !note.noelle !1565, !noelle.pdg.inst.id !292 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !174 --->   br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !174 via variable
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %81 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !281 via memory
HELIX:         store i32 %175, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !177 --->   store i32 1, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !680 via memory
HELIX:         %69 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !465 --->   store i32 1, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !680 via memory
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %136 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !229 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !174 --->   %72 = sub nsw i32 %71, 1, !note.noelle !1565, !noelle.pdg.inst.id !369 via variable
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %124 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !822 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !165 --->   br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !165 via variable
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %147 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !590 via memory
HELIX:         store i32 %183, i32* %3, align 4, !note.noelle !1562, !noelle.pdg.inst.id !157 --->   %169 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !673 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !165 --->   %62 = load i32, i32* %1, align 4, !note.noelle !1565, !noelle.pdg.inst.id !539 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !174 --->   %70 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !371 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !174 --->   %71 = load i32, i32* %70, align 4, !note.noelle !1565, !noelle.pdg.inst.id !289 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !174 --->   %69 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !465 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !165 --->   %65 = sub nsw i32 %64, 1, !note.noelle !1565, !noelle.pdg.inst.id !294 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !165 --->   %64 = load i32, i32* %63, align 4, !note.noelle !1565, !noelle.pdg.inst.id !296 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !165 --->   %63 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !609 via variable
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %90 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !105"
HELIX:        "  %87 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !102" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %66 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !80" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %55 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !69" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %98 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !113" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %143 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !159" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %151 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !168" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %132 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !148" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %110 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !125" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %121 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !137" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %90 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !105" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %146 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !162" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %58 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !72" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %101 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !116" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %124 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !140" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %80 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !94" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %135 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !151" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %113 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !128" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %87 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !102"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %84 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !99"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %74 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !88"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %66 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !80"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %63 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !77"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %107 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !122"
HELIX:        "  %84 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !99" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %74 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !88" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %95 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !110" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %140 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !156" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %63 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !77" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %129 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !145" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %118 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !134" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %107 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !122" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %110 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !125"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %38 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !48"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %113 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !128"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %143 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !159"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %121 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !137"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %135 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !151"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %80 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !94"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %140 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !156"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %124 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !140"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %151 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !168"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %101 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %118 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !134"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %132 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !148"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %58 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !72"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %129 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !145"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %98 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !113"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %55 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %146 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !162"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %26 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %26 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %95 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !110"
HELIX:     Instructions that belong to the SS
HELIX:         %95 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !110
HELIX:         %39 = add nsw i32 %38, 1, !note.noelle !28, !noelle.pdg.inst.id !49
HELIX:         %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44
HELIX:         %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42
HELIX:         %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43
HELIX:         %26 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
HELIX:         %146 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !162
HELIX:         %55 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !69
HELIX:         br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60
HELIX:         %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91
HELIX:         %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57
HELIX:         br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66
HELIX:         store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         %98 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !113
HELIX:         %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54
HELIX:         %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !55
HELIX:         %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40
HELIX:         %107 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !122
HELIX:         store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50
HELIX:         %110 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !125
HELIX:         br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46
HELIX:         %38 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !48
HELIX:         %63 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !77
HELIX:         %118 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !134
HELIX:         %66 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !80
HELIX:         %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33
HELIX:         store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64
HELIX:         %74 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !88
HELIX:         %101 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !116
HELIX:         %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83
HELIX:         %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32
HELIX:         %135 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !151
HELIX:         store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52
HELIX:         %87 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !102
HELIX:         store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170
HELIX:         %151 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !168
HELIX:         %90 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !105
HELIX:         %84 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !99
HELIX:         %113 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !128
HELIX:         %143 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !159
HELIX:         %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58
HELIX:         %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62
HELIX:         %121 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !137
HELIX:         %80 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !94
HELIX:         %140 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !156
HELIX:         %124 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !140
HELIX:         %152 = add nsw i32 %151, 1, !note.noelle !38, !noelle.pdg.inst.id !169
HELIX:         %132 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !148
HELIX:         %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41
HELIX:         %58 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !72
HELIX:         %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56
HELIX:         %50 = add nsw i32 %49, 1, !note.noelle !38, !noelle.pdg.inst.id !63
HELIX:         %129 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !145
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133
HELIX:         call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166
HELIX:         call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %63 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !77"
HELIX:        "  %62 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !76" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %56 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !70" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %53 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !67" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %65 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !79" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %151 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !168" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %74 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !88" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %68 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !82" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %71 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !85" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %59 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !73" -> "  store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %63 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !77" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %57 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !71" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %78 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !92" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %54 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !68" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %66 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !80" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %72 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !86" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %60 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !74" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %75 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !89" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83" -> "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %62 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !76"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %61 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !75"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %58 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !72"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %57 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !71"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %56 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !70"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %55 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %67 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !81"
HELIX:        "  %61 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !75" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %58 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !72" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %64 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !78" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %76 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !90" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %55 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !69" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %73 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !87" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %70 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !84" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %67 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !81" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %68 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !82"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %38 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !48"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %71 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !85"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %75 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !89"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %60 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !74"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %76 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !90"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %72 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !86"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %151 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !168"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %66 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !80"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %70 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !84"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %74 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !88"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %54 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !68"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %73 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !87"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %65 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !79"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %59 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !73"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60"
HELIX:        "  store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %53 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !67"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %78 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !92"
HELIX:        "  store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %26 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %26 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %64 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !78"
HELIX:     Instructions that belong to the SS
HELIX:         %64 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !78
HELIX:         %39 = add nsw i32 %38, 1, !note.noelle !28, !noelle.pdg.inst.id !49
HELIX:         %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44
HELIX:         %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42
HELIX:         %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43
HELIX:         %26 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
HELIX:         %78 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !92
HELIX:         %53 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !67
HELIX:         br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60
HELIX:         %59 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !73
HELIX:         %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57
HELIX:         br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66
HELIX:         store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         %65 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !79
HELIX:         %42 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !54
HELIX:         %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !55
HELIX:         %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40
HELIX:         %67 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !81
HELIX:         store i32 %39, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50
HELIX:         %68 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !82
HELIX:         br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46
HELIX:         %38 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !48
HELIX:         %55 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !69
HELIX:         %70 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !84
HELIX:         %56 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !70
HELIX:         %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33
HELIX:         store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64
HELIX:         %58 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !72
HELIX:         %66 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !80
HELIX:         %57 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !71
HELIX:         %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32
HELIX:         %75 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !89
HELIX:         store i32 1, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !52
HELIX:         %62 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !76
HELIX:         store i32 %152, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !170
HELIX:         %151 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !168
HELIX:         %63 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !77
HELIX:         %61 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !75
HELIX:         %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83
HELIX:         %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91
HELIX:         %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58
HELIX:         %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62
HELIX:         %71 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !85
HELIX:         %60 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !74
HELIX:         %76 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !90
HELIX:         %72 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !86
HELIX:         %152 = add nsw i32 %151, 1, !note.noelle !38, !noelle.pdg.inst.id !169
HELIX:         %74 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !88
HELIX:         %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41
HELIX:         %54 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !68
HELIX:         %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56
HELIX:         %50 = add nsw i32 %49, 1, !note.noelle !38, !noelle.pdg.inst.id !63
HELIX:         %73 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !87
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142
HELIX:         call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166
HELIX:         call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @2(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !30
  %11 = bitcast i8* %0 to [32 x i64]*
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 0
  %13 = bitcast i64* %12 to i32**
  %14 = load i32*, i32** %13
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 8
  %16 = bitcast i64* %15 to i32**
  %17 = load i32*, i32** %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 16
  %19 = bitcast i64* %18 to i32**
  %20 = load i32*, i32** %19
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 24
  %22 = bitcast i64* %21 to i32**
  %23 = load i32*, i32** %22
  %24 = bitcast i8* %1 to [0 x i64]*
  %25 = ptrtoint i8* %2 to i64
  %26 = add i64 0, %25
  %27 = inttoptr i64 %26 to i8*
  %28 = ptrtoint i8* %3 to i64
  %29 = add i64 0, %28
  %30 = inttoptr i64 %29 to i8*
  %31 = ptrtoint i8* %2 to i64
  %32 = add i64 64, %31
  %33 = inttoptr i64 %32 to i8*
  %34 = ptrtoint i8* %3 to i64
  %35 = add i64 64, %34
  %36 = inttoptr i64 %35 to i8*
  br label %43

37:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

38:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %39 = load i64, i64* %8
  %40 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %41 = call i32 @pthread_spin_unlock(i32* %40) #31, !noelle.pdg.inst.id !32
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %SS1-wait, label %SS1-entry

43:                                               ; preds = %7, %58
  store i64 0, i64* %8
  store i64 0, i64* %9
  %44 = load i64, i64* %9
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %SS0-wait2, label %SS0-entry1

46:                                               ; preds = %SS-passed-checkexit
  store i32 1, i32* %17, align 4, !note.noelle !28, !noelle.pdg.inst.id !33
  %47 = load i64, i64* %8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %SS1-wait4, label %SS1-entry3

49:                                               ; preds = %SS1-entry3, %71
  %50 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !36
  %51 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !37
  %52 = load i32, i32* %51, align 4, !note.noelle !34, !noelle.pdg.inst.id !38
  %53 = sub nsw i32 %52, 1, !note.noelle !34, !noelle.pdg.inst.id !39
  %54 = icmp slt i32 %50, %53, !note.noelle !34, !noelle.pdg.inst.id !40
  br i1 %54, label %63, label %55, !prof !41, !note.noelle !34, !noelle.pdg.inst.id !42

55:                                               ; preds = %49
  %56 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !31
  %57 = call i32 @pthread_spin_unlock(i32* %56) #31, !noelle.pdg.inst.id !32
  br label %58, !note.noelle !28, !noelle.pdg.inst.id !43

58:                                               ; preds = %55
  %59 = load i32, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !44
  %60 = add nsw i32 %59, 1, !note.noelle !28, !noelle.pdg.inst.id !45
  store i32 %60, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !46
  %61 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %62 = call i32 @pthread_spin_unlock(i32* %61) #31, !noelle.pdg.inst.id !32
  br label %43, !note.noelle !28, !noelle.pdg.inst.id !47

63:                                               ; preds = %49
  store i32 1, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !48
  br label %64, !note.noelle !34, !noelle.pdg.inst.id !49

64:                                               ; preds = %63, %173
  %65 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !50
  %66 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !51
  %67 = load i32, i32* %66, align 4, !note.noelle !34, !noelle.pdg.inst.id !52
  %68 = sub nsw i32 %67, 1, !note.noelle !34, !noelle.pdg.inst.id !53
  %69 = icmp slt i32 %65, %68, !note.noelle !34, !noelle.pdg.inst.id !54
  br i1 %69, label %74, label %70, !prof !55, !note.noelle !34, !noelle.pdg.inst.id !56

70:                                               ; preds = %64
  br label %71, !note.noelle !34, !noelle.pdg.inst.id !57

71:                                               ; preds = %70
  %72 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !58
  %73 = add nsw i32 %72, 1, !note.noelle !34, !noelle.pdg.inst.id !59
  store i32 %73, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !60
  br label %49, !note.noelle !34, !noelle.pdg.inst.id !61

74:                                               ; preds = %64
  %75 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !62
  %76 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !63
  %77 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !64
  %78 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !65
  %79 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !66
  %80 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !67
  %81 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !68
  %82 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !69
  %83 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !70
  %84 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !71
  %85 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !72
  %86 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !73
  %87 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !74
  %88 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !75
  %89 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !76
  %90 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !77
  %91 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !78
  %92 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !79
  %93 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !80
  %94 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !81
  %95 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !82
  %96 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !83
  %97 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !84
  %98 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !85
  %99 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !86
  %100 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !87
  %101 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !88
  %102 = sext i32 %75 to i64, !note.noelle !34, !noelle.pdg.inst.id !89
  %103 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %102, !note.noelle !34, !noelle.pdg.inst.id !90
  %104 = sext i32 %76 to i64, !note.noelle !34, !noelle.pdg.inst.id !91
  %105 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %103, i64 0, i64 %104, !note.noelle !34, !noelle.pdg.inst.id !92
  %106 = sext i32 %77 to i64, !note.noelle !34, !noelle.pdg.inst.id !93
  %107 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %105, i64 0, i64 %106, !note.noelle !34, !noelle.pdg.inst.id !94
  %108 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %107, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !95
  %109 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %108, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !96
  %110 = sext i32 %78 to i64, !note.noelle !34, !noelle.pdg.inst.id !97
  %111 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %110, !note.noelle !34, !noelle.pdg.inst.id !98
  %112 = sext i32 %79 to i64, !note.noelle !34, !noelle.pdg.inst.id !99
  %113 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %111, i64 0, i64 %112, !note.noelle !34, !noelle.pdg.inst.id !100
  %114 = sub nsw i32 %80, 1, !note.noelle !34, !noelle.pdg.inst.id !101
  %115 = sext i32 %114 to i64, !note.noelle !34, !noelle.pdg.inst.id !102
  %116 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %113, i64 0, i64 %115, !note.noelle !34, !noelle.pdg.inst.id !103
  %117 = getelementptr inbounds [5 x double], [5 x double]* %116, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !104
  %118 = sext i32 %81 to i64, !note.noelle !34, !noelle.pdg.inst.id !105
  %119 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %118, !note.noelle !34, !noelle.pdg.inst.id !106
  %120 = sext i32 %82 to i64, !note.noelle !34, !noelle.pdg.inst.id !107
  %121 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %119, i64 0, i64 %120, !note.noelle !34, !noelle.pdg.inst.id !108
  %122 = sext i32 %83 to i64, !note.noelle !34, !noelle.pdg.inst.id !109
  %123 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %121, i64 0, i64 %122, !note.noelle !34, !noelle.pdg.inst.id !110
  %124 = getelementptr inbounds [5 x double], [5 x double]* %123, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !111
  call fastcc void @matvec_sub([5 x double]* %109, double* %117, double* %124), !note.noelle !34, !noelle.pdg.inst.id !112
  %125 = sext i32 %84 to i64, !note.noelle !34, !noelle.pdg.inst.id !113
  %126 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %125, !note.noelle !34, !noelle.pdg.inst.id !114
  %127 = sext i32 %85 to i64, !note.noelle !34, !noelle.pdg.inst.id !115
  %128 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %126, i64 0, i64 %127, !note.noelle !34, !noelle.pdg.inst.id !116
  %129 = sext i32 %86 to i64, !note.noelle !34, !noelle.pdg.inst.id !117
  %130 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %128, i64 0, i64 %129, !note.noelle !34, !noelle.pdg.inst.id !118
  %131 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %130, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !119
  %132 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %131, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !120
  %133 = sext i32 %87 to i64, !note.noelle !34, !noelle.pdg.inst.id !121
  %134 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %133, !note.noelle !34, !noelle.pdg.inst.id !122
  %135 = sext i32 %88 to i64, !note.noelle !34, !noelle.pdg.inst.id !123
  %136 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %134, i64 0, i64 %135, !note.noelle !34, !noelle.pdg.inst.id !124
  %137 = sub nsw i32 %89, 1, !note.noelle !34, !noelle.pdg.inst.id !125
  %138 = sext i32 %137 to i64, !note.noelle !34, !noelle.pdg.inst.id !126
  %139 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %136, i64 0, i64 %138, !note.noelle !34, !noelle.pdg.inst.id !127
  %140 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %139, i64 0, i64 2, !note.noelle !34, !noelle.pdg.inst.id !128
  %141 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %140, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !129
  %142 = sext i32 %90 to i64, !note.noelle !34, !noelle.pdg.inst.id !130
  %143 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %142, !note.noelle !34, !noelle.pdg.inst.id !131
  %144 = sext i32 %91 to i64, !note.noelle !34, !noelle.pdg.inst.id !132
  %145 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %143, i64 0, i64 %144, !note.noelle !34, !noelle.pdg.inst.id !133
  %146 = sext i32 %92 to i64, !note.noelle !34, !noelle.pdg.inst.id !134
  %147 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %145, i64 0, i64 %146, !note.noelle !34, !noelle.pdg.inst.id !135
  %148 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %147, i64 0, i64 1, !note.noelle !34, !noelle.pdg.inst.id !136
  %149 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %148, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !137
  call fastcc void @matmul_sub([5 x double]* %132, [5 x double]* %141, [5 x double]* %149), !note.noelle !34, !noelle.pdg.inst.id !138
  %150 = sext i32 %93 to i64, !note.noelle !34, !noelle.pdg.inst.id !139
  %151 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %150, !note.noelle !34, !noelle.pdg.inst.id !140
  %152 = sext i32 %94 to i64, !note.noelle !34, !noelle.pdg.inst.id !141
  %153 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %151, i64 0, i64 %152, !note.noelle !34, !noelle.pdg.inst.id !142
  %154 = sext i32 %95 to i64, !note.noelle !34, !noelle.pdg.inst.id !143
  %155 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %153, i64 0, i64 %154, !note.noelle !34, !noelle.pdg.inst.id !144
  %156 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %155, i64 0, i64 1, !note.noelle !34, !noelle.pdg.inst.id !145
  %157 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %156, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !146
  %158 = sext i32 %96 to i64, !note.noelle !34, !noelle.pdg.inst.id !147
  %159 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %158, !note.noelle !34, !noelle.pdg.inst.id !148
  %160 = sext i32 %97 to i64, !note.noelle !34, !noelle.pdg.inst.id !149
  %161 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %159, i64 0, i64 %160, !note.noelle !34, !noelle.pdg.inst.id !150
  %162 = sext i32 %98 to i64, !note.noelle !34, !noelle.pdg.inst.id !151
  %163 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %161, i64 0, i64 %162, !note.noelle !34, !noelle.pdg.inst.id !152
  %164 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %163, i64 0, i64 2, !note.noelle !34, !noelle.pdg.inst.id !153
  %165 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %164, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !154
  %166 = sext i32 %99 to i64, !note.noelle !34, !noelle.pdg.inst.id !155
  %167 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %166, !note.noelle !34, !noelle.pdg.inst.id !156
  %168 = sext i32 %100 to i64, !note.noelle !34, !noelle.pdg.inst.id !157
  %169 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %167, i64 0, i64 %168, !note.noelle !34, !noelle.pdg.inst.id !158
  %170 = sext i32 %101 to i64, !note.noelle !34, !noelle.pdg.inst.id !159
  %171 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %169, i64 0, i64 %170, !note.noelle !34, !noelle.pdg.inst.id !160
  %172 = getelementptr inbounds [5 x double], [5 x double]* %171, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !161
  call fastcc void @binvcrhs([5 x double]* %157, [5 x double]* %165, double* %172), !note.noelle !34, !noelle.pdg.inst.id !162
  br label %173, !note.noelle !34, !noelle.pdg.inst.id !163

173:                                              ; preds = %74
  %174 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !164
  %175 = add nsw i32 %174, 1, !note.noelle !34, !noelle.pdg.inst.id !165
  store i32 %175, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !166
  br label %64, !note.noelle !34, !noelle.pdg.inst.id !167

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %176 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %177 = call i32 @pthread_spin_unlock(i32* %176) #31, !noelle.pdg.inst.id !32
  %178 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !31
  %179 = call i32 @pthread_spin_unlock(i32* %178) #31, !noelle.pdg.inst.id !32
  br label %37

SS0-wait:                                         ; preds = %SS1-entry
  %180 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !168
  %181 = call i32 @pthread_spin_lock(i32* %180) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %9
  br label %SS0-entry

SS1-entry:                                        ; preds = %38, %SS1-wait
  %182 = load i64, i64* %9
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %38
  %184 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !168
  %185 = call i32 @pthread_spin_lock(i32* %184) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %8
  br label %SS1-entry

SS0-entry1:                                       ; preds = %43, %SS0-wait2
  %186 = load i64, i64* %6
  %187 = icmp eq i64 1, %186
  br i1 %187, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %43
  %188 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !168
  %189 = call i32 @pthread_spin_lock(i32* %188) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %9
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %190 = load i32, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !170
  %191 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !171
  %192 = icmp slt i32 %190, %191, !note.noelle !28, !noelle.pdg.inst.id !172
  br i1 %192, label %46, label %38, !prof !173, !note.noelle !28, !noelle.pdg.inst.id !174

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %193 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %194 = call i32 @pthread_spin_unlock(i32* %193) #31, !noelle.pdg.inst.id !32
  %195 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !31
  %196 = call i32 @pthread_spin_unlock(i32* %195) #31, !noelle.pdg.inst.id !32
  br label %37

SS1-entry3:                                       ; preds = %46, %SS1-wait4
  br label %49, !note.noelle !28, !noelle.pdg.inst.id !175

SS1-wait4:                                        ; preds = %46
  %197 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !168
  %198 = call i32 @pthread_spin_lock(i32* %197) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %8
  br label %SS1-entry3
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 127 has been parallelized
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 133 savings = 8.477035e-06%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "x_backsubstitute"
Parallelizer:  Loop 133 = "  %10 = load i32, i32* %1, align 4, !note.noelle !529, !noelle.pdg.inst.id !140"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !49 --->   br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !49 via variable
HELIX:         br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !49 --->   %32 = load i32, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !108 via variable
HELIX:         %32 = load i32, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !108 --->   store i32 0, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !113 via memory
HELIX:         store i32 %95, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !52 --->   store i32 0, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !113 via memory
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 via variable
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %18 = icmp slt i32 %14, %17, !note.noelle !533, !noelle.pdg.inst.id !296 via variable
HELIX:         store i32 %111, i32* %1, align 4, !note.noelle !529, !noelle.pdg.inst.id !33 --->   %81 = load i32, i32* %1, align 4, !note.noelle !533, !noelle.pdg.inst.id !144 via memory
HELIX:         store i32 %111, i32* %1, align 4, !note.noelle !529, !noelle.pdg.inst.id !33 --->   %48 = load i32, i32* %1, align 4, !note.noelle !533, !noelle.pdg.inst.id !92 via memory
HELIX:         store i32 %111, i32* %1, align 4, !note.noelle !529, !noelle.pdg.inst.id !33 --->   %35 = load i32, i32* %1, align 4, !note.noelle !533, !noelle.pdg.inst.id !102 via memory
HELIX:         store i32 %103, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !168 --->   store i32 1, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !128 via memory
HELIX:         %21 = load i32, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !122 --->   store i32 1, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !128 via memory
HELIX:         store i32 %111, i32* %1, align 4, !note.noelle !529, !noelle.pdg.inst.id !33 --->   %65 = load i32, i32* %1, align 4, !note.noelle !533, !noelle.pdg.inst.id !196 via memory
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !115 --->   %25 = icmp slt i32 %21, %24, !note.noelle !533, !noelle.pdg.inst.id !152 via variable
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %14 = load i32, i32* %2, align 4, !note.noelle !533, !noelle.pdg.inst.id !133 via variable
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %15 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !131 via variable
HELIX:         br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !104 --->   br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !104 via variable
HELIX:         br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !104 --->   %29 = icmp slt i32 %28, 5, !note.noelle !533, !noelle.pdg.inst.id !118 via variable
HELIX:         %28 = load i32, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !206 --->   store i32 0, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !198 via memory
HELIX:         store i32 %99, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !178 --->   store i32 0, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !198 via memory
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %17 = sub nsw i32 %16, 1, !note.noelle !533, !noelle.pdg.inst.id !345 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !115 --->   br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !115 via variable
HELIX:         br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !104 --->   %28 = load i32, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !206 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !115 --->   %23 = load i32, i32* %22, align 4, !note.noelle !533, !noelle.pdg.inst.id !150 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !115 --->   %21 = load i32, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !122 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !115 --->   %22 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !120 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !115 --->   %24 = sub nsw i32 %23, 1, !note.noelle !533, !noelle.pdg.inst.id !154 via variable
HELIX:         br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !49 --->   %33 = icmp slt i32 %32, 5, !note.noelle !533, !noelle.pdg.inst.id !106 via variable
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %16 = load i32, i32* %15, align 4, !note.noelle !533, !noelle.pdg.inst.id !136 via variable
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %71 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !87"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %120 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !137"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %123 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !140"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %74 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !91"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %100 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !117" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %114 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !131" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %133 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !151" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %77 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !94"
HELIX:        "  %129 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !146" -> "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %97 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !114" -> "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %83 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !100" -> "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %83 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !100"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %87 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !104"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128"
HELIX:        "  %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43" -> "  store i32 1, i32* %19, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  store i32 1, i32* %19, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !44"
HELIX:        "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %114 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !131"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %100 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !117"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %104 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !121"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %133 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !151"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %55 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !65"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %108 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !125"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  %83 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !100" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %71 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !87" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %97 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !114" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %129 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !146" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %33 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %33 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %129 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !146"
HELIX:        "  %120 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !137" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %74 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !91" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %104 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !121" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %87 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !104" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %97 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !114"
HELIX:        "  %123 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !140" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %77 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !94" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %108 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !125" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %90 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !107" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %90 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !107"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %44 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !51"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46"
HELIX:     Instructions that belong to the SS
HELIX:         %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46
HELIX:         br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63
HELIX:         %44 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !51
HELIX:         %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71
HELIX:         %45 = add nsw i32 %44, -1, !note.noelle !28, !noelle.pdg.inst.id !52
HELIX:         %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97
HELIX:         store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78
HELIX:         %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         %90 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !107
HELIX:         %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58
HELIX:         store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67
HELIX:         %97 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !114
HELIX:         store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53
HELIX:         %129 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !146
HELIX:         %134 = add nsw i32 %133, 1, !note.noelle !41, !noelle.pdg.inst.id !152
HELIX:         %33 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59
HELIX:         store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69
HELIX:         %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82
HELIX:         %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45
HELIX:         %64 = add nsw i32 %63, 1, !note.noelle !41, !noelle.pdg.inst.id !77
HELIX:         %83 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !100
HELIX:         store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80
HELIX:         br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85
HELIX:         %72 = add nsw i32 %71, 1, !note.noelle !41, !noelle.pdg.inst.id !88
HELIX:         %87 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !104
HELIX:         %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43
HELIX:         %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61
HELIX:         store i32 1, i32* %19, align 4, !note.noelle !28, !noelle.pdg.inst.id !39
HELIX:         %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76
HELIX:         %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72
HELIX:         %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143
HELIX:         br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38
HELIX:         %56 = add nsw i32 %55, 1, !note.noelle !41, !noelle.pdg.inst.id !66
HELIX:         %120 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !137
HELIX:         %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47
HELIX:         %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83
HELIX:         %71 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !87
HELIX:         %123 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !140
HELIX:         %74 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !91
HELIX:         store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89
HELIX:         %77 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !94
HELIX:         %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128
HELIX:         store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153
HELIX:         %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !44
HELIX:         store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55
HELIX:         %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60
HELIX:         %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110
HELIX:         %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57
HELIX:         %108 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !125
HELIX:         %55 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !65
HELIX:         br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49
HELIX:         br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74
HELIX:         %114 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !131
HELIX:         %100 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !117
HELIX:         %104 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !121
HELIX:         %133 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !151
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %119, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %117 = load double, double* %116, align 8, !note.noelle !41, !noelle.pdg.inst.id !134"
HELIX:        "  store double %119, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %86 = load double, double* %85, align 8, !note.noelle !41, !noelle.pdg.inst.id !103"
HELIX:     Instructions that belong to the SS
HELIX:         %86 = load double, double* %85, align 8, !note.noelle !41, !noelle.pdg.inst.id !103
HELIX:         %119 = fsub double %86, %118, !note.noelle !41, !noelle.pdg.inst.id !136
HELIX:         %118 = fmul double %103, %117, !note.noelle !41, !noelle.pdg.inst.id !135
HELIX:         store double %119, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149
HELIX:         %117 = load double, double* %116, align 8, !note.noelle !41, !noelle.pdg.inst.id !134
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %71 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !87"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %87 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !104"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %88 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !105"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %74 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !91"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %82 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !99" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %86 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !103" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %133 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !151" -> "  store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %75 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !92"
HELIX:        "  %90 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !107" -> "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %81 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !98" -> "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %77 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !94" -> "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %77 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !94"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %78 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !95"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102"
HELIX:        "  %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43" -> "  store i32 1, i32* %19, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  store i32 1, i32* %19, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !44"
HELIX:        "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %86 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !103"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %82 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !99"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %83 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !100"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %133 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !151"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %55 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !65"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %84 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !101"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45"
HELIX:        "  store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  %77 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !94" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %71 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !87" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %81 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !98" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %90 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !107" -> "  store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %33 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %33 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %90 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !107"
HELIX:        "  %87 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !104" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %74 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !91" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %83 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !100" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %78 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !95" -> "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %81 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !98"
HELIX:        "  %88 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !105" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %75 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !92" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %84 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !101" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %79 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !96" -> "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58"
HELIX:        "  store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %79 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !96"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93"
HELIX:        "  store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %44 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !51"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46"
HELIX:     Instructions that belong to the SS
HELIX:         %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46
HELIX:         br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63
HELIX:         %44 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !51
HELIX:         %59 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !71
HELIX:         %45 = add nsw i32 %44, -1, !note.noelle !28, !noelle.pdg.inst.id !52
HELIX:         %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93
HELIX:         store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78
HELIX:         %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         %79 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !96
HELIX:         %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58
HELIX:         store i32 %56, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !67
HELIX:         %81 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !98
HELIX:         store i32 %45, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !53
HELIX:         %90 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !107
HELIX:         %134 = add nsw i32 %133, 1, !note.noelle !41, !noelle.pdg.inst.id !152
HELIX:         %33 = load i32, i32* %28, align 4, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59
HELIX:         store i32 0, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !69
HELIX:         %67 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !82
HELIX:         %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45
HELIX:         %64 = add nsw i32 %63, 1, !note.noelle !41, !noelle.pdg.inst.id !77
HELIX:         %77 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !94
HELIX:         store i32 0, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !80
HELIX:         br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85
HELIX:         %72 = add nsw i32 %71, 1, !note.noelle !41, !noelle.pdg.inst.id !88
HELIX:         %78 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !95
HELIX:         %37 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !43
HELIX:         %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61
HELIX:         store i32 1, i32* %19, align 4, !note.noelle !28, !noelle.pdg.inst.id !39
HELIX:         %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76
HELIX:         %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72
HELIX:         %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106
HELIX:         br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38
HELIX:         %56 = add nsw i32 %55, 1, !note.noelle !41, !noelle.pdg.inst.id !66
HELIX:         %87 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !104
HELIX:         %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47
HELIX:         %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83
HELIX:         %71 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !87
HELIX:         %88 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !105
HELIX:         %74 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !91
HELIX:         store i32 %72, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !89
HELIX:         %75 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !92
HELIX:         %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102
HELIX:         store i32 %134, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !153
HELIX:         %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !44
HELIX:         store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55
HELIX:         %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60
HELIX:         %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97
HELIX:         %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57
HELIX:         %84 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !101
HELIX:         %55 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !65
HELIX:         br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49
HELIX:         br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74
HELIX:         %86 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !103
HELIX:         %82 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !99
HELIX:         %83 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !100
HELIX:         %133 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !151
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %123, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %121 = load double, double* %120, align 8, !note.noelle !41, !noelle.pdg.inst.id !138"
HELIX:        "  store double %123, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %99 = load double, double* %98, align 8, !note.noelle !41, !noelle.pdg.inst.id !116"
HELIX:     Instructions that belong to the SS
HELIX:         %99 = load double, double* %98, align 8, !note.noelle !41, !noelle.pdg.inst.id !116
HELIX:         %123 = fsub double %99, %122, !note.noelle !41, !noelle.pdg.inst.id !140
HELIX:         %122 = fmul double %111, %121, !note.noelle !41, !noelle.pdg.inst.id !139
HELIX:         store double %123, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149
HELIX:         %121 = load double, double* %120, align 8, !note.noelle !41, !noelle.pdg.inst.id !138
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @4(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !30
  %11 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
  %12 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !32
  %13 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !33
  %14 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !34
  %15 = bitcast i8* %0 to [40 x i64]*
  %16 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 0
  %17 = bitcast i64* %16 to i32**
  %18 = load i32*, i32** %17
  %19 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 8
  %20 = bitcast i64* %19 to i32**
  %21 = load i32*, i32** %20
  %22 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 16
  %23 = bitcast i64* %22 to i32**
  %24 = load i32*, i32** %23
  %25 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 24
  %26 = bitcast i64* %25 to i32**
  %27 = load i32*, i32** %26
  %28 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 32
  %29 = bitcast i64* %28 to i32**
  %30 = load i32*, i32** %29
  %31 = bitcast i8* %1 to [0 x i64]*
  %32 = ptrtoint i8* %2 to i64
  %33 = add i64 0, %32
  %34 = inttoptr i64 %33 to i8*
  %35 = ptrtoint i8* %3 to i64
  %36 = add i64 0, %35
  %37 = inttoptr i64 %36 to i8*
  %38 = ptrtoint i8* %2 to i64
  %39 = add i64 64, %38
  %40 = inttoptr i64 %39 to i8*
  %41 = ptrtoint i8* %3 to i64
  %42 = add i64 64, %41
  %43 = inttoptr i64 %42 to i8*
  br label %50

44:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

45:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %46 = load i64, i64* %8
  %47 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %48 = call i32 @pthread_spin_unlock(i32* %47) #31, !noelle.pdg.inst.id !36
  %49 = icmp eq i64 %46, 0
  br i1 %49, label %SS1-wait, label %SS1-entry

50:                                               ; preds = %7, %65
  store i64 0, i64* %8
  store i64 0, i64* %9
  %51 = load i64, i64* %9
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %SS0-wait2, label %SS0-entry1

53:                                               ; preds = %SS-passed-checkexit
  store i32 1, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !37
  %54 = load i64, i64* %8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %SS1-wait4, label %SS1-entry3

56:                                               ; preds = %78, %SS1-entry3
  %57 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !40
  %58 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !41
  %59 = load i32, i32* %58, align 4, !note.noelle !38, !noelle.pdg.inst.id !42
  %60 = sub nsw i32 %59, 1, !note.noelle !38, !noelle.pdg.inst.id !43
  %61 = icmp slt i32 %57, %60, !note.noelle !38, !noelle.pdg.inst.id !44
  br i1 %61, label %70, label %62, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46

62:                                               ; preds = %56
  %63 = bitcast i8* %43 to i32*, !noelle.pdg.inst.id !35
  %64 = call i32 @pthread_spin_unlock(i32* %63) #31, !noelle.pdg.inst.id !36
  br label %65, !note.noelle !28, !noelle.pdg.inst.id !47

65:                                               ; preds = %62
  %66 = load i32, i32* %30, align 4, !note.noelle !28, !noelle.pdg.inst.id !48
  %67 = add nsw i32 %66, -1, !note.noelle !28, !noelle.pdg.inst.id !49
  store i32 %67, i32* %30, align 4, !note.noelle !28, !noelle.pdg.inst.id !50
  %68 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %69 = call i32 @pthread_spin_unlock(i32* %68) #31, !noelle.pdg.inst.id !36
  br label %50, !note.noelle !28, !noelle.pdg.inst.id !51

70:                                               ; preds = %56
  store i32 1, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !52
  br label %71, !note.noelle !38, !noelle.pdg.inst.id !53

71:                                               ; preds = %70, %86
  %72 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !54
  %73 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !55
  %74 = load i32, i32* %73, align 4, !note.noelle !38, !noelle.pdg.inst.id !56
  %75 = sub nsw i32 %74, 1, !note.noelle !38, !noelle.pdg.inst.id !57
  %76 = icmp slt i32 %72, %75, !note.noelle !38, !noelle.pdg.inst.id !58
  br i1 %76, label %81, label %77, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60

77:                                               ; preds = %71
  br label %78, !note.noelle !38, !noelle.pdg.inst.id !61

78:                                               ; preds = %77
  %79 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !62
  %80 = add nsw i32 %79, 1, !note.noelle !38, !noelle.pdg.inst.id !63
  store i32 %80, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !64
  br label %56, !note.noelle !38, !noelle.pdg.inst.id !65

81:                                               ; preds = %71
  store i32 0, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !66
  br label %82, !note.noelle !38, !noelle.pdg.inst.id !67

82:                                               ; preds = %81, %94
  %83 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !68
  %84 = icmp slt i32 %83, 5, !note.noelle !38, !noelle.pdg.inst.id !69
  br i1 %84, label %89, label %85, !prof !70, !note.noelle !38, !noelle.pdg.inst.id !71

85:                                               ; preds = %82
  br label %86, !note.noelle !38, !noelle.pdg.inst.id !72

86:                                               ; preds = %85
  %87 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !73
  %88 = add nsw i32 %87, 1, !note.noelle !38, !noelle.pdg.inst.id !74
  store i32 %88, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !75
  br label %71, !note.noelle !38, !noelle.pdg.inst.id !76

89:                                               ; preds = %82
  store i32 0, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !77
  br label %90, !note.noelle !38, !noelle.pdg.inst.id !78

90:                                               ; preds = %156, %89
  %91 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !79
  %92 = icmp slt i32 %91, 5, !note.noelle !38, !noelle.pdg.inst.id !80
  br i1 %92, label %97, label %93, !prof !81, !note.noelle !38, !noelle.pdg.inst.id !82

93:                                               ; preds = %90
  br label %94, !note.noelle !38, !noelle.pdg.inst.id !83

94:                                               ; preds = %93
  %95 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !84
  %96 = add nsw i32 %95, 1, !note.noelle !38, !noelle.pdg.inst.id !85
  store i32 %96, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !86
  br label %82, !note.noelle !38, !noelle.pdg.inst.id !87

97:                                               ; preds = %90
  %98 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !88
  %99 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !89
  %100 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !90
  %101 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !91
  %102 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !92
  %103 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !93
  %104 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !94
  %105 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !95
  %106 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !96
  %107 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !97
  %108 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !98
  %109 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !99
  %110 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !100
  %111 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !101
  %112 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !102
  %113 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !103
  %114 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !104
  %115 = sext i32 %98 to i64, !note.noelle !38, !noelle.pdg.inst.id !105
  %116 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %115, !note.noelle !38, !noelle.pdg.inst.id !106
  %117 = sext i32 %99 to i64, !note.noelle !38, !noelle.pdg.inst.id !107
  %118 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %116, i64 0, i64 %117, !note.noelle !38, !noelle.pdg.inst.id !108
  %119 = sext i32 %100 to i64, !note.noelle !38, !noelle.pdg.inst.id !109
  %120 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %118, i64 0, i64 %119, !note.noelle !38, !noelle.pdg.inst.id !110
  %121 = sext i32 %101 to i64, !note.noelle !38, !noelle.pdg.inst.id !111
  %122 = getelementptr inbounds [5 x double], [5 x double]* %120, i64 0, i64 %121, !note.noelle !38, !noelle.pdg.inst.id !112
  %123 = load double, double* %122, align 8, !note.noelle !38, !noelle.pdg.inst.id !113
  %124 = sext i32 %102 to i64, !note.noelle !38, !noelle.pdg.inst.id !114
  %125 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %124, !note.noelle !38, !noelle.pdg.inst.id !115
  %126 = sext i32 %103 to i64, !note.noelle !38, !noelle.pdg.inst.id !116
  %127 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %125, i64 0, i64 %126, !note.noelle !38, !noelle.pdg.inst.id !117
  %128 = sext i32 %104 to i64, !note.noelle !38, !noelle.pdg.inst.id !118
  %129 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %127, i64 0, i64 %128, !note.noelle !38, !noelle.pdg.inst.id !119
  %130 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %129, i64 0, i64 2, !note.noelle !38, !noelle.pdg.inst.id !120
  %131 = sext i32 %105 to i64, !note.noelle !38, !noelle.pdg.inst.id !121
  %132 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %130, i64 0, i64 %131, !note.noelle !38, !noelle.pdg.inst.id !122
  %133 = sext i32 %106 to i64, !note.noelle !38, !noelle.pdg.inst.id !123
  %134 = getelementptr inbounds [5 x double], [5 x double]* %132, i64 0, i64 %133, !note.noelle !38, !noelle.pdg.inst.id !124
  %135 = load double, double* %134, align 8, !note.noelle !38, !noelle.pdg.inst.id !125
  %136 = add nsw i32 %107, 1, !note.noelle !38, !noelle.pdg.inst.id !126
  %137 = sext i32 %136 to i64, !note.noelle !38, !noelle.pdg.inst.id !127
  %138 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %137, !note.noelle !38, !noelle.pdg.inst.id !128
  %139 = sext i32 %108 to i64, !note.noelle !38, !noelle.pdg.inst.id !129
  %140 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %138, i64 0, i64 %139, !note.noelle !38, !noelle.pdg.inst.id !130
  %141 = sext i32 %109 to i64, !note.noelle !38, !noelle.pdg.inst.id !131
  %142 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %140, i64 0, i64 %141, !note.noelle !38, !noelle.pdg.inst.id !132
  %143 = sext i32 %110 to i64, !note.noelle !38, !noelle.pdg.inst.id !133
  %144 = getelementptr inbounds [5 x double], [5 x double]* %142, i64 0, i64 %143, !note.noelle !38, !noelle.pdg.inst.id !134
  %145 = load double, double* %144, align 8, !note.noelle !38, !noelle.pdg.inst.id !135
  %146 = fmul double %135, %145, !note.noelle !38, !noelle.pdg.inst.id !136
  %147 = fsub double %123, %146, !note.noelle !38, !noelle.pdg.inst.id !137
  %148 = sext i32 %111 to i64, !note.noelle !38, !noelle.pdg.inst.id !138
  %149 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %148, !note.noelle !38, !noelle.pdg.inst.id !139
  %150 = sext i32 %112 to i64, !note.noelle !38, !noelle.pdg.inst.id !140
  %151 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %149, i64 0, i64 %150, !note.noelle !38, !noelle.pdg.inst.id !141
  %152 = sext i32 %113 to i64, !note.noelle !38, !noelle.pdg.inst.id !142
  %153 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %151, i64 0, i64 %152, !note.noelle !38, !noelle.pdg.inst.id !143
  %154 = sext i32 %114 to i64, !note.noelle !38, !noelle.pdg.inst.id !144
  %155 = getelementptr inbounds [5 x double], [5 x double]* %153, i64 0, i64 %154, !note.noelle !38, !noelle.pdg.inst.id !145
  store double %147, double* %155, align 8, !note.noelle !38, !noelle.pdg.inst.id !146
  br label %156, !note.noelle !38, !noelle.pdg.inst.id !147

156:                                              ; preds = %97
  %157 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !148
  %158 = add nsw i32 %157, 1, !note.noelle !38, !noelle.pdg.inst.id !149
  store i32 %158, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !150
  br label %90, !note.noelle !38, !noelle.pdg.inst.id !151

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %159 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %160 = call i32 @pthread_spin_unlock(i32* %159) #31, !noelle.pdg.inst.id !36
  %161 = bitcast i8* %43 to i32*, !noelle.pdg.inst.id !35
  %162 = call i32 @pthread_spin_unlock(i32* %161) #31, !noelle.pdg.inst.id !36
  br label %44

SS0-wait:                                         ; preds = %SS1-entry
  %163 = bitcast i8* %34 to i32*, !noelle.pdg.inst.id !152
  %164 = call i32 @pthread_spin_lock(i32* %163) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %9
  br label %SS0-entry

SS1-entry:                                        ; preds = %45, %SS1-wait
  %165 = load i64, i64* %9
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %45
  %167 = bitcast i8* %40 to i32*, !noelle.pdg.inst.id !152
  %168 = call i32 @pthread_spin_lock(i32* %167) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %8
  br label %SS1-entry

SS0-entry1:                                       ; preds = %50, %SS0-wait2
  %169 = load i64, i64* %6
  %170 = icmp eq i64 1, %169
  br i1 %170, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %50
  %171 = bitcast i8* %34 to i32*, !noelle.pdg.inst.id !152
  %172 = call i32 @pthread_spin_lock(i32* %171) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %9
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %173 = load i32, i32* %30, align 4, !note.noelle !28, !noelle.pdg.inst.id !154
  %174 = icmp sge i32 %173, 0, !note.noelle !28, !noelle.pdg.inst.id !155
  br i1 %174, label %53, label %45, !prof !156, !note.noelle !28, !noelle.pdg.inst.id !157

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %175 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %176 = call i32 @pthread_spin_unlock(i32* %175) #31, !noelle.pdg.inst.id !36
  %177 = bitcast i8* %43 to i32*, !noelle.pdg.inst.id !35
  %178 = call i32 @pthread_spin_unlock(i32* %177) #31, !noelle.pdg.inst.id !36
  br label %44

SS1-entry3:                                       ; preds = %53, %SS1-wait4
  br label %56, !note.noelle !28, !noelle.pdg.inst.id !158

SS1-wait4:                                        ; preds = %53
  %179 = bitcast i8* %40 to i32*, !noelle.pdg.inst.id !152
  %180 = call i32 @pthread_spin_lock(i32* %179) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %8
  br label %SS1-entry3
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 133 has been parallelized
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 143 savings = 1.349921e-05%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "matvec_sub"
Parallelizer:  Loop 143 = "  %9 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !166"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         br i1 %10, label %11, label %79, !prof !345, !noelle.pdg.inst.id !36 --->   %10 = icmp slt i32 %9, 5, !noelle.pdg.inst.id !130 via variable
HELIX:         br i1 %10, label %11, label %79, !prof !345, !noelle.pdg.inst.id !36 --->   br i1 %10, label %11, label %79, !prof !345, !noelle.pdg.inst.id !36 via variable
HELIX:         br i1 %10, label %11, label %79, !prof !345, !noelle.pdg.inst.id !36 --->   %9 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !166 via variable
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         store double %71, double* %75, align 8, !noelle.pdg.inst.id !50 --->   %16 = load double, double* %15, align 8, !noelle.pdg.inst.id !181 via memory
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 11
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %26 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !29"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30"
HELIX:     Instructions that belong to the SS
HELIX:         %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30
HELIX:         %26 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !29
HELIX:         br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %88, double* %92, align 8, !noelle.pdg.inst.id !97" -> "  %33 = load double, double* %32, align 8, !noelle.pdg.inst.id !37"
HELIX:     Instructions that belong to the SS
HELIX:         %77 = fsub double %66, %76, !noelle.pdg.inst.id !81
HELIX:         %55 = fsub double %44, %54, !noelle.pdg.inst.id !59
HELIX:         store double %88, double* %92, align 8, !noelle.pdg.inst.id !97
HELIX:         %66 = fsub double %55, %65, !noelle.pdg.inst.id !70
HELIX:         %44 = fsub double %33, %43, !noelle.pdg.inst.id !48
HELIX:         %33 = load double, double* %32, align 8, !noelle.pdg.inst.id !37
HELIX:         %88 = fsub double %77, %87, !noelle.pdg.inst.id !92
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 11
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %26 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !29"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30"
HELIX:     Instructions that belong to the SS
HELIX:         %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30
HELIX:         %26 = load i32, i32* %18, align 4, !noelle.pdg.inst.id !29
HELIX:         br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %88, double* %92, align 8, !noelle.pdg.inst.id !97" -> "  %33 = load double, double* %32, align 8, !noelle.pdg.inst.id !37"
HELIX:     Instructions that belong to the SS
HELIX:         %77 = fsub double %66, %76, !noelle.pdg.inst.id !81
HELIX:         %55 = fsub double %44, %54, !noelle.pdg.inst.id !59
HELIX:         store double %88, double* %92, align 8, !noelle.pdg.inst.id !97
HELIX:         %66 = fsub double %55, %65, !noelle.pdg.inst.id !70
HELIX:         %44 = fsub double %33, %43, !noelle.pdg.inst.id !48
HELIX:         %33 = load double, double* %32, align 8, !noelle.pdg.inst.id !37
HELIX:         %88 = fsub double %77, %87, !noelle.pdg.inst.id !92
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @6(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i32, align 4, !noelle.pdg.inst.id !28
  %11 = bitcast i8* %0 to [32 x i64]*
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 0
  %13 = bitcast i64* %12 to double***
  %14 = load double**, double*** %13
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 8
  %16 = bitcast i64* %15 to double***
  %17 = load double**, double*** %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 16
  %19 = bitcast i64* %18 to i32**
  %20 = load i32*, i32** %19
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 24
  %22 = bitcast i64* %21 to [5 x double]***
  %23 = load [5 x double]**, [5 x double]*** %22
  %24 = bitcast i8* %1 to [0 x i64]*
  %25 = ptrtoint i8* %2 to i64
  %26 = add i64 0, %25
  %27 = inttoptr i64 %26 to i8*
  %28 = ptrtoint i8* %3 to i64
  %29 = add i64 0, %28
  %30 = inttoptr i64 %29 to i8*
  %31 = ptrtoint i8* %2 to i64
  %32 = add i64 64, %31
  %33 = inttoptr i64 %32 to i8*
  %34 = ptrtoint i8* %3 to i64
  %35 = add i64 64, %34
  %36 = inttoptr i64 %35 to i8*
  br label %43

37:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

38:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %39 = load i64, i64* %8
  %40 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %41 = call i32 @pthread_spin_unlock(i32* %40) #31, !noelle.pdg.inst.id !30
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %SS1-wait, label %SS1-entry

43:                                               ; preds = %7, %55
  store i64 0, i64* %8
  store i64 0, i64* %9
  %44 = load i64, i64* %9
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %SS0-wait2, label %SS0-entry1

46:                                               ; preds = %SS-passed-checkexit
  %47 = load double*, double** %14, align 8, !noelle.pdg.inst.id !31
  %48 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %49 = call i32 @pthread_spin_unlock(i32* %48) #31, !noelle.pdg.inst.id !30
  %50 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !32
  %51 = sext i32 %50 to i64, !noelle.pdg.inst.id !33
  %52 = getelementptr inbounds double, double* %47, i64 %51, !noelle.pdg.inst.id !34
  %53 = load i64, i64* %8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %SS1-wait4, label %SS1-entry3

55:                                               ; preds = %SS1-entry3
  %56 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !35
  %57 = add nsw i32 %56, 1, !noelle.pdg.inst.id !36
  store i32 %57, i32* %20, align 4, !noelle.pdg.inst.id !37
  br label %43, !noelle.pdg.inst.id !38

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %58 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %59 = call i32 @pthread_spin_unlock(i32* %58) #31, !noelle.pdg.inst.id !30
  %60 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !29
  %61 = call i32 @pthread_spin_unlock(i32* %60) #31, !noelle.pdg.inst.id !30
  br label %37

SS0-wait:                                         ; preds = %SS1-entry
  %62 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !39
  %63 = call i32 @pthread_spin_lock(i32* %62) #31, !noelle.pdg.inst.id !40
  store i64 1, i64* %9
  br label %SS0-entry

SS1-entry:                                        ; preds = %38, %SS1-wait
  %64 = load i64, i64* %9
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %38
  %66 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !39
  %67 = call i32 @pthread_spin_lock(i32* %66) #31, !noelle.pdg.inst.id !40
  store i64 1, i64* %8
  br label %SS1-entry

SS0-entry1:                                       ; preds = %43, %SS0-wait2
  %68 = load i64, i64* %6
  %69 = icmp eq i64 1, %68
  br i1 %69, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %43
  %70 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !39
  %71 = call i32 @pthread_spin_lock(i32* %70) #31, !noelle.pdg.inst.id !40
  store i64 1, i64* %9
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %72 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !41
  %73 = icmp slt i32 %72, 5, !noelle.pdg.inst.id !42
  br i1 %73, label %46, label %38, !prof !43, !noelle.pdg.inst.id !44

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %74 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %75 = call i32 @pthread_spin_unlock(i32* %74) #31, !noelle.pdg.inst.id !30
  %76 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !29
  %77 = call i32 @pthread_spin_unlock(i32* %76) #31, !noelle.pdg.inst.id !30
  br label %37

SS1-entry3:                                       ; preds = %46, %SS1-wait4
  %78 = load double, double* %52, align 8, !noelle.pdg.inst.id !45
  %79 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !46
  %80 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !47
  %81 = sext i32 %80 to i64, !noelle.pdg.inst.id !48
  %82 = getelementptr inbounds [5 x double], [5 x double]* %79, i64 %81, !noelle.pdg.inst.id !49
  %83 = getelementptr inbounds [5 x double], [5 x double]* %82, i64 0, i64 0, !noelle.pdg.inst.id !50
  %84 = load double, double* %83, align 8, !noelle.pdg.inst.id !51
  %85 = load double*, double** %17, align 8, !noelle.pdg.inst.id !52
  %86 = getelementptr inbounds double, double* %85, i64 0, !noelle.pdg.inst.id !53
  %87 = load double, double* %86, align 8, !noelle.pdg.inst.id !54
  %88 = fmul double %84, %87, !noelle.pdg.inst.id !55
  %89 = fsub double %78, %88, !noelle.pdg.inst.id !56
  %90 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !57
  %91 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !58
  %92 = sext i32 %91 to i64, !noelle.pdg.inst.id !59
  %93 = getelementptr inbounds [5 x double], [5 x double]* %90, i64 %92, !noelle.pdg.inst.id !60
  %94 = getelementptr inbounds [5 x double], [5 x double]* %93, i64 0, i64 1, !noelle.pdg.inst.id !61
  %95 = load double, double* %94, align 8, !noelle.pdg.inst.id !62
  %96 = load double*, double** %17, align 8, !noelle.pdg.inst.id !63
  %97 = getelementptr inbounds double, double* %96, i64 1, !noelle.pdg.inst.id !64
  %98 = load double, double* %97, align 8, !noelle.pdg.inst.id !65
  %99 = fmul double %95, %98, !noelle.pdg.inst.id !66
  %100 = fsub double %89, %99, !noelle.pdg.inst.id !67
  %101 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !68
  %102 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !69
  %103 = sext i32 %102 to i64, !noelle.pdg.inst.id !70
  %104 = getelementptr inbounds [5 x double], [5 x double]* %101, i64 %103, !noelle.pdg.inst.id !71
  %105 = getelementptr inbounds [5 x double], [5 x double]* %104, i64 0, i64 2, !noelle.pdg.inst.id !72
  %106 = load double, double* %105, align 8, !noelle.pdg.inst.id !73
  %107 = load double*, double** %17, align 8, !noelle.pdg.inst.id !74
  %108 = getelementptr inbounds double, double* %107, i64 2, !noelle.pdg.inst.id !75
  %109 = load double, double* %108, align 8, !noelle.pdg.inst.id !76
  %110 = fmul double %106, %109, !noelle.pdg.inst.id !77
  %111 = fsub double %100, %110, !noelle.pdg.inst.id !78
  %112 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !79
  %113 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !80
  %114 = sext i32 %113 to i64, !noelle.pdg.inst.id !81
  %115 = getelementptr inbounds [5 x double], [5 x double]* %112, i64 %114, !noelle.pdg.inst.id !82
  %116 = getelementptr inbounds [5 x double], [5 x double]* %115, i64 0, i64 3, !noelle.pdg.inst.id !83
  %117 = load double, double* %116, align 8, !noelle.pdg.inst.id !84
  %118 = load double*, double** %17, align 8, !noelle.pdg.inst.id !85
  %119 = getelementptr inbounds double, double* %118, i64 3, !noelle.pdg.inst.id !86
  %120 = load double, double* %119, align 8, !noelle.pdg.inst.id !87
  %121 = fmul double %117, %120, !noelle.pdg.inst.id !88
  %122 = fsub double %111, %121, !noelle.pdg.inst.id !89
  %123 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !90
  %124 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !91
  %125 = sext i32 %124 to i64, !noelle.pdg.inst.id !92
  %126 = getelementptr inbounds [5 x double], [5 x double]* %123, i64 %125, !noelle.pdg.inst.id !93
  %127 = getelementptr inbounds [5 x double], [5 x double]* %126, i64 0, i64 4, !noelle.pdg.inst.id !94
  %128 = load double, double* %127, align 8, !noelle.pdg.inst.id !95
  %129 = load double*, double** %17, align 8, !noelle.pdg.inst.id !96
  %130 = getelementptr inbounds double, double* %129, i64 4, !noelle.pdg.inst.id !97
  %131 = load double, double* %130, align 8, !noelle.pdg.inst.id !98
  %132 = fmul double %128, %131, !noelle.pdg.inst.id !99
  %133 = fsub double %122, %132, !noelle.pdg.inst.id !100
  %134 = load double*, double** %14, align 8, !noelle.pdg.inst.id !101
  %135 = load i32, i32* %20, align 4, !noelle.pdg.inst.id !102
  %136 = sext i32 %135 to i64, !noelle.pdg.inst.id !103
  %137 = getelementptr inbounds double, double* %134, i64 %136, !noelle.pdg.inst.id !104
  store double %133, double* %137, align 8, !noelle.pdg.inst.id !105
  %138 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !29
  %139 = call i32 @pthread_spin_unlock(i32* %138) #31, !noelle.pdg.inst.id !30
  br label %55, !noelle.pdg.inst.id !106

SS1-wait4:                                        ; preds = %46
  %140 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !39
  %141 = call i32 @pthread_spin_lock(i32* %140) #31, !noelle.pdg.inst.id !40
  store i64 1, i64* %8
  br label %SS1-entry3
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 143 has been parallelized
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 145 savings = 3.145886e-06%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "y_solve_cell"
Parallelizer:  Loop 145 = "  %57 = load i32, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !650"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         %69 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !297 --->   store i32 1, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !306 via memory
HELIX:         store i32 %175, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !158 --->   store i32 1, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !306 via memory
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %100 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !599 via memory
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %155 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !192 via memory
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %121 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !230 via memory
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %110 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !509 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !150 --->   %66 = icmp slt i32 %62, %65, !note.noelle !1565, !noelle.pdg.inst.id !309 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !150 --->   %63 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !315 via variable
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %144 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !505 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !150 --->   br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !150 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !150 --->   %62 = load i32, i32* %1, align 4, !note.noelle !1565, !noelle.pdg.inst.id !317 via variable
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %133 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !438 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !157 --->   %73 = icmp slt i32 %69, %72, !note.noelle !1565, !noelle.pdg.inst.id !289 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !157 --->   br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !157 via variable
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %166 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !560 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !157 --->   %69 = load i32, i32* %3, align 4, !note.noelle !1565, !noelle.pdg.inst.id !297 via variable
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %78 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !282 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !157 --->   %70 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !295 via variable
HELIX:         store i32 %183, i32* %2, align 4, !note.noelle !1562, !noelle.pdg.inst.id !503 --->   %89 = load i32, i32* %2, align 4, !note.noelle !1565, !noelle.pdg.inst.id !511 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !157 --->   %72 = sub nsw i32 %71, 1, !note.noelle !1565, !noelle.pdg.inst.id !291 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1570, !note.noelle !1565, !noelle.pdg.inst.id !157 --->   %71 = load i32, i32* %70, align 4, !note.noelle !1565, !noelle.pdg.inst.id !293 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !150 --->   %65 = sub nsw i32 %64, 1, !note.noelle !1565, !noelle.pdg.inst.id !311 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1568, !note.noelle !1565, !noelle.pdg.inst.id !150 --->   %64 = load i32, i32* %63, align 4, !note.noelle !1565, !noelle.pdg.inst.id !313 via variable
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %98 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !113"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %95 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !110"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %70 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !84"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %124 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !140"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %90 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !105"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %87 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !102"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %84 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !99"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %58 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !72"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %74 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !88"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %55 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !69"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %102 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !117"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %110 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !125"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %63 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !77"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %38 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !48"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %118 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !134"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %135 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !151"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %143 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !159"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %113 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !128"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %26 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %26 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57"
HELIX:        "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %55 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !69" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %98 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !113" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %66 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !80" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %132 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !148" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %143 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !159" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %110 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !125" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %87 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !102" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %121 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !137" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %80 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !94"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %140 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !156"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %132 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !148"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %146 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !162"
HELIX:        "  %95 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !110" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %84 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !99" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %140 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !156" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %63 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !77" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %107 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !122" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %129 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !145" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %74 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !88" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %118 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !134" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %107 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !122"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56"
HELIX:        "  %70 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !84" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %90 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !105" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %58 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !72" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %80 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !94" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %124 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !140" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %135 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !151" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %102 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !117" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %151 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !168" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %146 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !162" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %113 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !128" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %129 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !145"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %66 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !80"
HELIX:        "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %151 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !168"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %121 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !137"
HELIX:     Instructions that belong to the SS
HELIX:         %121 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !137
HELIX:         %151 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !168
HELIX:         %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44
HELIX:         %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54
HELIX:         %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !55
HELIX:         store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         %66 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !80
HELIX:         %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43
HELIX:         %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58
HELIX:         %129 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !145
HELIX:         store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52
HELIX:         %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56
HELIX:         br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60
HELIX:         %107 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !122
HELIX:         %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33
HELIX:         %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66
HELIX:         store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64
HELIX:         %146 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !162
HELIX:         %55 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !69
HELIX:         %74 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !88
HELIX:         %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40
HELIX:         %135 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !151
HELIX:         %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41
HELIX:         %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91
HELIX:         %58 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !72
HELIX:         %102 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !117
HELIX:         %84 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !99
HELIX:         %87 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !102
HELIX:         %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62
HELIX:         %98 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !113
HELIX:         %95 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !110
HELIX:         %90 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !105
HELIX:         %39 = add nsw i32 %38, 1, !note.noelle !28, !noelle.pdg.inst.id !49
HELIX:         br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %26 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
HELIX:         %70 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !84
HELIX:         %124 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !140
HELIX:         br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46
HELIX:         %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42
HELIX:         %110 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !125
HELIX:         store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170
HELIX:         %63 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !77
HELIX:         %38 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !48
HELIX:         %118 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !134
HELIX:         %143 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !159
HELIX:         %113 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !128
HELIX:         %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57
HELIX:         %152 = add nsw i32 %151, 1, !note.noelle !38, !noelle.pdg.inst.id !169
HELIX:         %50 = add nsw i32 %49, 1, !note.noelle !38, !noelle.pdg.inst.id !63
HELIX:         %140 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !156
HELIX:         %80 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !94
HELIX:         store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50
HELIX:         %132 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !148
HELIX:         %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98" -> "  call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @matmul_sub([5 x double]* %94, [5 x double]* %106, [5 x double]* %117), !note.noelle !38, !noelle.pdg.inst.id !133
HELIX:         call fastcc void @matvec_sub([5 x double]* %62, double* %73, double* %83), !note.noelle !38, !noelle.pdg.inst.id !98
HELIX:         call fastcc void @binvcrhs([5 x double]* %128, [5 x double]* %139, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %65 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !79"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %64 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !78"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %57 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !71"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %72 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !86"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %63 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !77"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %62 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !76"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %61 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !75"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %54 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !68"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %59 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !73"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %58 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !72"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %53 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !67"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %66 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !80"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %68 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !82"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %55 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %38 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !48"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %70 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !84"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %75 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !89"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %26 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %26 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57"
HELIX:        "  %59 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !73" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %53 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !67" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %65 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !79" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %56 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !70" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %74 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !88" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %68 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !82" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %62 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !76" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  %71 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !85" -> "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %60 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !74"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %76 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !90"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %74 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !88"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %78 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !92"
HELIX:        "  %64 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !78" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %61 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !75" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %76 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !90" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %55 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !69" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %67 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !81" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %73 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !87" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %58 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !72" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  %70 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !84" -> "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66"
HELIX:        "  br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35" -> "  %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %67 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !81"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56"
HELIX:        "  %57 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !71" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %63 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !77" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %54 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !68" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %60 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !74" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %72 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !86" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %75 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !89" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %66 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !80" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %151 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !168" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %78 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !92" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83" -> "  store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  %73 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !87"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %56 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !70"
HELIX:        "  %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64" -> "  store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60" -> "  %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54"
HELIX:        "  br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46" -> "  %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44"
HELIX:        "  store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170" -> "  %151 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !168"
HELIX:        "  store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50" -> "  %71 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !85"
HELIX:     Instructions that belong to the SS
HELIX:         %71 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !85
HELIX:         %151 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !168
HELIX:         %35 = icmp slt i32 %31, %34, !note.noelle !38, !noelle.pdg.inst.id !44
HELIX:         %42 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !54
HELIX:         %43 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !55
HELIX:         store i32 1, i32* %15, align 4, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         %56 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !70
HELIX:         %34 = sub nsw i32 %33, 1, !note.noelle !38, !noelle.pdg.inst.id !43
HELIX:         %46 = icmp slt i32 %42, %45, !note.noelle !38, !noelle.pdg.inst.id !58
HELIX:         %73 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !87
HELIX:         store i32 1, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !52
HELIX:         %44 = load i32, i32* %43, align 4, !note.noelle !38, !noelle.pdg.inst.id !56
HELIX:         br i1 %46, label %51, label %47, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60
HELIX:         %67 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !81
HELIX:         %28 = icmp slt i32 %26, %27, !note.noelle !28, !noelle.pdg.inst.id !33
HELIX:         %52 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !66
HELIX:         store i32 %50, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !64
HELIX:         %78 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !92
HELIX:         %53 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !67
HELIX:         %58 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !72
HELIX:         %31 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !40
HELIX:         %75 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !89
HELIX:         %32 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41
HELIX:         %59 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !73
HELIX:         %54 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !68
HELIX:         %66 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !80
HELIX:         %61 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !75
HELIX:         %62 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !76
HELIX:         %49 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !62
HELIX:         %65 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !79
HELIX:         %64 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !78
HELIX:         %63 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !77
HELIX:         %39 = add nsw i32 %38, 1, !note.noelle !28, !noelle.pdg.inst.id !49
HELIX:         br i1 %28, label %29, label %24, !prof !34, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %26 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
HELIX:         %57 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !71
HELIX:         %72 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !86
HELIX:         br i1 %35, label %40, label %36, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46
HELIX:         %33 = load i32, i32* %32, align 4, !note.noelle !38, !noelle.pdg.inst.id !42
HELIX:         %68 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !82
HELIX:         store i32 %152, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !170
HELIX:         %55 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !69
HELIX:         %38 = load i32, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !48
HELIX:         %70 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !84
HELIX:         %77 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !91
HELIX:         %69 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !83
HELIX:         %45 = sub nsw i32 %44, 1, !note.noelle !38, !noelle.pdg.inst.id !57
HELIX:         %152 = add nsw i32 %151, 1, !note.noelle !38, !noelle.pdg.inst.id !169
HELIX:         %50 = add nsw i32 %49, 1, !note.noelle !38, !noelle.pdg.inst.id !63
HELIX:         %76 = load i32, i32* %15, align 4, !note.noelle !38, !noelle.pdg.inst.id !90
HELIX:         %60 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !74
HELIX:         store i32 %39, i32* %21, align 4, !note.noelle !28, !noelle.pdg.inst.id !50
HELIX:         %74 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !88
HELIX:         %27 = load i32, i32* %12, align 4, !note.noelle !28, !noelle.pdg.inst.id !32
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116" -> "  call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166" -> "  call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @matmul_sub([5 x double]* %109, [5 x double]* %118, [5 x double]* %126), !note.noelle !38, !noelle.pdg.inst.id !142
HELIX:         call fastcc void @matvec_sub([5 x double]* %86, double* %94, double* %101), !note.noelle !38, !noelle.pdg.inst.id !116
HELIX:         call fastcc void @binvcrhs([5 x double]* %134, [5 x double]* %142, double* %149), !note.noelle !38, !noelle.pdg.inst.id !166
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @8(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !30
  %11 = bitcast i8* %0 to [32 x i64]*
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 0
  %13 = bitcast i64* %12 to i32**
  %14 = load i32*, i32** %13
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 8
  %16 = bitcast i64* %15 to i32**
  %17 = load i32*, i32** %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 16
  %19 = bitcast i64* %18 to i32**
  %20 = load i32*, i32** %19
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 24
  %22 = bitcast i64* %21 to i32**
  %23 = load i32*, i32** %22
  %24 = bitcast i8* %1 to [0 x i64]*
  %25 = ptrtoint i8* %2 to i64
  %26 = add i64 0, %25
  %27 = inttoptr i64 %26 to i8*
  %28 = ptrtoint i8* %3 to i64
  %29 = add i64 0, %28
  %30 = inttoptr i64 %29 to i8*
  %31 = ptrtoint i8* %2 to i64
  %32 = add i64 64, %31
  %33 = inttoptr i64 %32 to i8*
  %34 = ptrtoint i8* %3 to i64
  %35 = add i64 64, %34
  %36 = inttoptr i64 %35 to i8*
  br label %43

37:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

38:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %39 = load i64, i64* %8
  %40 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %41 = call i32 @pthread_spin_unlock(i32* %40) #31, !noelle.pdg.inst.id !32
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %SS1-wait, label %SS1-entry

43:                                               ; preds = %7, %58
  store i64 0, i64* %8
  store i64 0, i64* %9
  %44 = load i64, i64* %9
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %SS0-wait2, label %SS0-entry1

46:                                               ; preds = %SS-passed-checkexit
  store i32 1, i32* %17, align 4, !note.noelle !28, !noelle.pdg.inst.id !33
  %47 = load i64, i64* %8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %SS1-wait4, label %SS1-entry3

49:                                               ; preds = %71, %SS1-entry3
  %50 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !36
  %51 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !37
  %52 = load i32, i32* %51, align 4, !note.noelle !34, !noelle.pdg.inst.id !38
  %53 = sub nsw i32 %52, 1, !note.noelle !34, !noelle.pdg.inst.id !39
  %54 = icmp slt i32 %50, %53, !note.noelle !34, !noelle.pdg.inst.id !40
  br i1 %54, label %63, label %55, !prof !41, !note.noelle !34, !noelle.pdg.inst.id !42

55:                                               ; preds = %49
  %56 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !31
  %57 = call i32 @pthread_spin_unlock(i32* %56) #31, !noelle.pdg.inst.id !32
  br label %58, !note.noelle !28, !noelle.pdg.inst.id !43

58:                                               ; preds = %55
  %59 = load i32, i32* %23, align 4, !note.noelle !28, !noelle.pdg.inst.id !44
  %60 = add nsw i32 %59, 1, !note.noelle !28, !noelle.pdg.inst.id !45
  store i32 %60, i32* %23, align 4, !note.noelle !28, !noelle.pdg.inst.id !46
  %61 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %62 = call i32 @pthread_spin_unlock(i32* %61) #31, !noelle.pdg.inst.id !32
  br label %43, !note.noelle !28, !noelle.pdg.inst.id !47

63:                                               ; preds = %49
  store i32 1, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !48
  br label %64, !note.noelle !34, !noelle.pdg.inst.id !49

64:                                               ; preds = %173, %63
  %65 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !50
  %66 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !51
  %67 = load i32, i32* %66, align 4, !note.noelle !34, !noelle.pdg.inst.id !52
  %68 = sub nsw i32 %67, 1, !note.noelle !34, !noelle.pdg.inst.id !53
  %69 = icmp slt i32 %65, %68, !note.noelle !34, !noelle.pdg.inst.id !54
  br i1 %69, label %74, label %70, !prof !55, !note.noelle !34, !noelle.pdg.inst.id !56

70:                                               ; preds = %64
  br label %71, !note.noelle !34, !noelle.pdg.inst.id !57

71:                                               ; preds = %70
  %72 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !58
  %73 = add nsw i32 %72, 1, !note.noelle !34, !noelle.pdg.inst.id !59
  store i32 %73, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !60
  br label %49, !note.noelle !34, !noelle.pdg.inst.id !61

74:                                               ; preds = %64
  %75 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !62
  %76 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !63
  %77 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !64
  %78 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !65
  %79 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !66
  %80 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !67
  %81 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !68
  %82 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !69
  %83 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !70
  %84 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !71
  %85 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !72
  %86 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !73
  %87 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !74
  %88 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !75
  %89 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !76
  %90 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !77
  %91 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !78
  %92 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !79
  %93 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !80
  %94 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !81
  %95 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !82
  %96 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !83
  %97 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !84
  %98 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !85
  %99 = load i32, i32* %17, align 4, !note.noelle !34, !noelle.pdg.inst.id !86
  %100 = load i32, i32* %23, align 4, !note.noelle !34, !noelle.pdg.inst.id !87
  %101 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !88
  %102 = sext i32 %75 to i64, !note.noelle !34, !noelle.pdg.inst.id !89
  %103 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %102, !note.noelle !34, !noelle.pdg.inst.id !90
  %104 = sext i32 %76 to i64, !note.noelle !34, !noelle.pdg.inst.id !91
  %105 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %103, i64 0, i64 %104, !note.noelle !34, !noelle.pdg.inst.id !92
  %106 = sext i32 %77 to i64, !note.noelle !34, !noelle.pdg.inst.id !93
  %107 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %105, i64 0, i64 %106, !note.noelle !34, !noelle.pdg.inst.id !94
  %108 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %107, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !95
  %109 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %108, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !96
  %110 = sext i32 %78 to i64, !note.noelle !34, !noelle.pdg.inst.id !97
  %111 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %110, !note.noelle !34, !noelle.pdg.inst.id !98
  %112 = sub nsw i32 %79, 1, !note.noelle !34, !noelle.pdg.inst.id !99
  %113 = sext i32 %112 to i64, !note.noelle !34, !noelle.pdg.inst.id !100
  %114 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %111, i64 0, i64 %113, !note.noelle !34, !noelle.pdg.inst.id !101
  %115 = sext i32 %80 to i64, !note.noelle !34, !noelle.pdg.inst.id !102
  %116 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %114, i64 0, i64 %115, !note.noelle !34, !noelle.pdg.inst.id !103
  %117 = getelementptr inbounds [5 x double], [5 x double]* %116, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !104
  %118 = sext i32 %81 to i64, !note.noelle !34, !noelle.pdg.inst.id !105
  %119 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %118, !note.noelle !34, !noelle.pdg.inst.id !106
  %120 = sext i32 %82 to i64, !note.noelle !34, !noelle.pdg.inst.id !107
  %121 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %119, i64 0, i64 %120, !note.noelle !34, !noelle.pdg.inst.id !108
  %122 = sext i32 %83 to i64, !note.noelle !34, !noelle.pdg.inst.id !109
  %123 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %121, i64 0, i64 %122, !note.noelle !34, !noelle.pdg.inst.id !110
  %124 = getelementptr inbounds [5 x double], [5 x double]* %123, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !111
  call fastcc void @matvec_sub([5 x double]* %109, double* %117, double* %124), !note.noelle !34, !noelle.pdg.inst.id !112
  %125 = sext i32 %84 to i64, !note.noelle !34, !noelle.pdg.inst.id !113
  %126 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %125, !note.noelle !34, !noelle.pdg.inst.id !114
  %127 = sext i32 %85 to i64, !note.noelle !34, !noelle.pdg.inst.id !115
  %128 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %126, i64 0, i64 %127, !note.noelle !34, !noelle.pdg.inst.id !116
  %129 = sext i32 %86 to i64, !note.noelle !34, !noelle.pdg.inst.id !117
  %130 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %128, i64 0, i64 %129, !note.noelle !34, !noelle.pdg.inst.id !118
  %131 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %130, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !119
  %132 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %131, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !120
  %133 = sext i32 %87 to i64, !note.noelle !34, !noelle.pdg.inst.id !121
  %134 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %133, !note.noelle !34, !noelle.pdg.inst.id !122
  %135 = sub nsw i32 %88, 1, !note.noelle !34, !noelle.pdg.inst.id !123
  %136 = sext i32 %135 to i64, !note.noelle !34, !noelle.pdg.inst.id !124
  %137 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %134, i64 0, i64 %136, !note.noelle !34, !noelle.pdg.inst.id !125
  %138 = sext i32 %89 to i64, !note.noelle !34, !noelle.pdg.inst.id !126
  %139 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %137, i64 0, i64 %138, !note.noelle !34, !noelle.pdg.inst.id !127
  %140 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %139, i64 0, i64 2, !note.noelle !34, !noelle.pdg.inst.id !128
  %141 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %140, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !129
  %142 = sext i32 %90 to i64, !note.noelle !34, !noelle.pdg.inst.id !130
  %143 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %142, !note.noelle !34, !noelle.pdg.inst.id !131
  %144 = sext i32 %91 to i64, !note.noelle !34, !noelle.pdg.inst.id !132
  %145 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %143, i64 0, i64 %144, !note.noelle !34, !noelle.pdg.inst.id !133
  %146 = sext i32 %92 to i64, !note.noelle !34, !noelle.pdg.inst.id !134
  %147 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %145, i64 0, i64 %146, !note.noelle !34, !noelle.pdg.inst.id !135
  %148 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %147, i64 0, i64 1, !note.noelle !34, !noelle.pdg.inst.id !136
  %149 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %148, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !137
  call fastcc void @matmul_sub([5 x double]* %132, [5 x double]* %141, [5 x double]* %149), !note.noelle !34, !noelle.pdg.inst.id !138
  %150 = sext i32 %93 to i64, !note.noelle !34, !noelle.pdg.inst.id !139
  %151 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %150, !note.noelle !34, !noelle.pdg.inst.id !140
  %152 = sext i32 %94 to i64, !note.noelle !34, !noelle.pdg.inst.id !141
  %153 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %151, i64 0, i64 %152, !note.noelle !34, !noelle.pdg.inst.id !142
  %154 = sext i32 %95 to i64, !note.noelle !34, !noelle.pdg.inst.id !143
  %155 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %153, i64 0, i64 %154, !note.noelle !34, !noelle.pdg.inst.id !144
  %156 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %155, i64 0, i64 1, !note.noelle !34, !noelle.pdg.inst.id !145
  %157 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %156, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !146
  %158 = sext i32 %96 to i64, !note.noelle !34, !noelle.pdg.inst.id !147
  %159 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %158, !note.noelle !34, !noelle.pdg.inst.id !148
  %160 = sext i32 %97 to i64, !note.noelle !34, !noelle.pdg.inst.id !149
  %161 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %159, i64 0, i64 %160, !note.noelle !34, !noelle.pdg.inst.id !150
  %162 = sext i32 %98 to i64, !note.noelle !34, !noelle.pdg.inst.id !151
  %163 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %161, i64 0, i64 %162, !note.noelle !34, !noelle.pdg.inst.id !152
  %164 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %163, i64 0, i64 2, !note.noelle !34, !noelle.pdg.inst.id !153
  %165 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %164, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !154
  %166 = sext i32 %99 to i64, !note.noelle !34, !noelle.pdg.inst.id !155
  %167 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %166, !note.noelle !34, !noelle.pdg.inst.id !156
  %168 = sext i32 %100 to i64, !note.noelle !34, !noelle.pdg.inst.id !157
  %169 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %167, i64 0, i64 %168, !note.noelle !34, !noelle.pdg.inst.id !158
  %170 = sext i32 %101 to i64, !note.noelle !34, !noelle.pdg.inst.id !159
  %171 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %169, i64 0, i64 %170, !note.noelle !34, !noelle.pdg.inst.id !160
  %172 = getelementptr inbounds [5 x double], [5 x double]* %171, i64 0, i64 0, !note.noelle !34, !noelle.pdg.inst.id !161
  call fastcc void @binvcrhs([5 x double]* %157, [5 x double]* %165, double* %172), !note.noelle !34, !noelle.pdg.inst.id !162
  br label %173, !note.noelle !34, !noelle.pdg.inst.id !163

173:                                              ; preds = %74
  %174 = load i32, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !164
  %175 = add nsw i32 %174, 1, !note.noelle !34, !noelle.pdg.inst.id !165
  store i32 %175, i32* %20, align 4, !note.noelle !34, !noelle.pdg.inst.id !166
  br label %64, !note.noelle !34, !noelle.pdg.inst.id !167

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %176 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %177 = call i32 @pthread_spin_unlock(i32* %176) #31, !noelle.pdg.inst.id !32
  %178 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !31
  %179 = call i32 @pthread_spin_unlock(i32* %178) #31, !noelle.pdg.inst.id !32
  br label %37

SS0-wait:                                         ; preds = %SS1-entry
  %180 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !168
  %181 = call i32 @pthread_spin_lock(i32* %180) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %9
  br label %SS0-entry

SS1-entry:                                        ; preds = %38, %SS1-wait
  %182 = load i64, i64* %9
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %38
  %184 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !168
  %185 = call i32 @pthread_spin_lock(i32* %184) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %8
  br label %SS1-entry

SS0-entry1:                                       ; preds = %43, %SS0-wait2
  %186 = load i64, i64* %6
  %187 = icmp eq i64 1, %186
  br i1 %187, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %43
  %188 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !168
  %189 = call i32 @pthread_spin_lock(i32* %188) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %9
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %190 = load i32, i32* %23, align 4, !note.noelle !28, !noelle.pdg.inst.id !170
  %191 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !171
  %192 = icmp slt i32 %190, %191, !note.noelle !28, !noelle.pdg.inst.id !172
  br i1 %192, label %46, label %38, !prof !173, !note.noelle !28, !noelle.pdg.inst.id !174

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %193 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !31
  %194 = call i32 @pthread_spin_unlock(i32* %193) #31, !noelle.pdg.inst.id !32
  %195 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !31
  %196 = call i32 @pthread_spin_unlock(i32* %195) #31, !noelle.pdg.inst.id !32
  br label %37

SS1-entry3:                                       ; preds = %46, %SS1-wait4
  br label %49, !note.noelle !28, !noelle.pdg.inst.id !175

SS1-wait4:                                        ; preds = %46
  %197 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !168
  %198 = call i32 @pthread_spin_lock(i32* %197) #31, !noelle.pdg.inst.id !169
  store i64 1, i64* %8
  br label %SS1-entry3
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 145 has been parallelized
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 151 savings = 2.695448e-06%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "matmul_sub"
Parallelizer:  Loop 151 = "  %9 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !442"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         %230 = load double, double* %229, align 8, !noelle.pdg.inst.id !641 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         %301 = load double, double* %300, align 8, !noelle.pdg.inst.id !116 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         %159 = load double, double* %158, align 8, !noelle.pdg.inst.id !655 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         %88 = load double, double* %87, align 8, !noelle.pdg.inst.id !360 --->   store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 via memory
HELIX:         %301 = load double, double* %300, align 8, !noelle.pdg.inst.id !116 --->   store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   %230 = load double, double* %229, align 8, !noelle.pdg.inst.id !641 via memory
HELIX:         store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 --->   %230 = load double, double* %229, align 8, !noelle.pdg.inst.id !641 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   %17 = load double, double* %16, align 8, !noelle.pdg.inst.id !594 via memory
HELIX:         store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 --->   %17 = load double, double* %16, align 8, !noelle.pdg.inst.id !594 via memory
HELIX:         store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 --->   %17 = load double, double* %16, align 8, !noelle.pdg.inst.id !594 via memory
HELIX:         store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 --->   %17 = load double, double* %16, align 8, !noelle.pdg.inst.id !594 via memory
HELIX:         store double %77, double* %82, align 8, !noelle.pdg.inst.id !572 --->   %17 = load double, double* %16, align 8, !noelle.pdg.inst.id !594 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   %159 = load double, double* %158, align 8, !noelle.pdg.inst.id !655 via memory
HELIX:         store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 --->   %159 = load double, double* %158, align 8, !noelle.pdg.inst.id !655 via memory
HELIX:         store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 --->   %159 = load double, double* %158, align 8, !noelle.pdg.inst.id !655 via memory
HELIX:         %230 = load double, double* %229, align 8, !noelle.pdg.inst.id !641 --->   store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 via memory
HELIX:         %301 = load double, double* %300, align 8, !noelle.pdg.inst.id !116 --->   store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 via memory
HELIX:         store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 --->   store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 via memory
HELIX:         %159 = load double, double* %158, align 8, !noelle.pdg.inst.id !655 --->   store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 via memory
HELIX:         store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 --->   store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 via memory
HELIX:         %301 = load double, double* %300, align 8, !noelle.pdg.inst.id !116 --->   store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 via memory
HELIX:         %230 = load double, double* %229, align 8, !noelle.pdg.inst.id !641 --->   store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 via memory
HELIX:         store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 --->   store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   %301 = load double, double* %300, align 8, !noelle.pdg.inst.id !116 via memory
HELIX:         store double %361, double* %366, align 8, !noelle.pdg.inst.id !50 --->   %88 = load double, double* %87, align 8, !noelle.pdg.inst.id !360 via memory
HELIX:         store double %148, double* %153, align 8, !noelle.pdg.inst.id !657 --->   %88 = load double, double* %87, align 8, !noelle.pdg.inst.id !360 via memory
HELIX:         store double %290, double* %295, align 8, !noelle.pdg.inst.id !128 --->   %88 = load double, double* %87, align 8, !noelle.pdg.inst.id !360 via memory
HELIX:         store double %219, double* %224, align 8, !noelle.pdg.inst.id !212 --->   %88 = load double, double* %87, align 8, !noelle.pdg.inst.id !360 via memory
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         br i1 %10, label %11, label %370, !prof !1992, !noelle.pdg.inst.id !36 --->   %9 = load i32, i32* %7, align 4, !noelle.pdg.inst.id !442 via variable
HELIX:         br i1 %10, label %11, label %370, !prof !1992, !noelle.pdg.inst.id !36 --->   %10 = icmp slt i32 %9, 5, !noelle.pdg.inst.id !440 via variable
HELIX:         br i1 %10, label %11, label %370, !prof !1992, !noelle.pdg.inst.id !36 --->   br i1 %10, label %11, label %370, !prof !1992, !noelle.pdg.inst.id !36 via variable
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 39
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %26 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32"
HELIX:     Instructions that belong to the SS
HELIX:         %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30
HELIX:         br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32
HELIX:         %26 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254"
HELIX:        "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182"
HELIX:        "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320"
HELIX:        "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:     Instructions that belong to the SS
HELIX:         %330 = fsub double %318, %329, !noelle.pdg.inst.id !338
HELIX:         %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38
HELIX:         %117 = fsub double %105, %116, !noelle.pdg.inst.id !122
HELIX:         %46 = fsub double %34, %45, !noelle.pdg.inst.id !50
HELIX:         %141 = fsub double %129, %140, !noelle.pdg.inst.id !146
HELIX:         store double %307, double* %312, align 8, !noelle.pdg.inst.id !320
HELIX:         %259 = fsub double %247, %258, !noelle.pdg.inst.id !266
HELIX:         %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110
HELIX:         %295 = fsub double %283, %294, !noelle.pdg.inst.id !302
HELIX:         %378 = fsub double %366, %377, !noelle.pdg.inst.id !386
HELIX:         %188 = fsub double %176, %187, !noelle.pdg.inst.id !194
HELIX:         %224 = fsub double %212, %223, !noelle.pdg.inst.id !230
HELIX:         %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326
HELIX:         %165 = fsub double %153, %164, !noelle.pdg.inst.id !170
HELIX:         store double %94, double* %99, align 8, !noelle.pdg.inst.id !104
HELIX:         %212 = fsub double %200, %211, !noelle.pdg.inst.id !218
HELIX:         %366 = fsub double %354, %365, !noelle.pdg.inst.id !374
HELIX:         %58 = fsub double %46, %57, !noelle.pdg.inst.id !62
HELIX:         %283 = fsub double %271, %282, !noelle.pdg.inst.id !290
HELIX:         store double %236, double* %241, align 8, !noelle.pdg.inst.id !248
HELIX:         %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254
HELIX:         %271 = fsub double %259, %270, !noelle.pdg.inst.id !278
HELIX:         %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182
HELIX:         %342 = fsub double %330, %341, !noelle.pdg.inst.id !350
HELIX:         store double %165, double* %170, align 8, !noelle.pdg.inst.id !176
HELIX:         %153 = fsub double %141, %152, !noelle.pdg.inst.id !158
HELIX:         %354 = fsub double %342, %353, !noelle.pdg.inst.id !362
HELIX:         %70 = fsub double %58, %69, !noelle.pdg.inst.id !74
HELIX:         %200 = fsub double %188, %199, !noelle.pdg.inst.id !206
HELIX:         %94 = fsub double %82, %93, !noelle.pdg.inst.id !98
HELIX:         %307 = fsub double %295, %306, !noelle.pdg.inst.id !314
HELIX:         %82 = fsub double %70, %81, !noelle.pdg.inst.id !86
HELIX:         %129 = fsub double %117, %128, !noelle.pdg.inst.id !134
HELIX:         %236 = fsub double %224, %235, !noelle.pdg.inst.id !242
HELIX:         store double %378, double* %383, align 8, !noelle.pdg.inst.id !392
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 39
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  %26 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29"
HELIX:        "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32" -> "  br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32"
HELIX:     Instructions that belong to the SS
HELIX:         %27 = icmp slt i32 %26, 5, !noelle.pdg.inst.id !30
HELIX:         br i1 %27, label %28, label %24, !prof !31, !noelle.pdg.inst.id !32
HELIX:         %26 = load i32, i32* %15, align 4, !noelle.pdg.inst.id !29
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254"
HELIX:        "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182"
HELIX:        "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176"
HELIX:        "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182" -> "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176" -> "  %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320"
HELIX:        "  %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326" -> "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320"
HELIX:        "  store double %94, double* %99, align 8, !noelle.pdg.inst.id !104" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %236, double* %241, align 8, !noelle.pdg.inst.id !248" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %378, double* %383, align 8, !noelle.pdg.inst.id !392" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %307, double* %312, align 8, !noelle.pdg.inst.id !320" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:        "  store double %165, double* %170, align 8, !noelle.pdg.inst.id !176" -> "  %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38"
HELIX:     Instructions that belong to the SS
HELIX:         %330 = fsub double %318, %329, !noelle.pdg.inst.id !338
HELIX:         %34 = load double, double* %33, align 8, !noelle.pdg.inst.id !38
HELIX:         %117 = fsub double %105, %116, !noelle.pdg.inst.id !122
HELIX:         %46 = fsub double %34, %45, !noelle.pdg.inst.id !50
HELIX:         %141 = fsub double %129, %140, !noelle.pdg.inst.id !146
HELIX:         store double %307, double* %312, align 8, !noelle.pdg.inst.id !320
HELIX:         %259 = fsub double %247, %258, !noelle.pdg.inst.id !266
HELIX:         %105 = load double, double* %104, align 8, !noelle.pdg.inst.id !110
HELIX:         %295 = fsub double %283, %294, !noelle.pdg.inst.id !302
HELIX:         %378 = fsub double %366, %377, !noelle.pdg.inst.id !386
HELIX:         %188 = fsub double %176, %187, !noelle.pdg.inst.id !194
HELIX:         %224 = fsub double %212, %223, !noelle.pdg.inst.id !230
HELIX:         %318 = load double, double* %317, align 8, !noelle.pdg.inst.id !326
HELIX:         %165 = fsub double %153, %164, !noelle.pdg.inst.id !170
HELIX:         store double %94, double* %99, align 8, !noelle.pdg.inst.id !104
HELIX:         %212 = fsub double %200, %211, !noelle.pdg.inst.id !218
HELIX:         %366 = fsub double %354, %365, !noelle.pdg.inst.id !374
HELIX:         %58 = fsub double %46, %57, !noelle.pdg.inst.id !62
HELIX:         %283 = fsub double %271, %282, !noelle.pdg.inst.id !290
HELIX:         store double %236, double* %241, align 8, !noelle.pdg.inst.id !248
HELIX:         %247 = load double, double* %246, align 8, !noelle.pdg.inst.id !254
HELIX:         %271 = fsub double %259, %270, !noelle.pdg.inst.id !278
HELIX:         %176 = load double, double* %175, align 8, !noelle.pdg.inst.id !182
HELIX:         %342 = fsub double %330, %341, !noelle.pdg.inst.id !350
HELIX:         store double %165, double* %170, align 8, !noelle.pdg.inst.id !176
HELIX:         %153 = fsub double %141, %152, !noelle.pdg.inst.id !158
HELIX:         %354 = fsub double %342, %353, !noelle.pdg.inst.id !362
HELIX:         %70 = fsub double %58, %69, !noelle.pdg.inst.id !74
HELIX:         %200 = fsub double %188, %199, !noelle.pdg.inst.id !206
HELIX:         %94 = fsub double %82, %93, !noelle.pdg.inst.id !98
HELIX:         %307 = fsub double %295, %306, !noelle.pdg.inst.id !314
HELIX:         %82 = fsub double %70, %81, !noelle.pdg.inst.id !86
HELIX:         %129 = fsub double %117, %128, !noelle.pdg.inst.id !134
HELIX:         %236 = fsub double %224, %235, !noelle.pdg.inst.id !242
HELIX:         store double %378, double* %383, align 8, !noelle.pdg.inst.id !392
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @10(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i32, align 4, !noelle.pdg.inst.id !28
  %11 = bitcast i8* %0 to [32 x i64]*
  %12 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 0
  %13 = bitcast i64* %12 to [5 x double]***
  %14 = load [5 x double]**, [5 x double]*** %13
  %15 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 8
  %16 = bitcast i64* %15 to i32**
  %17 = load i32*, i32** %16
  %18 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 16
  %19 = bitcast i64* %18 to [5 x double]***
  %20 = load [5 x double]**, [5 x double]*** %19
  %21 = getelementptr inbounds [32 x i64], [32 x i64]* %11, i64 0, i64 24
  %22 = bitcast i64* %21 to [5 x double]***
  %23 = load [5 x double]**, [5 x double]*** %22
  %24 = bitcast i8* %1 to [0 x i64]*
  %25 = ptrtoint i8* %2 to i64
  %26 = add i64 0, %25
  %27 = inttoptr i64 %26 to i8*
  %28 = ptrtoint i8* %3 to i64
  %29 = add i64 0, %28
  %30 = inttoptr i64 %29 to i8*
  %31 = ptrtoint i8* %2 to i64
  %32 = add i64 64, %31
  %33 = inttoptr i64 %32 to i8*
  %34 = ptrtoint i8* %3 to i64
  %35 = add i64 64, %34
  %36 = inttoptr i64 %35 to i8*
  br label %43

37:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

38:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %39 = load i64, i64* %8
  %40 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %41 = call i32 @pthread_spin_unlock(i32* %40) #31, !noelle.pdg.inst.id !30
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %SS1-wait, label %SS1-entry

43:                                               ; preds = %7, %56
  store i64 0, i64* %8
  store i64 0, i64* %9
  %44 = load i64, i64* %9
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %SS0-wait2, label %SS0-entry1

46:                                               ; preds = %SS-passed-checkexit
  %47 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !31
  %48 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %49 = call i32 @pthread_spin_unlock(i32* %48) #31, !noelle.pdg.inst.id !30
  %50 = getelementptr inbounds [5 x double], [5 x double]* %47, i64 0, !noelle.pdg.inst.id !32
  %51 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !33
  %52 = sext i32 %51 to i64, !noelle.pdg.inst.id !34
  %53 = getelementptr inbounds [5 x double], [5 x double]* %50, i64 0, i64 %52, !noelle.pdg.inst.id !35
  %54 = load i64, i64* %8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %SS1-wait4, label %SS1-entry3

56:                                               ; preds = %SS1-entry3
  %57 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !36
  %58 = add nsw i32 %57, 1, !noelle.pdg.inst.id !37
  store i32 %58, i32* %17, align 4, !noelle.pdg.inst.id !38
  br label %43, !noelle.pdg.inst.id !39

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %59 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %60 = call i32 @pthread_spin_unlock(i32* %59) #31, !noelle.pdg.inst.id !30
  %61 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !29
  %62 = call i32 @pthread_spin_unlock(i32* %61) #31, !noelle.pdg.inst.id !30
  br label %37

SS0-wait:                                         ; preds = %SS1-entry
  %63 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !40
  %64 = call i32 @pthread_spin_lock(i32* %63) #31, !noelle.pdg.inst.id !41
  store i64 1, i64* %9
  br label %SS0-entry

SS1-entry:                                        ; preds = %38, %SS1-wait
  %65 = load i64, i64* %9
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %38
  %67 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !40
  %68 = call i32 @pthread_spin_lock(i32* %67) #31, !noelle.pdg.inst.id !41
  store i64 1, i64* %8
  br label %SS1-entry

SS0-entry1:                                       ; preds = %43, %SS0-wait2
  %69 = load i64, i64* %6
  %70 = icmp eq i64 1, %69
  br i1 %70, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %43
  %71 = bitcast i8* %27 to i32*, !noelle.pdg.inst.id !40
  %72 = call i32 @pthread_spin_lock(i32* %71) #31, !noelle.pdg.inst.id !41
  store i64 1, i64* %9
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %73 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !42
  %74 = icmp slt i32 %73, 5, !noelle.pdg.inst.id !43
  br i1 %74, label %46, label %38, !prof !44, !noelle.pdg.inst.id !45

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %75 = bitcast i8* %30 to i32*, !noelle.pdg.inst.id !29
  %76 = call i32 @pthread_spin_unlock(i32* %75) #31, !noelle.pdg.inst.id !30
  %77 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !29
  %78 = call i32 @pthread_spin_unlock(i32* %77) #31, !noelle.pdg.inst.id !30
  br label %37

SS1-entry3:                                       ; preds = %46, %SS1-wait4
  %79 = load double, double* %53, align 8, !noelle.pdg.inst.id !46
  %80 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !47
  %81 = getelementptr inbounds [5 x double], [5 x double]* %80, i64 0, !noelle.pdg.inst.id !48
  %82 = getelementptr inbounds [5 x double], [5 x double]* %81, i64 0, i64 0, !noelle.pdg.inst.id !49
  %83 = load double, double* %82, align 8, !noelle.pdg.inst.id !50
  %84 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !51
  %85 = getelementptr inbounds [5 x double], [5 x double]* %84, i64 0, !noelle.pdg.inst.id !52
  %86 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !53
  %87 = sext i32 %86 to i64, !noelle.pdg.inst.id !54
  %88 = getelementptr inbounds [5 x double], [5 x double]* %85, i64 0, i64 %87, !noelle.pdg.inst.id !55
  %89 = load double, double* %88, align 8, !noelle.pdg.inst.id !56
  %90 = fmul double %83, %89, !noelle.pdg.inst.id !57
  %91 = fsub double %79, %90, !noelle.pdg.inst.id !58
  %92 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !59
  %93 = getelementptr inbounds [5 x double], [5 x double]* %92, i64 0, !noelle.pdg.inst.id !60
  %94 = getelementptr inbounds [5 x double], [5 x double]* %93, i64 0, i64 1, !noelle.pdg.inst.id !61
  %95 = load double, double* %94, align 8, !noelle.pdg.inst.id !62
  %96 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !63
  %97 = getelementptr inbounds [5 x double], [5 x double]* %96, i64 1, !noelle.pdg.inst.id !64
  %98 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !65
  %99 = sext i32 %98 to i64, !noelle.pdg.inst.id !66
  %100 = getelementptr inbounds [5 x double], [5 x double]* %97, i64 0, i64 %99, !noelle.pdg.inst.id !67
  %101 = load double, double* %100, align 8, !noelle.pdg.inst.id !68
  %102 = fmul double %95, %101, !noelle.pdg.inst.id !69
  %103 = fsub double %91, %102, !noelle.pdg.inst.id !70
  %104 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !71
  %105 = getelementptr inbounds [5 x double], [5 x double]* %104, i64 0, !noelle.pdg.inst.id !72
  %106 = getelementptr inbounds [5 x double], [5 x double]* %105, i64 0, i64 2, !noelle.pdg.inst.id !73
  %107 = load double, double* %106, align 8, !noelle.pdg.inst.id !74
  %108 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !75
  %109 = getelementptr inbounds [5 x double], [5 x double]* %108, i64 2, !noelle.pdg.inst.id !76
  %110 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !77
  %111 = sext i32 %110 to i64, !noelle.pdg.inst.id !78
  %112 = getelementptr inbounds [5 x double], [5 x double]* %109, i64 0, i64 %111, !noelle.pdg.inst.id !79
  %113 = load double, double* %112, align 8, !noelle.pdg.inst.id !80
  %114 = fmul double %107, %113, !noelle.pdg.inst.id !81
  %115 = fsub double %103, %114, !noelle.pdg.inst.id !82
  %116 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !83
  %117 = getelementptr inbounds [5 x double], [5 x double]* %116, i64 0, !noelle.pdg.inst.id !84
  %118 = getelementptr inbounds [5 x double], [5 x double]* %117, i64 0, i64 3, !noelle.pdg.inst.id !85
  %119 = load double, double* %118, align 8, !noelle.pdg.inst.id !86
  %120 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !87
  %121 = getelementptr inbounds [5 x double], [5 x double]* %120, i64 3, !noelle.pdg.inst.id !88
  %122 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !89
  %123 = sext i32 %122 to i64, !noelle.pdg.inst.id !90
  %124 = getelementptr inbounds [5 x double], [5 x double]* %121, i64 0, i64 %123, !noelle.pdg.inst.id !91
  %125 = load double, double* %124, align 8, !noelle.pdg.inst.id !92
  %126 = fmul double %119, %125, !noelle.pdg.inst.id !93
  %127 = fsub double %115, %126, !noelle.pdg.inst.id !94
  %128 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !95
  %129 = getelementptr inbounds [5 x double], [5 x double]* %128, i64 0, !noelle.pdg.inst.id !96
  %130 = getelementptr inbounds [5 x double], [5 x double]* %129, i64 0, i64 4, !noelle.pdg.inst.id !97
  %131 = load double, double* %130, align 8, !noelle.pdg.inst.id !98
  %132 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !99
  %133 = getelementptr inbounds [5 x double], [5 x double]* %132, i64 4, !noelle.pdg.inst.id !100
  %134 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !101
  %135 = sext i32 %134 to i64, !noelle.pdg.inst.id !102
  %136 = getelementptr inbounds [5 x double], [5 x double]* %133, i64 0, i64 %135, !noelle.pdg.inst.id !103
  %137 = load double, double* %136, align 8, !noelle.pdg.inst.id !104
  %138 = fmul double %131, %137, !noelle.pdg.inst.id !105
  %139 = fsub double %127, %138, !noelle.pdg.inst.id !106
  %140 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !107
  %141 = getelementptr inbounds [5 x double], [5 x double]* %140, i64 0, !noelle.pdg.inst.id !108
  %142 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !109
  %143 = sext i32 %142 to i64, !noelle.pdg.inst.id !110
  %144 = getelementptr inbounds [5 x double], [5 x double]* %141, i64 0, i64 %143, !noelle.pdg.inst.id !111
  store double %139, double* %144, align 8, !noelle.pdg.inst.id !112
  %145 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !113
  %146 = getelementptr inbounds [5 x double], [5 x double]* %145, i64 1, !noelle.pdg.inst.id !114
  %147 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !115
  %148 = sext i32 %147 to i64, !noelle.pdg.inst.id !116
  %149 = getelementptr inbounds [5 x double], [5 x double]* %146, i64 0, i64 %148, !noelle.pdg.inst.id !117
  %150 = load double, double* %149, align 8, !noelle.pdg.inst.id !118
  %151 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !119
  %152 = getelementptr inbounds [5 x double], [5 x double]* %151, i64 1, !noelle.pdg.inst.id !120
  %153 = getelementptr inbounds [5 x double], [5 x double]* %152, i64 0, i64 0, !noelle.pdg.inst.id !121
  %154 = load double, double* %153, align 8, !noelle.pdg.inst.id !122
  %155 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !123
  %156 = getelementptr inbounds [5 x double], [5 x double]* %155, i64 0, !noelle.pdg.inst.id !124
  %157 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !125
  %158 = sext i32 %157 to i64, !noelle.pdg.inst.id !126
  %159 = getelementptr inbounds [5 x double], [5 x double]* %156, i64 0, i64 %158, !noelle.pdg.inst.id !127
  %160 = load double, double* %159, align 8, !noelle.pdg.inst.id !128
  %161 = fmul double %154, %160, !noelle.pdg.inst.id !129
  %162 = fsub double %150, %161, !noelle.pdg.inst.id !130
  %163 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !131
  %164 = getelementptr inbounds [5 x double], [5 x double]* %163, i64 1, !noelle.pdg.inst.id !132
  %165 = getelementptr inbounds [5 x double], [5 x double]* %164, i64 0, i64 1, !noelle.pdg.inst.id !133
  %166 = load double, double* %165, align 8, !noelle.pdg.inst.id !134
  %167 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !135
  %168 = getelementptr inbounds [5 x double], [5 x double]* %167, i64 1, !noelle.pdg.inst.id !136
  %169 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !137
  %170 = sext i32 %169 to i64, !noelle.pdg.inst.id !138
  %171 = getelementptr inbounds [5 x double], [5 x double]* %168, i64 0, i64 %170, !noelle.pdg.inst.id !139
  %172 = load double, double* %171, align 8, !noelle.pdg.inst.id !140
  %173 = fmul double %166, %172, !noelle.pdg.inst.id !141
  %174 = fsub double %162, %173, !noelle.pdg.inst.id !142
  %175 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !143
  %176 = getelementptr inbounds [5 x double], [5 x double]* %175, i64 1, !noelle.pdg.inst.id !144
  %177 = getelementptr inbounds [5 x double], [5 x double]* %176, i64 0, i64 2, !noelle.pdg.inst.id !145
  %178 = load double, double* %177, align 8, !noelle.pdg.inst.id !146
  %179 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !147
  %180 = getelementptr inbounds [5 x double], [5 x double]* %179, i64 2, !noelle.pdg.inst.id !148
  %181 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !149
  %182 = sext i32 %181 to i64, !noelle.pdg.inst.id !150
  %183 = getelementptr inbounds [5 x double], [5 x double]* %180, i64 0, i64 %182, !noelle.pdg.inst.id !151
  %184 = load double, double* %183, align 8, !noelle.pdg.inst.id !152
  %185 = fmul double %178, %184, !noelle.pdg.inst.id !153
  %186 = fsub double %174, %185, !noelle.pdg.inst.id !154
  %187 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !155
  %188 = getelementptr inbounds [5 x double], [5 x double]* %187, i64 1, !noelle.pdg.inst.id !156
  %189 = getelementptr inbounds [5 x double], [5 x double]* %188, i64 0, i64 3, !noelle.pdg.inst.id !157
  %190 = load double, double* %189, align 8, !noelle.pdg.inst.id !158
  %191 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !159
  %192 = getelementptr inbounds [5 x double], [5 x double]* %191, i64 3, !noelle.pdg.inst.id !160
  %193 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !161
  %194 = sext i32 %193 to i64, !noelle.pdg.inst.id !162
  %195 = getelementptr inbounds [5 x double], [5 x double]* %192, i64 0, i64 %194, !noelle.pdg.inst.id !163
  %196 = load double, double* %195, align 8, !noelle.pdg.inst.id !164
  %197 = fmul double %190, %196, !noelle.pdg.inst.id !165
  %198 = fsub double %186, %197, !noelle.pdg.inst.id !166
  %199 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !167
  %200 = getelementptr inbounds [5 x double], [5 x double]* %199, i64 1, !noelle.pdg.inst.id !168
  %201 = getelementptr inbounds [5 x double], [5 x double]* %200, i64 0, i64 4, !noelle.pdg.inst.id !169
  %202 = load double, double* %201, align 8, !noelle.pdg.inst.id !170
  %203 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !171
  %204 = getelementptr inbounds [5 x double], [5 x double]* %203, i64 4, !noelle.pdg.inst.id !172
  %205 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !173
  %206 = sext i32 %205 to i64, !noelle.pdg.inst.id !174
  %207 = getelementptr inbounds [5 x double], [5 x double]* %204, i64 0, i64 %206, !noelle.pdg.inst.id !175
  %208 = load double, double* %207, align 8, !noelle.pdg.inst.id !176
  %209 = fmul double %202, %208, !noelle.pdg.inst.id !177
  %210 = fsub double %198, %209, !noelle.pdg.inst.id !178
  %211 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !179
  %212 = getelementptr inbounds [5 x double], [5 x double]* %211, i64 1, !noelle.pdg.inst.id !180
  %213 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !181
  %214 = sext i32 %213 to i64, !noelle.pdg.inst.id !182
  %215 = getelementptr inbounds [5 x double], [5 x double]* %212, i64 0, i64 %214, !noelle.pdg.inst.id !183
  store double %210, double* %215, align 8, !noelle.pdg.inst.id !184
  %216 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !185
  %217 = getelementptr inbounds [5 x double], [5 x double]* %216, i64 2, !noelle.pdg.inst.id !186
  %218 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !187
  %219 = sext i32 %218 to i64, !noelle.pdg.inst.id !188
  %220 = getelementptr inbounds [5 x double], [5 x double]* %217, i64 0, i64 %219, !noelle.pdg.inst.id !189
  %221 = load double, double* %220, align 8, !noelle.pdg.inst.id !190
  %222 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !191
  %223 = getelementptr inbounds [5 x double], [5 x double]* %222, i64 2, !noelle.pdg.inst.id !192
  %224 = getelementptr inbounds [5 x double], [5 x double]* %223, i64 0, i64 0, !noelle.pdg.inst.id !193
  %225 = load double, double* %224, align 8, !noelle.pdg.inst.id !194
  %226 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !195
  %227 = getelementptr inbounds [5 x double], [5 x double]* %226, i64 0, !noelle.pdg.inst.id !196
  %228 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !197
  %229 = sext i32 %228 to i64, !noelle.pdg.inst.id !198
  %230 = getelementptr inbounds [5 x double], [5 x double]* %227, i64 0, i64 %229, !noelle.pdg.inst.id !199
  %231 = load double, double* %230, align 8, !noelle.pdg.inst.id !200
  %232 = fmul double %225, %231, !noelle.pdg.inst.id !201
  %233 = fsub double %221, %232, !noelle.pdg.inst.id !202
  %234 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !203
  %235 = getelementptr inbounds [5 x double], [5 x double]* %234, i64 2, !noelle.pdg.inst.id !204
  %236 = getelementptr inbounds [5 x double], [5 x double]* %235, i64 0, i64 1, !noelle.pdg.inst.id !205
  %237 = load double, double* %236, align 8, !noelle.pdg.inst.id !206
  %238 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !207
  %239 = getelementptr inbounds [5 x double], [5 x double]* %238, i64 1, !noelle.pdg.inst.id !208
  %240 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !209
  %241 = sext i32 %240 to i64, !noelle.pdg.inst.id !210
  %242 = getelementptr inbounds [5 x double], [5 x double]* %239, i64 0, i64 %241, !noelle.pdg.inst.id !211
  %243 = load double, double* %242, align 8, !noelle.pdg.inst.id !212
  %244 = fmul double %237, %243, !noelle.pdg.inst.id !213
  %245 = fsub double %233, %244, !noelle.pdg.inst.id !214
  %246 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !215
  %247 = getelementptr inbounds [5 x double], [5 x double]* %246, i64 2, !noelle.pdg.inst.id !216
  %248 = getelementptr inbounds [5 x double], [5 x double]* %247, i64 0, i64 2, !noelle.pdg.inst.id !217
  %249 = load double, double* %248, align 8, !noelle.pdg.inst.id !218
  %250 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !219
  %251 = getelementptr inbounds [5 x double], [5 x double]* %250, i64 2, !noelle.pdg.inst.id !220
  %252 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !221
  %253 = sext i32 %252 to i64, !noelle.pdg.inst.id !222
  %254 = getelementptr inbounds [5 x double], [5 x double]* %251, i64 0, i64 %253, !noelle.pdg.inst.id !223
  %255 = load double, double* %254, align 8, !noelle.pdg.inst.id !224
  %256 = fmul double %249, %255, !noelle.pdg.inst.id !225
  %257 = fsub double %245, %256, !noelle.pdg.inst.id !226
  %258 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !227
  %259 = getelementptr inbounds [5 x double], [5 x double]* %258, i64 2, !noelle.pdg.inst.id !228
  %260 = getelementptr inbounds [5 x double], [5 x double]* %259, i64 0, i64 3, !noelle.pdg.inst.id !229
  %261 = load double, double* %260, align 8, !noelle.pdg.inst.id !230
  %262 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !231
  %263 = getelementptr inbounds [5 x double], [5 x double]* %262, i64 3, !noelle.pdg.inst.id !232
  %264 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !233
  %265 = sext i32 %264 to i64, !noelle.pdg.inst.id !234
  %266 = getelementptr inbounds [5 x double], [5 x double]* %263, i64 0, i64 %265, !noelle.pdg.inst.id !235
  %267 = load double, double* %266, align 8, !noelle.pdg.inst.id !236
  %268 = fmul double %261, %267, !noelle.pdg.inst.id !237
  %269 = fsub double %257, %268, !noelle.pdg.inst.id !238
  %270 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !239
  %271 = getelementptr inbounds [5 x double], [5 x double]* %270, i64 2, !noelle.pdg.inst.id !240
  %272 = getelementptr inbounds [5 x double], [5 x double]* %271, i64 0, i64 4, !noelle.pdg.inst.id !241
  %273 = load double, double* %272, align 8, !noelle.pdg.inst.id !242
  %274 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !243
  %275 = getelementptr inbounds [5 x double], [5 x double]* %274, i64 4, !noelle.pdg.inst.id !244
  %276 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !245
  %277 = sext i32 %276 to i64, !noelle.pdg.inst.id !246
  %278 = getelementptr inbounds [5 x double], [5 x double]* %275, i64 0, i64 %277, !noelle.pdg.inst.id !247
  %279 = load double, double* %278, align 8, !noelle.pdg.inst.id !248
  %280 = fmul double %273, %279, !noelle.pdg.inst.id !249
  %281 = fsub double %269, %280, !noelle.pdg.inst.id !250
  %282 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !251
  %283 = getelementptr inbounds [5 x double], [5 x double]* %282, i64 2, !noelle.pdg.inst.id !252
  %284 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !253
  %285 = sext i32 %284 to i64, !noelle.pdg.inst.id !254
  %286 = getelementptr inbounds [5 x double], [5 x double]* %283, i64 0, i64 %285, !noelle.pdg.inst.id !255
  store double %281, double* %286, align 8, !noelle.pdg.inst.id !256
  %287 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !257
  %288 = getelementptr inbounds [5 x double], [5 x double]* %287, i64 3, !noelle.pdg.inst.id !258
  %289 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !259
  %290 = sext i32 %289 to i64, !noelle.pdg.inst.id !260
  %291 = getelementptr inbounds [5 x double], [5 x double]* %288, i64 0, i64 %290, !noelle.pdg.inst.id !261
  %292 = load double, double* %291, align 8, !noelle.pdg.inst.id !262
  %293 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !263
  %294 = getelementptr inbounds [5 x double], [5 x double]* %293, i64 3, !noelle.pdg.inst.id !264
  %295 = getelementptr inbounds [5 x double], [5 x double]* %294, i64 0, i64 0, !noelle.pdg.inst.id !265
  %296 = load double, double* %295, align 8, !noelle.pdg.inst.id !266
  %297 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !267
  %298 = getelementptr inbounds [5 x double], [5 x double]* %297, i64 0, !noelle.pdg.inst.id !268
  %299 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !269
  %300 = sext i32 %299 to i64, !noelle.pdg.inst.id !270
  %301 = getelementptr inbounds [5 x double], [5 x double]* %298, i64 0, i64 %300, !noelle.pdg.inst.id !271
  %302 = load double, double* %301, align 8, !noelle.pdg.inst.id !272
  %303 = fmul double %296, %302, !noelle.pdg.inst.id !273
  %304 = fsub double %292, %303, !noelle.pdg.inst.id !274
  %305 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !275
  %306 = getelementptr inbounds [5 x double], [5 x double]* %305, i64 3, !noelle.pdg.inst.id !276
  %307 = getelementptr inbounds [5 x double], [5 x double]* %306, i64 0, i64 1, !noelle.pdg.inst.id !277
  %308 = load double, double* %307, align 8, !noelle.pdg.inst.id !278
  %309 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !279
  %310 = getelementptr inbounds [5 x double], [5 x double]* %309, i64 1, !noelle.pdg.inst.id !280
  %311 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !281
  %312 = sext i32 %311 to i64, !noelle.pdg.inst.id !282
  %313 = getelementptr inbounds [5 x double], [5 x double]* %310, i64 0, i64 %312, !noelle.pdg.inst.id !283
  %314 = load double, double* %313, align 8, !noelle.pdg.inst.id !284
  %315 = fmul double %308, %314, !noelle.pdg.inst.id !285
  %316 = fsub double %304, %315, !noelle.pdg.inst.id !286
  %317 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !287
  %318 = getelementptr inbounds [5 x double], [5 x double]* %317, i64 3, !noelle.pdg.inst.id !288
  %319 = getelementptr inbounds [5 x double], [5 x double]* %318, i64 0, i64 2, !noelle.pdg.inst.id !289
  %320 = load double, double* %319, align 8, !noelle.pdg.inst.id !290
  %321 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !291
  %322 = getelementptr inbounds [5 x double], [5 x double]* %321, i64 2, !noelle.pdg.inst.id !292
  %323 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !293
  %324 = sext i32 %323 to i64, !noelle.pdg.inst.id !294
  %325 = getelementptr inbounds [5 x double], [5 x double]* %322, i64 0, i64 %324, !noelle.pdg.inst.id !295
  %326 = load double, double* %325, align 8, !noelle.pdg.inst.id !296
  %327 = fmul double %320, %326, !noelle.pdg.inst.id !297
  %328 = fsub double %316, %327, !noelle.pdg.inst.id !298
  %329 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !299
  %330 = getelementptr inbounds [5 x double], [5 x double]* %329, i64 3, !noelle.pdg.inst.id !300
  %331 = getelementptr inbounds [5 x double], [5 x double]* %330, i64 0, i64 3, !noelle.pdg.inst.id !301
  %332 = load double, double* %331, align 8, !noelle.pdg.inst.id !302
  %333 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !303
  %334 = getelementptr inbounds [5 x double], [5 x double]* %333, i64 3, !noelle.pdg.inst.id !304
  %335 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !305
  %336 = sext i32 %335 to i64, !noelle.pdg.inst.id !306
  %337 = getelementptr inbounds [5 x double], [5 x double]* %334, i64 0, i64 %336, !noelle.pdg.inst.id !307
  %338 = load double, double* %337, align 8, !noelle.pdg.inst.id !308
  %339 = fmul double %332, %338, !noelle.pdg.inst.id !309
  %340 = fsub double %328, %339, !noelle.pdg.inst.id !310
  %341 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !311
  %342 = getelementptr inbounds [5 x double], [5 x double]* %341, i64 3, !noelle.pdg.inst.id !312
  %343 = getelementptr inbounds [5 x double], [5 x double]* %342, i64 0, i64 4, !noelle.pdg.inst.id !313
  %344 = load double, double* %343, align 8, !noelle.pdg.inst.id !314
  %345 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !315
  %346 = getelementptr inbounds [5 x double], [5 x double]* %345, i64 4, !noelle.pdg.inst.id !316
  %347 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !317
  %348 = sext i32 %347 to i64, !noelle.pdg.inst.id !318
  %349 = getelementptr inbounds [5 x double], [5 x double]* %346, i64 0, i64 %348, !noelle.pdg.inst.id !319
  %350 = load double, double* %349, align 8, !noelle.pdg.inst.id !320
  %351 = fmul double %344, %350, !noelle.pdg.inst.id !321
  %352 = fsub double %340, %351, !noelle.pdg.inst.id !322
  %353 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !323
  %354 = getelementptr inbounds [5 x double], [5 x double]* %353, i64 3, !noelle.pdg.inst.id !324
  %355 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !325
  %356 = sext i32 %355 to i64, !noelle.pdg.inst.id !326
  %357 = getelementptr inbounds [5 x double], [5 x double]* %354, i64 0, i64 %356, !noelle.pdg.inst.id !327
  store double %352, double* %357, align 8, !noelle.pdg.inst.id !328
  %358 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !329
  %359 = getelementptr inbounds [5 x double], [5 x double]* %358, i64 4, !noelle.pdg.inst.id !330
  %360 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !331
  %361 = sext i32 %360 to i64, !noelle.pdg.inst.id !332
  %362 = getelementptr inbounds [5 x double], [5 x double]* %359, i64 0, i64 %361, !noelle.pdg.inst.id !333
  %363 = load double, double* %362, align 8, !noelle.pdg.inst.id !334
  %364 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !335
  %365 = getelementptr inbounds [5 x double], [5 x double]* %364, i64 4, !noelle.pdg.inst.id !336
  %366 = getelementptr inbounds [5 x double], [5 x double]* %365, i64 0, i64 0, !noelle.pdg.inst.id !337
  %367 = load double, double* %366, align 8, !noelle.pdg.inst.id !338
  %368 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !339
  %369 = getelementptr inbounds [5 x double], [5 x double]* %368, i64 0, !noelle.pdg.inst.id !340
  %370 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !341
  %371 = sext i32 %370 to i64, !noelle.pdg.inst.id !342
  %372 = getelementptr inbounds [5 x double], [5 x double]* %369, i64 0, i64 %371, !noelle.pdg.inst.id !343
  %373 = load double, double* %372, align 8, !noelle.pdg.inst.id !344
  %374 = fmul double %367, %373, !noelle.pdg.inst.id !345
  %375 = fsub double %363, %374, !noelle.pdg.inst.id !346
  %376 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !347
  %377 = getelementptr inbounds [5 x double], [5 x double]* %376, i64 4, !noelle.pdg.inst.id !348
  %378 = getelementptr inbounds [5 x double], [5 x double]* %377, i64 0, i64 1, !noelle.pdg.inst.id !349
  %379 = load double, double* %378, align 8, !noelle.pdg.inst.id !350
  %380 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !351
  %381 = getelementptr inbounds [5 x double], [5 x double]* %380, i64 1, !noelle.pdg.inst.id !352
  %382 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !353
  %383 = sext i32 %382 to i64, !noelle.pdg.inst.id !354
  %384 = getelementptr inbounds [5 x double], [5 x double]* %381, i64 0, i64 %383, !noelle.pdg.inst.id !355
  %385 = load double, double* %384, align 8, !noelle.pdg.inst.id !356
  %386 = fmul double %379, %385, !noelle.pdg.inst.id !357
  %387 = fsub double %375, %386, !noelle.pdg.inst.id !358
  %388 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !359
  %389 = getelementptr inbounds [5 x double], [5 x double]* %388, i64 4, !noelle.pdg.inst.id !360
  %390 = getelementptr inbounds [5 x double], [5 x double]* %389, i64 0, i64 2, !noelle.pdg.inst.id !361
  %391 = load double, double* %390, align 8, !noelle.pdg.inst.id !362
  %392 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !363
  %393 = getelementptr inbounds [5 x double], [5 x double]* %392, i64 2, !noelle.pdg.inst.id !364
  %394 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !365
  %395 = sext i32 %394 to i64, !noelle.pdg.inst.id !366
  %396 = getelementptr inbounds [5 x double], [5 x double]* %393, i64 0, i64 %395, !noelle.pdg.inst.id !367
  %397 = load double, double* %396, align 8, !noelle.pdg.inst.id !368
  %398 = fmul double %391, %397, !noelle.pdg.inst.id !369
  %399 = fsub double %387, %398, !noelle.pdg.inst.id !370
  %400 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !371
  %401 = getelementptr inbounds [5 x double], [5 x double]* %400, i64 4, !noelle.pdg.inst.id !372
  %402 = getelementptr inbounds [5 x double], [5 x double]* %401, i64 0, i64 3, !noelle.pdg.inst.id !373
  %403 = load double, double* %402, align 8, !noelle.pdg.inst.id !374
  %404 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !375
  %405 = getelementptr inbounds [5 x double], [5 x double]* %404, i64 3, !noelle.pdg.inst.id !376
  %406 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !377
  %407 = sext i32 %406 to i64, !noelle.pdg.inst.id !378
  %408 = getelementptr inbounds [5 x double], [5 x double]* %405, i64 0, i64 %407, !noelle.pdg.inst.id !379
  %409 = load double, double* %408, align 8, !noelle.pdg.inst.id !380
  %410 = fmul double %403, %409, !noelle.pdg.inst.id !381
  %411 = fsub double %399, %410, !noelle.pdg.inst.id !382
  %412 = load [5 x double]*, [5 x double]** %23, align 8, !noelle.pdg.inst.id !383
  %413 = getelementptr inbounds [5 x double], [5 x double]* %412, i64 4, !noelle.pdg.inst.id !384
  %414 = getelementptr inbounds [5 x double], [5 x double]* %413, i64 0, i64 4, !noelle.pdg.inst.id !385
  %415 = load double, double* %414, align 8, !noelle.pdg.inst.id !386
  %416 = load [5 x double]*, [5 x double]** %20, align 8, !noelle.pdg.inst.id !387
  %417 = getelementptr inbounds [5 x double], [5 x double]* %416, i64 4, !noelle.pdg.inst.id !388
  %418 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !389
  %419 = sext i32 %418 to i64, !noelle.pdg.inst.id !390
  %420 = getelementptr inbounds [5 x double], [5 x double]* %417, i64 0, i64 %419, !noelle.pdg.inst.id !391
  %421 = load double, double* %420, align 8, !noelle.pdg.inst.id !392
  %422 = fmul double %415, %421, !noelle.pdg.inst.id !393
  %423 = fsub double %411, %422, !noelle.pdg.inst.id !394
  %424 = load [5 x double]*, [5 x double]** %14, align 8, !noelle.pdg.inst.id !395
  %425 = getelementptr inbounds [5 x double], [5 x double]* %424, i64 4, !noelle.pdg.inst.id !396
  %426 = load i32, i32* %17, align 4, !noelle.pdg.inst.id !397
  %427 = sext i32 %426 to i64, !noelle.pdg.inst.id !398
  %428 = getelementptr inbounds [5 x double], [5 x double]* %425, i64 0, i64 %427, !noelle.pdg.inst.id !399
  store double %423, double* %428, align 8, !noelle.pdg.inst.id !400
  %429 = bitcast i8* %36 to i32*, !noelle.pdg.inst.id !29
  %430 = call i32 @pthread_spin_unlock(i32* %429) #31, !noelle.pdg.inst.id !30
  br label %56, !noelle.pdg.inst.id !401

SS1-wait4:                                        ; preds = %46
  %431 = bitcast i8* %33 to i32*, !noelle.pdg.inst.id !40
  %432 = call i32 @pthread_spin_lock(i32* %431) #31, !noelle.pdg.inst.id !41
  store i64 1, i64* %8
  br label %SS1-entry3
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 151 has been parallelized
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 153 savings = 3.145886e-06%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "x_solve_cell"
Parallelizer:  Loop 153 = "  %57 = load i32, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !568"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         %69 = load i32, i32* %3, align 4, !note.noelle !1567, !noelle.pdg.inst.id !253 --->   store i32 1, i32* %3, align 4, !note.noelle !1567, !noelle.pdg.inst.id !258 via memory
HELIX:         store i32 %175, i32* %3, align 4, !note.noelle !1567, !noelle.pdg.inst.id !473 --->   store i32 1, i32* %3, align 4, !note.noelle !1567, !noelle.pdg.inst.id !258 via memory
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %107 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !452 via memory
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %118 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !207 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1570, !note.noelle !1567, !noelle.pdg.inst.id !149 --->   %66 = icmp slt i32 %62, %65, !note.noelle !1567, !noelle.pdg.inst.id !260 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1570, !note.noelle !1567, !noelle.pdg.inst.id !149 --->   %64 = load i32, i32* %63, align 4, !note.noelle !1567, !noelle.pdg.inst.id !264 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1570, !note.noelle !1567, !noelle.pdg.inst.id !149 --->   %63 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !266 via variable
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %152 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !448 via memory
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %141 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !187 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1570, !note.noelle !1567, !noelle.pdg.inst.id !149 --->   br i1 %66, label %67, label %180, !prof !1570, !note.noelle !1567, !noelle.pdg.inst.id !149 via variable
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %75 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !249 via memory
HELIX:         br i1 %66, label %67, label %180, !prof !1570, !note.noelle !1567, !noelle.pdg.inst.id !149 --->   %62 = load i32, i32* %2, align 4, !note.noelle !1567, !noelle.pdg.inst.id !550 via variable
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %130 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !450 via memory
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %163 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !446 via memory
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %86 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !239 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1572, !note.noelle !1567, !noelle.pdg.inst.id !156 --->   %73 = icmp slt i32 %69, %72, !note.noelle !1567, !noelle.pdg.inst.id !251 via variable
HELIX:         store i32 %183, i32* %1, align 4, !note.noelle !1564, !noelle.pdg.inst.id !141 --->   %97 = load i32, i32* %1, align 4, !note.noelle !1567, !noelle.pdg.inst.id !578 via memory
HELIX:         br i1 %73, label %74, label %176, !prof !1572, !note.noelle !1567, !noelle.pdg.inst.id !156 --->   br i1 %73, label %74, label %176, !prof !1572, !note.noelle !1567, !noelle.pdg.inst.id !156 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1572, !note.noelle !1567, !noelle.pdg.inst.id !156 --->   %69 = load i32, i32* %3, align 4, !note.noelle !1567, !noelle.pdg.inst.id !253 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1572, !note.noelle !1567, !noelle.pdg.inst.id !156 --->   %70 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !736 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1572, !note.noelle !1567, !noelle.pdg.inst.id !156 --->   %72 = sub nsw i32 %71, 1, !note.noelle !1567, !noelle.pdg.inst.id !256 via variable
HELIX:         br i1 %73, label %74, label %176, !prof !1572, !note.noelle !1567, !noelle.pdg.inst.id !156 --->   %71 = load i32, i32* %70, align 4, !note.noelle !1567, !noelle.pdg.inst.id !734 via variable
HELIX:         br i1 %66, label %67, label %180, !prof !1570, !note.noelle !1567, !noelle.pdg.inst.id !149 --->   %65 = sub nsw i32 %64, 1, !note.noelle !1567, !noelle.pdg.inst.id !262 via variable
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %34 = icmp slt i32 %30, %33, !note.noelle !37, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %94 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !109"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %44 = sub nsw i32 %43, 1, !note.noelle !37, !noelle.pdg.inst.id !56"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %123 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !139"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %89 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !104"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %120 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !136"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %83 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !98"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %76 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !90"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %101 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !116"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %106 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !121"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %109 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !124"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %150 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !167"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %112 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !127"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %131 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !147"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %117 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !133"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %43 = load i32, i32* %42, align 4, !note.noelle !37, !noelle.pdg.inst.id !55"
HELIX:        "  %69 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !83" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %79 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !93" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %134 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !150" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %123 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !139" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %112 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !127" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %89 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !104" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %57 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !71" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %145 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !161" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %101 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !116" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %150 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !167" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %79 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !93"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %139 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !155"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %66 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !80"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  %26 = load i32, i32* %17, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %128 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !144"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %145 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !161"
HELIX:        "  %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39" -> "  store i32 1, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  store i32 1, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %69 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !83"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39"
HELIX:        "  %66 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !80" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %76 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !90" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %86 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !101" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %120 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !136" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %142 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !158" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %54 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !68" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %98 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !113" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %131 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !147" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %109 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !124" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %142 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !158"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %62 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !76"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %37 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !47"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %48 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !61"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %42 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !54"
HELIX:        "  %62 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !76" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %94 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !109" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %83 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !98" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %128 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !144" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %117 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !133" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %106 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !121" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %73 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !87" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %139 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !155" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %51 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !65" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %98 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !113"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %57 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !71"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %134 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !150"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %73 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !87"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %32 = load i32, i32* %31, align 4, !note.noelle !37, !noelle.pdg.inst.id !41"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  %25 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !30"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %25 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !30"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %86 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !101"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %54 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !68"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %31 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !40"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  %27 = icmp slt i32 %25, %26, !note.noelle !28, !noelle.pdg.inst.id !32"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %45 = icmp slt i32 %41, %44, !note.noelle !37, !noelle.pdg.inst.id !57"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %33 = sub nsw i32 %32, 1, !note.noelle !37, !noelle.pdg.inst.id !42"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %51 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !65"
HELIX:     Instructions that belong to the SS
HELIX:         %51 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !65
HELIX:         %33 = sub nsw i32 %32, 1, !note.noelle !37, !noelle.pdg.inst.id !42
HELIX:         %45 = icmp slt i32 %41, %44, !note.noelle !37, !noelle.pdg.inst.id !57
HELIX:         %27 = icmp slt i32 %25, %26, !note.noelle !28, !noelle.pdg.inst.id !32
HELIX:         %151 = add nsw i32 %150, 1, !note.noelle !37, !noelle.pdg.inst.id !168
HELIX:         %31 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !40
HELIX:         %54 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !68
HELIX:         %86 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !101
HELIX:         %25 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !30
HELIX:         %32 = load i32, i32* %31, align 4, !note.noelle !37, !noelle.pdg.inst.id !41
HELIX:         %73 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !87
HELIX:         %134 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !150
HELIX:         %57 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !71
HELIX:         %98 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !113
HELIX:         br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59
HELIX:         store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49
HELIX:         %42 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !54
HELIX:         %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53
HELIX:         %150 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !167
HELIX:         %109 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !124
HELIX:         %106 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !121
HELIX:         %101 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !116
HELIX:         %83 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !98
HELIX:         %112 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !127
HELIX:         br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34
HELIX:         %94 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !109
HELIX:         %62 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !76
HELIX:         %37 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !47
HELIX:         %89 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !104
HELIX:         %48 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !61
HELIX:         %131 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !147
HELIX:         %38 = add nsw i32 %37, 1, !note.noelle !28, !noelle.pdg.inst.id !48
HELIX:         %117 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !133
HELIX:         %43 = load i32, i32* %42, align 4, !note.noelle !37, !noelle.pdg.inst.id !55
HELIX:         store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51
HELIX:         %34 = icmp slt i32 %30, %33, !note.noelle !37, !noelle.pdg.inst.id !43
HELIX:         store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63
HELIX:         %142 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !158
HELIX:         %44 = sub nsw i32 %43, 1, !note.noelle !37, !noelle.pdg.inst.id !56
HELIX:         %123 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !139
HELIX:         %49 = add nsw i32 %48, 1, !note.noelle !37, !noelle.pdg.inst.id !62
HELIX:         %76 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !90
HELIX:         %120 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !136
HELIX:         %79 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !93
HELIX:         %139 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !155
HELIX:         store i32 1, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45
HELIX:         %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39
HELIX:         %69 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !83
HELIX:         %26 = load i32, i32* %17, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
HELIX:         %66 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !80
HELIX:         %128 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !144
HELIX:         store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169
HELIX:         %145 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !161
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132" -> "  call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132" -> "  call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132" -> "  call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97" -> "  call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97" -> "  call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @matvec_sub([5 x double]* %61, double* %72, double* %82), !note.noelle !37, !noelle.pdg.inst.id !97
HELIX:         call fastcc void @matmul_sub([5 x double]* %93, [5 x double]* %105, [5 x double]* %116), !note.noelle !37, !noelle.pdg.inst.id !132
HELIX:         call fastcc void @binvcrhs([5 x double]* %127, [5 x double]* %138, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %34 = icmp slt i32 %30, %33, !note.noelle !37, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %63 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !77"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %44 = sub nsw i32 %43, 1, !note.noelle !37, !noelle.pdg.inst.id !56"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %71 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !85"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %62 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !76"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %70 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !84"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %60 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !74"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %58 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !72"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %65 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !79"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %66 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !80"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %67 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !81"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %150 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !167"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %68 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !82"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %73 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !87"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %69 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !83"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %43 = load i32, i32* %42, align 4, !note.noelle !37, !noelle.pdg.inst.id !55"
HELIX:        "  %56 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !70" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %59 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !73" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %74 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !88" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %71 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !85" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %68 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !82" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %62 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !76" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %53 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !67" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %77 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !91" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %65 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !79" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  %150 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !167" -> "  store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %59 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !73"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %75 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !89"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %55 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !69"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  %26 = load i32, i32* %17, align 4, !note.noelle !28, !noelle.pdg.inst.id !31"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %72 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !86"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %77 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !91"
HELIX:        "  %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39" -> "  store i32 1, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  store i32 1, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %56 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !70"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39"
HELIX:        "  %55 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !69" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %58 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !72" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %61 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !75" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %70 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !84" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %76 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !90" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %52 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !66" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %64 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !78" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %73 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !87" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  %67 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !81" -> "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %76 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !90"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %54 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !68"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %37 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !47"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %48 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !61"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %42 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !54"
HELIX:        "  %54 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !68" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %63 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !77" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %60 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !74" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %72 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !86" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %69 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !83" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %66 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !80" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %57 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !71" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %75 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !89" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  %51 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !65" -> "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %64 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !78"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %53 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !67"
HELIX:        "  store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169" -> "  %74 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !88"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %57 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !71"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %32 = load i32, i32* %31, align 4, !note.noelle !37, !noelle.pdg.inst.id !41"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  %25 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !30"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %25 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !30"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %61 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !75"
HELIX:        "  store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63" -> "  %52 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !66"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %31 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !40"
HELIX:        "  br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34" -> "  %27 = icmp slt i32 %25, %26, !note.noelle !28, !noelle.pdg.inst.id !32"
HELIX:        "  br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59" -> "  %45 = icmp slt i32 %41, %44, !note.noelle !37, !noelle.pdg.inst.id !57"
HELIX:        "  br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45" -> "  %33 = sub nsw i32 %32, 1, !note.noelle !37, !noelle.pdg.inst.id !42"
HELIX:        "  store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49" -> "  %51 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !65"
HELIX:     Instructions that belong to the SS
HELIX:         %51 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !65
HELIX:         %33 = sub nsw i32 %32, 1, !note.noelle !37, !noelle.pdg.inst.id !42
HELIX:         %45 = icmp slt i32 %41, %44, !note.noelle !37, !noelle.pdg.inst.id !57
HELIX:         %27 = icmp slt i32 %25, %26, !note.noelle !28, !noelle.pdg.inst.id !32
HELIX:         %151 = add nsw i32 %150, 1, !note.noelle !37, !noelle.pdg.inst.id !168
HELIX:         %31 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !40
HELIX:         %52 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !66
HELIX:         %61 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !75
HELIX:         %25 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !30
HELIX:         %32 = load i32, i32* %31, align 4, !note.noelle !37, !noelle.pdg.inst.id !41
HELIX:         %57 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !71
HELIX:         %74 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !88
HELIX:         %53 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !67
HELIX:         %64 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !78
HELIX:         br i1 %45, label %50, label %46, !prof !58, !note.noelle !37, !noelle.pdg.inst.id !59
HELIX:         store i32 %38, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !49
HELIX:         %42 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !54
HELIX:         %41 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !53
HELIX:         %150 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !167
HELIX:         %67 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !81
HELIX:         %66 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !80
HELIX:         %65 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !79
HELIX:         %60 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !74
HELIX:         %68 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !82
HELIX:         br i1 %27, label %28, label %23, !prof !33, !note.noelle !28, !noelle.pdg.inst.id !34
HELIX:         %63 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !77
HELIX:         %54 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !68
HELIX:         %37 = load i32, i32* %14, align 4, !note.noelle !28, !noelle.pdg.inst.id !47
HELIX:         %62 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !76
HELIX:         %48 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !61
HELIX:         %73 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !87
HELIX:         %38 = add nsw i32 %37, 1, !note.noelle !28, !noelle.pdg.inst.id !48
HELIX:         %69 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !83
HELIX:         %43 = load i32, i32* %42, align 4, !note.noelle !37, !noelle.pdg.inst.id !55
HELIX:         store i32 1, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !51
HELIX:         %34 = icmp slt i32 %30, %33, !note.noelle !37, !noelle.pdg.inst.id !43
HELIX:         store i32 %49, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !63
HELIX:         %76 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !90
HELIX:         %44 = sub nsw i32 %43, 1, !note.noelle !37, !noelle.pdg.inst.id !56
HELIX:         %71 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !85
HELIX:         %49 = add nsw i32 %48, 1, !note.noelle !37, !noelle.pdg.inst.id !62
HELIX:         %58 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !72
HELIX:         %70 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !84
HELIX:         %59 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !73
HELIX:         %75 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !89
HELIX:         store i32 1, i32* %20, align 4, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         br i1 %34, label %39, label %35, !prof !44, !note.noelle !37, !noelle.pdg.inst.id !45
HELIX:         %30 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !39
HELIX:         %56 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !70
HELIX:         %26 = load i32, i32* %17, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
HELIX:         %55 = load i32, i32* %20, align 4, !note.noelle !37, !noelle.pdg.inst.id !69
HELIX:         %72 = load i32, i32* %14, align 4, !note.noelle !37, !noelle.pdg.inst.id !86
HELIX:         store i32 %151, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !169
HELIX:         %77 = load i32, i32* %11, align 4, !note.noelle !37, !noelle.pdg.inst.id !91
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141" -> "  call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141" -> "  call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115"
HELIX:        "  call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165" -> "  call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115"
HELIX:        "  call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141" -> "  call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115" -> "  call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115"
HELIX:        "  call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115" -> "  call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115"
HELIX:     Instructions that belong to the SS
HELIX:         call fastcc void @matvec_sub([5 x double]* %85, double* %93, double* %100), !note.noelle !37, !noelle.pdg.inst.id !115
HELIX:         call fastcc void @matmul_sub([5 x double]* %108, [5 x double]* %117, [5 x double]* %125), !note.noelle !37, !noelle.pdg.inst.id !141
HELIX:         call fastcc void @binvcrhs([5 x double]* %133, [5 x double]* %141, double* %148), !note.noelle !37, !noelle.pdg.inst.id !165
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @12(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = bitcast i8* %0 to [32 x i64]*
  %11 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 0
  %12 = bitcast i64* %11 to i32**
  %13 = load i32*, i32** %12
  %14 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 8
  %15 = bitcast i64* %14 to i32**
  %16 = load i32*, i32** %15
  %17 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 16
  %18 = bitcast i64* %17 to i32**
  %19 = load i32*, i32** %18
  %20 = getelementptr inbounds [32 x i64], [32 x i64]* %10, i64 0, i64 24
  %21 = bitcast i64* %20 to i32**
  %22 = load i32*, i32** %21
  %23 = bitcast i8* %1 to [0 x i64]*
  %24 = ptrtoint i8* %2 to i64
  %25 = add i64 0, %24
  %26 = inttoptr i64 %25 to i8*
  %27 = ptrtoint i8* %3 to i64
  %28 = add i64 0, %27
  %29 = inttoptr i64 %28 to i8*
  %30 = ptrtoint i8* %2 to i64
  %31 = add i64 64, %30
  %32 = inttoptr i64 %31 to i8*
  %33 = ptrtoint i8* %3 to i64
  %34 = add i64 64, %33
  %35 = inttoptr i64 %34 to i8*
  br label %42

36:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

37:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %38 = load i64, i64* %8
  %39 = bitcast i8* %29 to i32*, !noelle.pdg.inst.id !28
  %40 = call i32 @pthread_spin_unlock(i32* %39) #31, !noelle.pdg.inst.id !29
  %41 = icmp eq i64 %38, 0
  br i1 %41, label %SS1-wait, label %SS1-entry

42:                                               ; preds = %7, %57
  store i64 0, i64* %8
  store i64 0, i64* %9
  %43 = load i64, i64* %9
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %SS0-wait2, label %SS0-entry1

45:                                               ; preds = %SS-passed-checkexit
  store i32 1, i32* %22, align 4, !note.noelle !30, !noelle.pdg.inst.id !32
  %46 = load i64, i64* %8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %SS1-wait4, label %SS1-entry3

48:                                               ; preds = %SS1-entry3, %70
  %49 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !35
  %50 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 1, !noelle.pdg.inst.id !36
  %51 = load i32, i32* %50, align 4, !note.noelle !33, !noelle.pdg.inst.id !37
  %52 = sub nsw i32 %51, 1, !note.noelle !33, !noelle.pdg.inst.id !38
  %53 = icmp slt i32 %49, %52, !note.noelle !33, !noelle.pdg.inst.id !39
  br i1 %53, label %62, label %54, !prof !40, !note.noelle !33, !noelle.pdg.inst.id !41

54:                                               ; preds = %48
  %55 = bitcast i8* %35 to i32*, !noelle.pdg.inst.id !28
  %56 = call i32 @pthread_spin_unlock(i32* %55) #31, !noelle.pdg.inst.id !29
  br label %57, !note.noelle !30, !noelle.pdg.inst.id !42

57:                                               ; preds = %54
  %58 = load i32, i32* %16, align 4, !note.noelle !30, !noelle.pdg.inst.id !43
  %59 = add nsw i32 %58, 1, !note.noelle !30, !noelle.pdg.inst.id !44
  store i32 %59, i32* %16, align 4, !note.noelle !30, !noelle.pdg.inst.id !45
  %60 = bitcast i8* %29 to i32*, !noelle.pdg.inst.id !28
  %61 = call i32 @pthread_spin_unlock(i32* %60) #31, !noelle.pdg.inst.id !29
  br label %42, !note.noelle !30, !noelle.pdg.inst.id !46

62:                                               ; preds = %48
  store i32 1, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !47
  br label %63, !note.noelle !33, !noelle.pdg.inst.id !48

63:                                               ; preds = %172, %62
  %64 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !49
  %65 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !50
  %66 = load i32, i32* %65, align 4, !note.noelle !33, !noelle.pdg.inst.id !51
  %67 = sub nsw i32 %66, 1, !note.noelle !33, !noelle.pdg.inst.id !52
  %68 = icmp slt i32 %64, %67, !note.noelle !33, !noelle.pdg.inst.id !53
  br i1 %68, label %73, label %69, !prof !54, !note.noelle !33, !noelle.pdg.inst.id !55

69:                                               ; preds = %63
  br label %70, !note.noelle !33, !noelle.pdg.inst.id !56

70:                                               ; preds = %69
  %71 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !57
  %72 = add nsw i32 %71, 1, !note.noelle !33, !noelle.pdg.inst.id !58
  store i32 %72, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !59
  br label %48, !note.noelle !33, !noelle.pdg.inst.id !60

73:                                               ; preds = %63
  %74 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !61
  %75 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !62
  %76 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !63
  %77 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !64
  %78 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !65
  %79 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !66
  %80 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !67
  %81 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !68
  %82 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !69
  %83 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !70
  %84 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !71
  %85 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !72
  %86 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !73
  %87 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !74
  %88 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !75
  %89 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !76
  %90 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !77
  %91 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !78
  %92 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !79
  %93 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !80
  %94 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !81
  %95 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !82
  %96 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !83
  %97 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !84
  %98 = load i32, i32* %16, align 4, !note.noelle !33, !noelle.pdg.inst.id !85
  %99 = load i32, i32* %22, align 4, !note.noelle !33, !noelle.pdg.inst.id !86
  %100 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !87
  %101 = sext i32 %74 to i64, !note.noelle !33, !noelle.pdg.inst.id !88
  %102 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %101, !note.noelle !33, !noelle.pdg.inst.id !89
  %103 = sext i32 %75 to i64, !note.noelle !33, !noelle.pdg.inst.id !90
  %104 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %102, i64 0, i64 %103, !note.noelle !33, !noelle.pdg.inst.id !91
  %105 = sext i32 %76 to i64, !note.noelle !33, !noelle.pdg.inst.id !92
  %106 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %104, i64 0, i64 %105, !note.noelle !33, !noelle.pdg.inst.id !93
  %107 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %106, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !94
  %108 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %107, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !95
  %109 = sub nsw i32 %77, 1, !note.noelle !33, !noelle.pdg.inst.id !96
  %110 = sext i32 %109 to i64, !note.noelle !33, !noelle.pdg.inst.id !97
  %111 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %110, !note.noelle !33, !noelle.pdg.inst.id !98
  %112 = sext i32 %78 to i64, !note.noelle !33, !noelle.pdg.inst.id !99
  %113 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %111, i64 0, i64 %112, !note.noelle !33, !noelle.pdg.inst.id !100
  %114 = sext i32 %79 to i64, !note.noelle !33, !noelle.pdg.inst.id !101
  %115 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %113, i64 0, i64 %114, !note.noelle !33, !noelle.pdg.inst.id !102
  %116 = getelementptr inbounds [5 x double], [5 x double]* %115, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !103
  %117 = sext i32 %80 to i64, !note.noelle !33, !noelle.pdg.inst.id !104
  %118 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %117, !note.noelle !33, !noelle.pdg.inst.id !105
  %119 = sext i32 %81 to i64, !note.noelle !33, !noelle.pdg.inst.id !106
  %120 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %118, i64 0, i64 %119, !note.noelle !33, !noelle.pdg.inst.id !107
  %121 = sext i32 %82 to i64, !note.noelle !33, !noelle.pdg.inst.id !108
  %122 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %120, i64 0, i64 %121, !note.noelle !33, !noelle.pdg.inst.id !109
  %123 = getelementptr inbounds [5 x double], [5 x double]* %122, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !110
  call fastcc void @matvec_sub([5 x double]* %108, double* %116, double* %123), !note.noelle !33, !noelle.pdg.inst.id !111
  %124 = sext i32 %83 to i64, !note.noelle !33, !noelle.pdg.inst.id !112
  %125 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %124, !note.noelle !33, !noelle.pdg.inst.id !113
  %126 = sext i32 %84 to i64, !note.noelle !33, !noelle.pdg.inst.id !114
  %127 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %125, i64 0, i64 %126, !note.noelle !33, !noelle.pdg.inst.id !115
  %128 = sext i32 %85 to i64, !note.noelle !33, !noelle.pdg.inst.id !116
  %129 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %127, i64 0, i64 %128, !note.noelle !33, !noelle.pdg.inst.id !117
  %130 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %129, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !118
  %131 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %130, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !119
  %132 = sub nsw i32 %86, 1, !note.noelle !33, !noelle.pdg.inst.id !120
  %133 = sext i32 %132 to i64, !note.noelle !33, !noelle.pdg.inst.id !121
  %134 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %133, !note.noelle !33, !noelle.pdg.inst.id !122
  %135 = sext i32 %87 to i64, !note.noelle !33, !noelle.pdg.inst.id !123
  %136 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %134, i64 0, i64 %135, !note.noelle !33, !noelle.pdg.inst.id !124
  %137 = sext i32 %88 to i64, !note.noelle !33, !noelle.pdg.inst.id !125
  %138 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %136, i64 0, i64 %137, !note.noelle !33, !noelle.pdg.inst.id !126
  %139 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %138, i64 0, i64 2, !note.noelle !33, !noelle.pdg.inst.id !127
  %140 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %139, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !128
  %141 = sext i32 %89 to i64, !note.noelle !33, !noelle.pdg.inst.id !129
  %142 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %141, !note.noelle !33, !noelle.pdg.inst.id !130
  %143 = sext i32 %90 to i64, !note.noelle !33, !noelle.pdg.inst.id !131
  %144 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %142, i64 0, i64 %143, !note.noelle !33, !noelle.pdg.inst.id !132
  %145 = sext i32 %91 to i64, !note.noelle !33, !noelle.pdg.inst.id !133
  %146 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %144, i64 0, i64 %145, !note.noelle !33, !noelle.pdg.inst.id !134
  %147 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %146, i64 0, i64 1, !note.noelle !33, !noelle.pdg.inst.id !135
  %148 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %147, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !136
  call fastcc void @matmul_sub([5 x double]* %131, [5 x double]* %140, [5 x double]* %148), !note.noelle !33, !noelle.pdg.inst.id !137
  %149 = sext i32 %92 to i64, !note.noelle !33, !noelle.pdg.inst.id !138
  %150 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %149, !note.noelle !33, !noelle.pdg.inst.id !139
  %151 = sext i32 %93 to i64, !note.noelle !33, !noelle.pdg.inst.id !140
  %152 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %150, i64 0, i64 %151, !note.noelle !33, !noelle.pdg.inst.id !141
  %153 = sext i32 %94 to i64, !note.noelle !33, !noelle.pdg.inst.id !142
  %154 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %152, i64 0, i64 %153, !note.noelle !33, !noelle.pdg.inst.id !143
  %155 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %154, i64 0, i64 1, !note.noelle !33, !noelle.pdg.inst.id !144
  %156 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %155, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !145
  %157 = sext i32 %95 to i64, !note.noelle !33, !noelle.pdg.inst.id !146
  %158 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %157, !note.noelle !33, !noelle.pdg.inst.id !147
  %159 = sext i32 %96 to i64, !note.noelle !33, !noelle.pdg.inst.id !148
  %160 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %158, i64 0, i64 %159, !note.noelle !33, !noelle.pdg.inst.id !149
  %161 = sext i32 %97 to i64, !note.noelle !33, !noelle.pdg.inst.id !150
  %162 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %160, i64 0, i64 %161, !note.noelle !33, !noelle.pdg.inst.id !151
  %163 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %162, i64 0, i64 2, !note.noelle !33, !noelle.pdg.inst.id !152
  %164 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %163, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !153
  %165 = sext i32 %98 to i64, !note.noelle !33, !noelle.pdg.inst.id !154
  %166 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %165, !note.noelle !33, !noelle.pdg.inst.id !155
  %167 = sext i32 %99 to i64, !note.noelle !33, !noelle.pdg.inst.id !156
  %168 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %166, i64 0, i64 %167, !note.noelle !33, !noelle.pdg.inst.id !157
  %169 = sext i32 %100 to i64, !note.noelle !33, !noelle.pdg.inst.id !158
  %170 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %168, i64 0, i64 %169, !note.noelle !33, !noelle.pdg.inst.id !159
  %171 = getelementptr inbounds [5 x double], [5 x double]* %170, i64 0, i64 0, !note.noelle !33, !noelle.pdg.inst.id !160
  call fastcc void @binvcrhs([5 x double]* %156, [5 x double]* %164, double* %171), !note.noelle !33, !noelle.pdg.inst.id !161
  br label %172, !note.noelle !33, !noelle.pdg.inst.id !162

172:                                              ; preds = %73
  %173 = load i32, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !163
  %174 = add nsw i32 %173, 1, !note.noelle !33, !noelle.pdg.inst.id !164
  store i32 %174, i32* %13, align 4, !note.noelle !33, !noelle.pdg.inst.id !165
  br label %63, !note.noelle !33, !noelle.pdg.inst.id !166

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %175 = bitcast i8* %29 to i32*, !noelle.pdg.inst.id !28
  %176 = call i32 @pthread_spin_unlock(i32* %175) #31, !noelle.pdg.inst.id !29
  %177 = bitcast i8* %35 to i32*, !noelle.pdg.inst.id !28
  %178 = call i32 @pthread_spin_unlock(i32* %177) #31, !noelle.pdg.inst.id !29
  br label %36

SS0-wait:                                         ; preds = %SS1-entry
  %179 = bitcast i8* %26 to i32*, !noelle.pdg.inst.id !167
  %180 = call i32 @pthread_spin_lock(i32* %179) #31, !noelle.pdg.inst.id !168
  store i64 1, i64* %9
  br label %SS0-entry

SS1-entry:                                        ; preds = %37, %SS1-wait
  %181 = load i64, i64* %9
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %37
  %183 = bitcast i8* %32 to i32*, !noelle.pdg.inst.id !167
  %184 = call i32 @pthread_spin_lock(i32* %183) #31, !noelle.pdg.inst.id !168
  store i64 1, i64* %8
  br label %SS1-entry

SS0-entry1:                                       ; preds = %42, %SS0-wait2
  %185 = load i64, i64* %6
  %186 = icmp eq i64 1, %185
  br i1 %186, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %42
  %187 = bitcast i8* %26 to i32*, !noelle.pdg.inst.id !167
  %188 = call i32 @pthread_spin_lock(i32* %187) #31, !noelle.pdg.inst.id !168
  store i64 1, i64* %9
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %189 = load i32, i32* %16, align 4, !note.noelle !30, !noelle.pdg.inst.id !169
  %190 = load i32, i32* %19, align 4, !note.noelle !30, !noelle.pdg.inst.id !170
  %191 = icmp slt i32 %189, %190, !note.noelle !30, !noelle.pdg.inst.id !171
  br i1 %191, label %45, label %37, !prof !172, !note.noelle !30, !noelle.pdg.inst.id !173

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %192 = bitcast i8* %29 to i32*, !noelle.pdg.inst.id !28
  %193 = call i32 @pthread_spin_unlock(i32* %192) #31, !noelle.pdg.inst.id !29
  %194 = bitcast i8* %35 to i32*, !noelle.pdg.inst.id !28
  %195 = call i32 @pthread_spin_unlock(i32* %194) #31, !noelle.pdg.inst.id !29
  br label %36

SS1-entry3:                                       ; preds = %45, %SS1-wait4
  br label %48, !note.noelle !30, !noelle.pdg.inst.id !174

SS1-wait4:                                        ; preds = %45
  %196 = bitcast i8* %32 to i32*, !noelle.pdg.inst.id !167
  %197 = call i32 @pthread_spin_lock(i32* %196) #31, !noelle.pdg.inst.id !168
  store i64 1, i64* %8
  br label %SS1-entry3
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 153 has been parallelized
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Brian: FOUND AN EDGE from OUT!!
Brian: FOUND AN EDGE from IN!!
Parallelizer: LoopSelector: Start
Parallelizer: LoopSelector:   Order of loops and their maximum savings
Parallelizer: LoopSelector:    Loop 159 savings = 8.477035e-06%
Parallelizer: LoopSelector: End
Parallelizer: Start
Parallelizer:  Function = "y_backsubstitute"
Parallelizer:  Loop 159 = "  %10 = load i32, i32* %2, align 4, !note.noelle !529, !noelle.pdg.inst.id !130"
Parallelizer:  Nesting level = 1
DOALL: Checking if the loop is DOALL
DOALL:   Loop does not have an IV
HELIX: Start the parallelization
HELIX:   Number of threads to extract = 28
HELIX:   We found an SCC of type 0 of the loop that is non clonable and non commutative
HELIX:       Loop-carried data dependences
HELIX:         br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !61 --->   br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !61 via variable
HELIX:         br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !61 --->   %32 = load i32, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !150 via variable
HELIX:         store i32 %95, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !188 --->   store i32 0, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !190 via memory
HELIX:         %32 = load i32, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !150 --->   store i32 0, i32* %5, align 4, !note.noelle !533, !noelle.pdg.inst.id !190 via memory
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %18 = icmp slt i32 %14, %17, !note.noelle !533, !noelle.pdg.inst.id !124 via variable
HELIX:         store i32 %111, i32* %2, align 4, !note.noelle !529, !noelle.pdg.inst.id !38 --->   %84 = load i32, i32* %2, align 4, !note.noelle !533, !noelle.pdg.inst.id !153 via memory
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !47 --->   %23 = load i32, i32* %22, align 4, !note.noelle !533, !noelle.pdg.inst.id !110 via variable
HELIX:         br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !54 --->   %28 = load i32, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !220 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !47 --->   br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !47 via variable
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 via variable
HELIX:         store i32 %111, i32* %2, align 4, !note.noelle !529, !noelle.pdg.inst.id !38 --->   %68 = load i32, i32* %2, align 4, !note.noelle !533, !noelle.pdg.inst.id !237 via memory
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !47 --->   %21 = load i32, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !114 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !47 --->   %25 = icmp slt i32 %21, %24, !note.noelle !533, !noelle.pdg.inst.id !106 via variable
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %14 = load i32, i32* %1, align 4, !note.noelle !533, !noelle.pdg.inst.id !164 via variable
HELIX:         br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !54 --->   %29 = icmp slt i32 %28, 5, !note.noelle !533, !noelle.pdg.inst.id !101 via variable
HELIX:         %28 = load i32, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !220 --->   store i32 0, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !185 via memory
HELIX:         store i32 %99, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !57 --->   store i32 0, i32* %4, align 4, !note.noelle !533, !noelle.pdg.inst.id !185 via memory
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %17 = sub nsw i32 %16, 1, !note.noelle !533, !noelle.pdg.inst.id !126 via variable
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %15 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !274 via variable
HELIX:         store i32 %111, i32* %2, align 4, !note.noelle !529, !noelle.pdg.inst.id !38 --->   %51 = load i32, i32* %2, align 4, !note.noelle !533, !noelle.pdg.inst.id !156 via memory
HELIX:         br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !54 --->   br i1 %29, label %30, label %100, !prof !537, !note.noelle !533, !noelle.pdg.inst.id !54 via variable
HELIX:         %21 = load i32, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !114 --->   store i32 1, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !122 via memory
HELIX:         store i32 %103, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !171 --->   store i32 1, i32* %3, align 4, !note.noelle !533, !noelle.pdg.inst.id !122 via memory
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !47 --->   %22 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !112 via variable
HELIX:         br i1 %25, label %26, label %104, !prof !536, !note.noelle !533, !noelle.pdg.inst.id !47 --->   %24 = sub nsw i32 %23, 1, !note.noelle !533, !noelle.pdg.inst.id !108 via variable
HELIX:         br i1 %33, label %34, label %96, !prof !538, !note.noelle !533, !noelle.pdg.inst.id !61 --->   %33 = icmp slt i32 %32, 5, !note.noelle !533, !noelle.pdg.inst.id !148 via variable
HELIX:         store i32 %111, i32* %2, align 4, !note.noelle !529, !noelle.pdg.inst.id !38 --->   %38 = load i32, i32* %2, align 4, !note.noelle !533, !noelle.pdg.inst.id !92 via memory
HELIX:         br i1 %18, label %19, label %108, !prof !535, !note.noelle !533, !noelle.pdg.inst.id !40 --->   %16 = load i32, i32* %15, align 4, !note.noelle !533, !noelle.pdg.inst.id !331 via variable
HELIX:  Cloning loop in task
HELIX:  Spilling loop carried dependencies
HELIX:  Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %100 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !117"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %97 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !114"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %87 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !104"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %77 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !94"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %90 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !107"
HELIX:        "  %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %44 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !51"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %33 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %33 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %123 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !140"
HELIX:        "  %104 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !121" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %74 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !91" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %87 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !104" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %120 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !137" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %74 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !91"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %107 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !124"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %129 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !146"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %114 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !131"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %104 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !121"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %83 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !100"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %71 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !87"
HELIX:        "  %129 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !146" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %83 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !100" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %71 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !87" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %97 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !114" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %55 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !65"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !44"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %120 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !137"
HELIX:        "  %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %100 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !117" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %133 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !151" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %114 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !131" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  store i32 1, i32* %25, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43" -> "  store i32 1, i32* %25, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85"
HELIX:        "  %77 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !94" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %107 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !124" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %123 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !140" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %90 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !107" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %133 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !151"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74"
HELIX:        "  %97 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !114" -> "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %129 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !146" -> "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %83 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !100" -> "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:     Instructions that belong to the SS
HELIX:         store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89
HELIX:         br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74
HELIX:         %133 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !151
HELIX:         %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58
HELIX:         store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53
HELIX:         br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85
HELIX:         %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         store i32 1, i32* %25, align 4, !note.noelle !28, !noelle.pdg.inst.id !39
HELIX:         %126 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !143
HELIX:         %45 = add nsw i32 %44, -1, !note.noelle !28, !noelle.pdg.inst.id !52
HELIX:         store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55
HELIX:         store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80
HELIX:         %120 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !137
HELIX:         %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61
HELIX:         %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43
HELIX:         %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72
HELIX:         %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76
HELIX:         %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !44
HELIX:         %56 = add nsw i32 %55, 1, !note.noelle !41, !noelle.pdg.inst.id !66
HELIX:         store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153
HELIX:         %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71
HELIX:         %33 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %64 = add nsw i32 %63, 1, !note.noelle !41, !noelle.pdg.inst.id !77
HELIX:         br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49
HELIX:         store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78
HELIX:         %90 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !107
HELIX:         %77 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !94
HELIX:         %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46
HELIX:         %134 = add nsw i32 %133, 1, !note.noelle !41, !noelle.pdg.inst.id !152
HELIX:         %123 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !140
HELIX:         %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83
HELIX:         %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97
HELIX:         br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63
HELIX:         %100 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !117
HELIX:         %44 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !51
HELIX:         %114 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !131
HELIX:         %87 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !104
HELIX:         %97 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !114
HELIX:         %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82
HELIX:         %111 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !128
HELIX:         %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45
HELIX:         %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59
HELIX:         %129 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !146
HELIX:         %93 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !110
HELIX:         store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67
HELIX:         %72 = add nsw i32 %71, 1, !note.noelle !41, !noelle.pdg.inst.id !88
HELIX:         %74 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !91
HELIX:         %107 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !124
HELIX:         br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38
HELIX:         %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60
HELIX:         %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47
HELIX:         %104 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !121
HELIX:         %83 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !100
HELIX:         %71 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !87
HELIX:         store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69
HELIX:         %55 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !65
HELIX:         %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %119, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %86 = load double, double* %85, align 8, !note.noelle !41, !noelle.pdg.inst.id !103"
HELIX:        "  store double %119, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %117 = load double, double* %116, align 8, !note.noelle !41, !noelle.pdg.inst.id !134"
HELIX:     Instructions that belong to the SS
HELIX:         %117 = load double, double* %116, align 8, !note.noelle !41, !noelle.pdg.inst.id !134
HELIX:         store double %119, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149
HELIX:         %118 = fmul double %103, %117, !note.noelle !41, !noelle.pdg.inst.id !135
HELIX:         %119 = fsub double %86, %118, !note.noelle !41, !noelle.pdg.inst.id !136
HELIX:         %86 = load double, double* %85, align 8, !note.noelle !41, !noelle.pdg.inst.id !103
HELIX:  Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 2
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:   Sequential segment 0
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %82 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !99"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %81 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !98"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %78 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !95"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %75 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !92"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %79 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !96"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106" -> "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %44 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !51"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %33 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %33 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !35"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %88 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !105"
HELIX:        "  %83 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !100" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %74 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !91" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %78 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !95" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  %87 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !104" -> "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %74 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !91"
HELIX:        "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53" -> "  %84 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !101"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %90 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !107"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %86 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !103"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %83 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !100"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %77 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !94"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %71 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !87"
HELIX:        "  %90 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !107" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %77 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !94" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %71 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !87" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  %81 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !98" -> "  store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %55 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !65"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57"
HELIX:        "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89" -> "  %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !44"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72"
HELIX:        "  br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49" -> "  %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  %87 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !104"
HELIX:        "  %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %82 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !99" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %133 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !151" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %86 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !103" -> "  store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80"
HELIX:        "  %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57" -> "  store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55"
HELIX:        "  store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78" -> "  %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106"
HELIX:        "  store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67" -> "  store i32 1, i32* %25, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43" -> "  store i32 1, i32* %25, align 4, !note.noelle !28, !noelle.pdg.inst.id !39"
HELIX:        "  br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38" -> "  %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36"
HELIX:        "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85" -> "  br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85"
HELIX:        "  %75 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !92" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %84 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !101" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %88 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !105" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  %79 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !96" -> "  store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53"
HELIX:        "  br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63" -> "  %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58"
HELIX:        "  store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153" -> "  %133 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !151"
HELIX:        "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74" -> "  br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74"
HELIX:        "  %81 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !98" -> "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %90 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !107" -> "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:        "  %77 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !94" -> "  store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89"
HELIX:     Instructions that belong to the SS
HELIX:         store i32 %72, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !89
HELIX:         br i1 %60, label %65, label %61, !prof !73, !note.noelle !41, !noelle.pdg.inst.id !74
HELIX:         %133 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !151
HELIX:         %49 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !58
HELIX:         store i32 %45, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !53
HELIX:         br i1 %68, label %73, label %69, !prof !84, !note.noelle !41, !noelle.pdg.inst.id !85
HELIX:         %34 = icmp sge i32 %33, 0, !note.noelle !28, !noelle.pdg.inst.id !36
HELIX:         store i32 1, i32* %25, align 4, !note.noelle !28, !noelle.pdg.inst.id !39
HELIX:         %89 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !106
HELIX:         %45 = add nsw i32 %44, -1, !note.noelle !28, !noelle.pdg.inst.id !52
HELIX:         store i32 1, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !55
HELIX:         store i32 0, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !80
HELIX:         %87 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !104
HELIX:         %52 = icmp slt i32 %48, %51, !note.noelle !41, !noelle.pdg.inst.id !61
HELIX:         %37 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !43
HELIX:         %60 = icmp slt i32 %59, 5, !note.noelle !41, !noelle.pdg.inst.id !72
HELIX:         %63 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !76
HELIX:         %38 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !44
HELIX:         %56 = add nsw i32 %55, 1, !note.noelle !41, !noelle.pdg.inst.id !66
HELIX:         store i32 %134, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !153
HELIX:         %59 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !71
HELIX:         %33 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !35
HELIX:         %64 = add nsw i32 %63, 1, !note.noelle !41, !noelle.pdg.inst.id !77
HELIX:         br i1 %41, label %46, label %42, !prof !48, !note.noelle !41, !noelle.pdg.inst.id !49
HELIX:         store i32 %64, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !78
HELIX:         %79 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !96
HELIX:         %75 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !92
HELIX:         %40 = sub nsw i32 %39, 1, !note.noelle !41, !noelle.pdg.inst.id !46
HELIX:         %134 = add nsw i32 %133, 1, !note.noelle !41, !noelle.pdg.inst.id !152
HELIX:         %88 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !105
HELIX:         %68 = icmp slt i32 %67, 5, !note.noelle !41, !noelle.pdg.inst.id !83
HELIX:         %76 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !93
HELIX:         br i1 %52, label %57, label %53, !prof !62, !note.noelle !41, !noelle.pdg.inst.id !63
HELIX:         %82 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !99
HELIX:         %44 = load i32, i32* %16, align 4, !note.noelle !28, !noelle.pdg.inst.id !51
HELIX:         %86 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !103
HELIX:         %78 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !95
HELIX:         %81 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !98
HELIX:         %67 = load i32, i32* %19, align 4, !note.noelle !41, !noelle.pdg.inst.id !82
HELIX:         %85 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !102
HELIX:         %39 = load i32, i32* %38, align 4, !note.noelle !41, !noelle.pdg.inst.id !45
HELIX:         %50 = load i32, i32* %49, align 4, !note.noelle !41, !noelle.pdg.inst.id !59
HELIX:         %90 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !107
HELIX:         %80 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !97
HELIX:         store i32 %56, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !67
HELIX:         %72 = add nsw i32 %71, 1, !note.noelle !41, !noelle.pdg.inst.id !88
HELIX:         %74 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !91
HELIX:         %84 = load i32, i32* %16, align 4, !note.noelle !41, !noelle.pdg.inst.id !101
HELIX:         br i1 %34, label %35, label %31, !prof !37, !note.noelle !28, !noelle.pdg.inst.id !38
HELIX:         %51 = sub nsw i32 %50, 1, !note.noelle !41, !noelle.pdg.inst.id !60
HELIX:         %41 = icmp slt i32 %37, %40, !note.noelle !41, !noelle.pdg.inst.id !47
HELIX:         %83 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !100
HELIX:         %77 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !94
HELIX:         %71 = load i32, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !87
HELIX:         store i32 0, i32* %28, align 4, !note.noelle !41, !noelle.pdg.inst.id !69
HELIX:         %55 = load i32, i32* %25, align 4, !note.noelle !41, !noelle.pdg.inst.id !65
HELIX:         %48 = load i32, i32* %22, align 4, !note.noelle !41, !noelle.pdg.inst.id !57
HELIX:   Sequential segment 1
HELIX:     SCCs included in the current sequential segment
HELIX:       Type = 0
HELIX:       Loop-carried data dependences
HELIX:        "  store double %123, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %99 = load double, double* %98, align 8, !note.noelle !41, !noelle.pdg.inst.id !116"
HELIX:        "  store double %123, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149" -> "  %121 = load double, double* %120, align 8, !note.noelle !41, !noelle.pdg.inst.id !138"
HELIX:     Instructions that belong to the SS
HELIX:         %121 = load double, double* %120, align 8, !note.noelle !41, !noelle.pdg.inst.id !138
HELIX:         store double %123, double* %131, align 8, !note.noelle !41, !noelle.pdg.inst.id !149
HELIX:         %122 = fmul double %111, %121, !note.noelle !41, !noelle.pdg.inst.id !139
HELIX:         %123 = fsub double %99, %122, !note.noelle !41, !noelle.pdg.inst.id !140
HELIX:         %99 = load double, double* %98, align 8, !note.noelle !41, !noelle.pdg.inst.id !116
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @14(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !30
  %11 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !31
  %12 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !32
  %13 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !33
  %14 = alloca i32, align 4, !note.noelle !28, !noelle.pdg.inst.id !34
  %15 = bitcast i8* %0 to [40 x i64]*
  %16 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 0
  %17 = bitcast i64* %16 to i32**
  %18 = load i32*, i32** %17
  %19 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 8
  %20 = bitcast i64* %19 to i32**
  %21 = load i32*, i32** %20
  %22 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 16
  %23 = bitcast i64* %22 to i32**
  %24 = load i32*, i32** %23
  %25 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 24
  %26 = bitcast i64* %25 to i32**
  %27 = load i32*, i32** %26
  %28 = getelementptr inbounds [40 x i64], [40 x i64]* %15, i64 0, i64 32
  %29 = bitcast i64* %28 to i32**
  %30 = load i32*, i32** %29
  %31 = bitcast i8* %1 to [0 x i64]*
  %32 = ptrtoint i8* %2 to i64
  %33 = add i64 0, %32
  %34 = inttoptr i64 %33 to i8*
  %35 = ptrtoint i8* %3 to i64
  %36 = add i64 0, %35
  %37 = inttoptr i64 %36 to i8*
  %38 = ptrtoint i8* %2 to i64
  %39 = add i64 64, %38
  %40 = inttoptr i64 %39 to i8*
  %41 = ptrtoint i8* %3 to i64
  %42 = add i64 64, %41
  %43 = inttoptr i64 %42 to i8*
  br label %50

44:                                               ; preds = %SS-failed-checkexit, %SS0-entry
  ret void

45:                                               ; preds = %SS-passed-checkexit
  store i64 1, i64* %6
  %46 = load i64, i64* %8
  %47 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %48 = call i32 @pthread_spin_unlock(i32* %47) #31, !noelle.pdg.inst.id !36
  %49 = icmp eq i64 %46, 0
  br i1 %49, label %SS1-wait, label %SS1-entry

50:                                               ; preds = %7, %65
  store i64 0, i64* %8
  store i64 0, i64* %9
  %51 = load i64, i64* %9
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %SS0-wait2, label %SS0-entry1

53:                                               ; preds = %SS-passed-checkexit
  store i32 1, i32* %27, align 4, !note.noelle !28, !noelle.pdg.inst.id !37
  %54 = load i64, i64* %8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %SS1-wait4, label %SS1-entry3

56:                                               ; preds = %78, %SS1-entry3
  %57 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !40
  %58 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 0, !noelle.pdg.inst.id !41
  %59 = load i32, i32* %58, align 4, !note.noelle !38, !noelle.pdg.inst.id !42
  %60 = sub nsw i32 %59, 1, !note.noelle !38, !noelle.pdg.inst.id !43
  %61 = icmp slt i32 %57, %60, !note.noelle !38, !noelle.pdg.inst.id !44
  br i1 %61, label %70, label %62, !prof !45, !note.noelle !38, !noelle.pdg.inst.id !46

62:                                               ; preds = %56
  %63 = bitcast i8* %43 to i32*, !noelle.pdg.inst.id !35
  %64 = call i32 @pthread_spin_unlock(i32* %63) #31, !noelle.pdg.inst.id !36
  br label %65, !note.noelle !28, !noelle.pdg.inst.id !47

65:                                               ; preds = %62
  %66 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !48
  %67 = add nsw i32 %66, -1, !note.noelle !28, !noelle.pdg.inst.id !49
  store i32 %67, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !50
  %68 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %69 = call i32 @pthread_spin_unlock(i32* %68) #31, !noelle.pdg.inst.id !36
  br label %50, !note.noelle !28, !noelle.pdg.inst.id !51

70:                                               ; preds = %56
  store i32 1, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !52
  br label %71, !note.noelle !38, !noelle.pdg.inst.id !53

71:                                               ; preds = %70, %86
  %72 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !54
  %73 = getelementptr [3 x i32], [3 x i32]* @grid_points, i64 0, i64 2, !noelle.pdg.inst.id !55
  %74 = load i32, i32* %73, align 4, !note.noelle !38, !noelle.pdg.inst.id !56
  %75 = sub nsw i32 %74, 1, !note.noelle !38, !noelle.pdg.inst.id !57
  %76 = icmp slt i32 %72, %75, !note.noelle !38, !noelle.pdg.inst.id !58
  br i1 %76, label %81, label %77, !prof !59, !note.noelle !38, !noelle.pdg.inst.id !60

77:                                               ; preds = %71
  br label %78, !note.noelle !38, !noelle.pdg.inst.id !61

78:                                               ; preds = %77
  %79 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !62
  %80 = add nsw i32 %79, 1, !note.noelle !38, !noelle.pdg.inst.id !63
  store i32 %80, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !64
  br label %56, !note.noelle !38, !noelle.pdg.inst.id !65

81:                                               ; preds = %71
  store i32 0, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !66
  br label %82, !note.noelle !38, !noelle.pdg.inst.id !67

82:                                               ; preds = %81, %94
  %83 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !68
  %84 = icmp slt i32 %83, 5, !note.noelle !38, !noelle.pdg.inst.id !69
  br i1 %84, label %89, label %85, !prof !70, !note.noelle !38, !noelle.pdg.inst.id !71

85:                                               ; preds = %82
  br label %86, !note.noelle !38, !noelle.pdg.inst.id !72

86:                                               ; preds = %85
  %87 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !73
  %88 = add nsw i32 %87, 1, !note.noelle !38, !noelle.pdg.inst.id !74
  store i32 %88, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !75
  br label %71, !note.noelle !38, !noelle.pdg.inst.id !76

89:                                               ; preds = %82
  store i32 0, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !77
  br label %90, !note.noelle !38, !noelle.pdg.inst.id !78

90:                                               ; preds = %156, %89
  %91 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !79
  %92 = icmp slt i32 %91, 5, !note.noelle !38, !noelle.pdg.inst.id !80
  br i1 %92, label %97, label %93, !prof !81, !note.noelle !38, !noelle.pdg.inst.id !82

93:                                               ; preds = %90
  br label %94, !note.noelle !38, !noelle.pdg.inst.id !83

94:                                               ; preds = %93
  %95 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !84
  %96 = add nsw i32 %95, 1, !note.noelle !38, !noelle.pdg.inst.id !85
  store i32 %96, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !86
  br label %82, !note.noelle !38, !noelle.pdg.inst.id !87

97:                                               ; preds = %90
  %98 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !88
  %99 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !89
  %100 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !90
  %101 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !91
  %102 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !92
  %103 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !93
  %104 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !94
  %105 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !95
  %106 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !96
  %107 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !97
  %108 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !98
  %109 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !99
  %110 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !100
  %111 = load i32, i32* %27, align 4, !note.noelle !38, !noelle.pdg.inst.id !101
  %112 = load i32, i32* %18, align 4, !note.noelle !38, !noelle.pdg.inst.id !102
  %113 = load i32, i32* %24, align 4, !note.noelle !38, !noelle.pdg.inst.id !103
  %114 = load i32, i32* %30, align 4, !note.noelle !38, !noelle.pdg.inst.id !104
  %115 = sext i32 %98 to i64, !note.noelle !38, !noelle.pdg.inst.id !105
  %116 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %115, !note.noelle !38, !noelle.pdg.inst.id !106
  %117 = sext i32 %99 to i64, !note.noelle !38, !noelle.pdg.inst.id !107
  %118 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %116, i64 0, i64 %117, !note.noelle !38, !noelle.pdg.inst.id !108
  %119 = sext i32 %100 to i64, !note.noelle !38, !noelle.pdg.inst.id !109
  %120 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %118, i64 0, i64 %119, !note.noelle !38, !noelle.pdg.inst.id !110
  %121 = sext i32 %101 to i64, !note.noelle !38, !noelle.pdg.inst.id !111
  %122 = getelementptr inbounds [5 x double], [5 x double]* %120, i64 0, i64 %121, !note.noelle !38, !noelle.pdg.inst.id !112
  %123 = load double, double* %122, align 8, !note.noelle !38, !noelle.pdg.inst.id !113
  %124 = sext i32 %102 to i64, !note.noelle !38, !noelle.pdg.inst.id !114
  %125 = getelementptr inbounds [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]], [13 x [13 x [13 x [3 x [5 x [5 x double]]]]]]* @lhs, i64 0, i64 %124, !note.noelle !38, !noelle.pdg.inst.id !115
  %126 = sext i32 %103 to i64, !note.noelle !38, !noelle.pdg.inst.id !116
  %127 = getelementptr inbounds [13 x [13 x [3 x [5 x [5 x double]]]]], [13 x [13 x [3 x [5 x [5 x double]]]]]* %125, i64 0, i64 %126, !note.noelle !38, !noelle.pdg.inst.id !117
  %128 = sext i32 %104 to i64, !note.noelle !38, !noelle.pdg.inst.id !118
  %129 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]], [13 x [3 x [5 x [5 x double]]]]* %127, i64 0, i64 %128, !note.noelle !38, !noelle.pdg.inst.id !119
  %130 = getelementptr inbounds [3 x [5 x [5 x double]]], [3 x [5 x [5 x double]]]* %129, i64 0, i64 2, !note.noelle !38, !noelle.pdg.inst.id !120
  %131 = sext i32 %105 to i64, !note.noelle !38, !noelle.pdg.inst.id !121
  %132 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]* %130, i64 0, i64 %131, !note.noelle !38, !noelle.pdg.inst.id !122
  %133 = sext i32 %106 to i64, !note.noelle !38, !noelle.pdg.inst.id !123
  %134 = getelementptr inbounds [5 x double], [5 x double]* %132, i64 0, i64 %133, !note.noelle !38, !noelle.pdg.inst.id !124
  %135 = load double, double* %134, align 8, !note.noelle !38, !noelle.pdg.inst.id !125
  %136 = sext i32 %107 to i64, !note.noelle !38, !noelle.pdg.inst.id !126
  %137 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %136, !note.noelle !38, !noelle.pdg.inst.id !127
  %138 = add nsw i32 %108, 1, !note.noelle !38, !noelle.pdg.inst.id !128
  %139 = sext i32 %138 to i64, !note.noelle !38, !noelle.pdg.inst.id !129
  %140 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %137, i64 0, i64 %139, !note.noelle !38, !noelle.pdg.inst.id !130
  %141 = sext i32 %109 to i64, !note.noelle !38, !noelle.pdg.inst.id !131
  %142 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %140, i64 0, i64 %141, !note.noelle !38, !noelle.pdg.inst.id !132
  %143 = sext i32 %110 to i64, !note.noelle !38, !noelle.pdg.inst.id !133
  %144 = getelementptr inbounds [5 x double], [5 x double]* %142, i64 0, i64 %143, !note.noelle !38, !noelle.pdg.inst.id !134
  %145 = load double, double* %144, align 8, !note.noelle !38, !noelle.pdg.inst.id !135
  %146 = fmul double %135, %145, !note.noelle !38, !noelle.pdg.inst.id !136
  %147 = fsub double %123, %146, !note.noelle !38, !noelle.pdg.inst.id !137
  %148 = sext i32 %111 to i64, !note.noelle !38, !noelle.pdg.inst.id !138
  %149 = getelementptr inbounds [13 x [13 x [13 x [5 x double]]]], [13 x [13 x [13 x [5 x double]]]]* @rhs, i64 0, i64 %148, !note.noelle !38, !noelle.pdg.inst.id !139
  %150 = sext i32 %112 to i64, !note.noelle !38, !noelle.pdg.inst.id !140
  %151 = getelementptr inbounds [13 x [13 x [5 x double]]], [13 x [13 x [5 x double]]]* %149, i64 0, i64 %150, !note.noelle !38, !noelle.pdg.inst.id !141
  %152 = sext i32 %113 to i64, !note.noelle !38, !noelle.pdg.inst.id !142
  %153 = getelementptr inbounds [13 x [5 x double]], [13 x [5 x double]]* %151, i64 0, i64 %152, !note.noelle !38, !noelle.pdg.inst.id !143
  %154 = sext i32 %114 to i64, !note.noelle !38, !noelle.pdg.inst.id !144
  %155 = getelementptr inbounds [5 x double], [5 x double]* %153, i64 0, i64 %154, !note.noelle !38, !noelle.pdg.inst.id !145
  store double %147, double* %155, align 8, !note.noelle !38, !noelle.pdg.inst.id !146
  br label %156, !note.noelle !38, !noelle.pdg.inst.id !147

156:                                              ; preds = %97
  %157 = load i32, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !148
  %158 = add nsw i32 %157, 1, !note.noelle !38, !noelle.pdg.inst.id !149
  store i32 %158, i32* %21, align 4, !note.noelle !38, !noelle.pdg.inst.id !150
  br label %90, !note.noelle !38, !noelle.pdg.inst.id !151

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  %159 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %160 = call i32 @pthread_spin_unlock(i32* %159) #31, !noelle.pdg.inst.id !36
  %161 = bitcast i8* %43 to i32*, !noelle.pdg.inst.id !35
  %162 = call i32 @pthread_spin_unlock(i32* %161) #31, !noelle.pdg.inst.id !36
  br label %44

SS0-wait:                                         ; preds = %SS1-entry
  %163 = bitcast i8* %34 to i32*, !noelle.pdg.inst.id !152
  %164 = call i32 @pthread_spin_lock(i32* %163) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %9
  br label %SS0-entry

SS1-entry:                                        ; preds = %45, %SS1-wait
  %165 = load i64, i64* %9
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %45
  %167 = bitcast i8* %40 to i32*, !noelle.pdg.inst.id !152
  %168 = call i32 @pthread_spin_lock(i32* %167) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %8
  br label %SS1-entry

SS0-entry1:                                       ; preds = %50, %SS0-wait2
  %169 = load i64, i64* %6
  %170 = icmp eq i64 1, %169
  br i1 %170, label %SS-failed-checkexit, label %SS-passed-checkexit

SS0-wait2:                                        ; preds = %50
  %171 = bitcast i8* %34 to i32*, !noelle.pdg.inst.id !152
  %172 = call i32 @pthread_spin_lock(i32* %171) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %9
  br label %SS0-entry1

SS-passed-checkexit:                              ; preds = %SS0-entry1
  %173 = load i32, i32* %18, align 4, !note.noelle !28, !noelle.pdg.inst.id !154
  %174 = icmp sge i32 %173, 0, !note.noelle !28, !noelle.pdg.inst.id !155
  br i1 %174, label %53, label %45, !prof !156, !note.noelle !28, !noelle.pdg.inst.id !157

SS-failed-checkexit:                              ; preds = %SS0-entry1
  %175 = bitcast i8* %37 to i32*, !noelle.pdg.inst.id !35
  %176 = call i32 @pthread_spin_unlock(i32* %175) #31, !noelle.pdg.inst.id !36
  %177 = bitcast i8* %43 to i32*, !noelle.pdg.inst.id !35
  %178 = call i32 @pthread_spin_unlock(i32* %177) #31, !noelle.pdg.inst.id !36
  br label %44

SS1-entry3:                                       ; preds = %53, %SS1-wait4
  br label %56, !note.noelle !28, !noelle.pdg.inst.id !158

SS1-wait4:                                        ; preds = %53
  %179 = bitcast i8* %40 to i32*, !noelle.pdg.inst.id !152
  %180 = call i32 @pthread_spin_lock(i32* %179) #31, !noelle.pdg.inst.id !153
  store i64 1, i64* %8
  br label %SS1-entry3
}

Parallelizer:  Link the parallelize loop
Parallelizer: Exit
Parallelizer:    Loop 159 has been parallelized
Parallelizer: Exit
